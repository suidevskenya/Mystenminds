(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([typeof document === "object" ? document.currentScript : undefined, {

"[project]/node_modules/@mysten/sui/dist/esm/utils/suins.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "isValidSuiNSName": (()=>isValidSuiNSName),
    "normalizeSuiNSName": (()=>normalizeSuiNSName)
});
const SUI_NS_NAME_REGEX = /^(?!.*(^(?!@)|[-.@])($|[-.@]))(?:[a-z0-9-]{0,63}(?:\.[a-z0-9-]{0,63})*)?@[a-z0-9-]{0,63}$/i;
const SUI_NS_DOMAIN_REGEX = /^(?!.*(^|[-.])($|[-.]))(?:[a-z0-9-]{0,63}\.)+sui$/i;
const MAX_SUI_NS_NAME_LENGTH = 235;
function isValidSuiNSName(name) {
    if (name.length > MAX_SUI_NS_NAME_LENGTH) {
        return false;
    }
    if (name.includes("@")) {
        return SUI_NS_NAME_REGEX.test(name);
    }
    return SUI_NS_DOMAIN_REGEX.test(name);
}
function normalizeSuiNSName(name, format = "at") {
    const lowerCase = name.toLowerCase();
    let parts;
    if (lowerCase.includes("@")) {
        if (!SUI_NS_NAME_REGEX.test(lowerCase)) {
            throw new Error(`Invalid SuiNS name ${name}`);
        }
        const [labels, domain] = lowerCase.split("@");
        parts = [
            ...labels ? labels.split(".") : [],
            domain
        ];
    } else {
        if (!SUI_NS_DOMAIN_REGEX.test(lowerCase)) {
            throw new Error(`Invalid SuiNS name ${name}`);
        }
        parts = lowerCase.split(".").slice(0, -1);
    }
    if (format === "dot") {
        return `${parts.join(".")}.sui`;
    }
    return `${parts.slice(0, -1).join(".")}@${parts[parts.length - 1]}`;
}
;
 //# sourceMappingURL=suins.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/utils/move-registry.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "isValidNamedPackage": (()=>isValidNamedPackage),
    "isValidNamedType": (()=>isValidNamedType)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$suins$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/suins.js [app-client] (ecmascript)");
;
const NAME_PATTERN = /^([a-z0-9]+(?:-[a-z0-9]+)*)$/;
const VERSION_REGEX = /^\d+$/;
const MAX_APP_SIZE = 64;
const NAME_SEPARATOR = "/";
const isValidNamedPackage = (name)=>{
    const parts = name.split(NAME_SEPARATOR);
    if (parts.length < 2 || parts.length > 3) return false;
    const [org, app, version] = parts;
    if (version !== void 0 && !VERSION_REGEX.test(version)) return false;
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$suins$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidSuiNSName"])(org)) return false;
    return NAME_PATTERN.test(app) && app.length < MAX_APP_SIZE;
};
const isValidNamedType = (type)=>{
    const splitType = type.split(/::|<|>|,/);
    for (const t of splitType){
        if (t.includes(NAME_SEPARATOR) && !isValidNamedPackage(t)) return false;
    }
    return true;
};
;
 //# sourceMappingURL=move-registry.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "SUI_ADDRESS_LENGTH": (()=>SUI_ADDRESS_LENGTH),
    "isValidSuiAddress": (()=>isValidSuiAddress),
    "isValidSuiObjectId": (()=>isValidSuiObjectId),
    "isValidTransactionDigest": (()=>isValidTransactionDigest),
    "normalizeStructTag": (()=>normalizeStructTag),
    "normalizeSuiAddress": (()=>normalizeSuiAddress),
    "normalizeSuiObjectId": (()=>normalizeSuiObjectId),
    "parseStructTag": (()=>parseStructTag)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b58$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b58.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$move$2d$registry$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/move-registry.js [app-client] (ecmascript)");
;
;
const TX_DIGEST_LENGTH = 32;
function isValidTransactionDigest(value) {
    try {
        const buffer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b58$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase58"])(value);
        return buffer.length === TX_DIGEST_LENGTH;
    } catch (e) {
        return false;
    }
}
const SUI_ADDRESS_LENGTH = 32;
function isValidSuiAddress(value) {
    return isHex(value) && getHexByteLength(value) === SUI_ADDRESS_LENGTH;
}
function isValidSuiObjectId(value) {
    return isValidSuiAddress(value);
}
function parseTypeTag(type) {
    if (!type.includes("::")) return type;
    return parseStructTag(type);
}
function parseStructTag(type) {
    const [address, module] = type.split("::");
    const isMvrPackage = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$move$2d$registry$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidNamedPackage"])(address);
    const rest = type.slice(address.length + module.length + 4);
    const name = rest.includes("<") ? rest.slice(0, rest.indexOf("<")) : rest;
    const typeParams = rest.includes("<") ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["splitGenericParameters"])(rest.slice(rest.indexOf("<") + 1, rest.lastIndexOf(">"))).map((typeParam)=>parseTypeTag(typeParam.trim())) : [];
    return {
        address: isMvrPackage ? address : normalizeSuiAddress(address),
        module,
        name,
        typeParams
    };
}
function normalizeStructTag(type) {
    const { address, module, name, typeParams } = typeof type === "string" ? parseStructTag(type) : type;
    const formattedTypeParams = typeParams?.length > 0 ? `<${typeParams.map((typeParam)=>typeof typeParam === "string" ? typeParam : normalizeStructTag(typeParam)).join(",")}>` : "";
    return `${address}::${module}::${name}${formattedTypeParams}`;
}
function normalizeSuiAddress(value, forceAdd0x = false) {
    let address = value.toLowerCase();
    if (!forceAdd0x && address.startsWith("0x")) {
        address = address.slice(2);
    }
    return `0x${address.padStart(SUI_ADDRESS_LENGTH * 2, "0")}`;
}
function normalizeSuiObjectId(value, forceAdd0x = false) {
    return normalizeSuiAddress(value, forceAdd0x);
}
function isHex(value) {
    return /^(0x|0X)?[a-fA-F0-9]+$/.test(value) && value.length % 2 === 0;
}
function getHexByteLength(value) {
    return /^(0x|0X)/.test(value) ? (value.length - 2) / 2 : value.length / 2;
}
;
 //# sourceMappingURL=sui-types.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/transactions/data/internal.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "$Intent": (()=>$Intent),
    "Argument": (()=>Argument),
    "BCSBytes": (()=>BCSBytes),
    "Command": (()=>Command),
    "GasData": (()=>GasData),
    "JsonU64": (()=>JsonU64),
    "NormalizedCallArg": (()=>NormalizedCallArg),
    "ObjectArg": (()=>ObjectArg),
    "ObjectID": (()=>ObjectID),
    "ObjectRef": (()=>ObjectRef),
    "OpenMoveTypeSignature": (()=>OpenMoveTypeSignature),
    "OpenMoveTypeSignatureBody": (()=>OpenMoveTypeSignatureBody),
    "StructTag": (()=>StructTag),
    "SuiAddress": (()=>SuiAddress),
    "TransactionData": (()=>TransactionData),
    "TransactionExpiration": (()=>TransactionExpiration),
    "safeEnum": (()=>safeEnum)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/valibot/dist/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
;
;
function safeEnum(options) {
    const unionOptions = Object.entries(options).map(([key, value])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
            [key]: value
        }));
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["union"])(unionOptions), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transform"])((value)=>({
            ...value,
            $kind: Object.keys(value)[0]
        })));
}
const SuiAddress = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transform"])((value)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(value)), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["check"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidSuiAddress"]));
const ObjectID = SuiAddress;
const BCSBytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])();
const JsonU64 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["union"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])())
]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["check"])((val)=>{
    try {
        BigInt(val);
        return BigInt(val) >= 0 && BigInt(val) <= 18446744073709551615n;
    } catch  {
        return false;
    }
}, "Invalid u64"));
const ObjectRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    objectId: SuiAddress,
    version: JsonU64,
    digest: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])()
});
const Argument = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["union"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        GasCoin: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(true)
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        Input: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])()),
        type: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["optional"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("pure"))
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        Input: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])()),
        type: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["optional"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("object"))
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        Result: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])())
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        NestedResult: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["tuple"])([
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])()),
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])())
        ])
    })
]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transform"])((value)=>({
        ...value,
        $kind: Object.keys(value)[0]
    })));
const GasData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    budget: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])(JsonU64),
    price: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])(JsonU64),
    owner: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])(SuiAddress),
    payment: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(ObjectRef))
});
const StructTag = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    address: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    module: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    name: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    // type_params in rust, should be updated to use camelCase
    typeParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])())
});
const OpenMoveTypeSignatureBody = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["union"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("address"),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("bool"),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("u8"),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("u16"),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("u32"),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("u64"),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("u128"),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("u256"),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        vector: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["lazy"])(()=>OpenMoveTypeSignatureBody)
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        datatype: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
            package: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
            module: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
            type: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
            typeParameters: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["lazy"])(()=>OpenMoveTypeSignatureBody))
        })
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        typeParameter: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])())
    })
]);
const OpenMoveTypeSignature = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    ref: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["union"])([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("&"),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("&mut")
    ])),
    body: OpenMoveTypeSignatureBody
});
const ProgrammableMoveCall = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    package: ObjectID,
    module: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    function: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    // snake case in rust
    typeArguments: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])()),
    arguments: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(Argument),
    _argumentTypes: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["optional"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(OpenMoveTypeSignature)))
});
const $Intent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    name: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    inputs: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["record"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["union"])([
        Argument,
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(Argument)
    ])),
    data: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["record"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unknown"])())
});
const Command = safeEnum({
    MoveCall: ProgrammableMoveCall,
    TransferObjects: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        objects: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(Argument),
        address: Argument
    }),
    SplitCoins: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        coin: Argument,
        amounts: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(Argument)
    }),
    MergeCoins: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        destination: Argument,
        sources: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(Argument)
    }),
    Publish: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        modules: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(BCSBytes),
        dependencies: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(ObjectID)
    }),
    MakeMoveVec: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        type: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])()),
        elements: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(Argument)
    }),
    Upgrade: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        modules: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(BCSBytes),
        dependencies: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(ObjectID),
        package: ObjectID,
        ticket: Argument
    }),
    $Intent
});
const ObjectArg = safeEnum({
    ImmOrOwnedObject: ObjectRef,
    SharedObject: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        objectId: ObjectID,
        // snake case in rust
        initialSharedVersion: JsonU64,
        mutable: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["boolean"])()
    }),
    Receiving: ObjectRef
});
const CallArg = safeEnum({
    Object: ObjectArg,
    Pure: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        bytes: BCSBytes
    }),
    UnresolvedPure: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unknown"])()
    }),
    UnresolvedObject: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        objectId: ObjectID,
        version: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["optional"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])(JsonU64)),
        digest: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["optional"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])())),
        initialSharedVersion: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["optional"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])(JsonU64))
    })
});
const NormalizedCallArg = safeEnum({
    Object: ObjectArg,
    Pure: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        bytes: BCSBytes
    })
});
const TransactionExpiration = safeEnum({
    None: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(true),
    Epoch: JsonU64
});
const TransactionData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    version: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(2),
    sender: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullish"])(SuiAddress),
    expiration: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullish"])(TransactionExpiration),
    gasData: GasData,
    inputs: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(CallArg),
    commands: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(Command)
});
;
 //# sourceMappingURL=internal.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/transactions/Commands.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Commands": (()=>Commands),
    "UpgradePolicy": (()=>UpgradePolicy)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b64.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/valibot/dist/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/data/internal.js [app-client] (ecmascript)");
;
;
;
;
var UpgradePolicy = /* @__PURE__ */ ((UpgradePolicy2)=>{
    UpgradePolicy2[UpgradePolicy2["COMPATIBLE"] = 0] = "COMPATIBLE";
    UpgradePolicy2[UpgradePolicy2["ADDITIVE"] = 128] = "ADDITIVE";
    UpgradePolicy2[UpgradePolicy2["DEP_ONLY"] = 192] = "DEP_ONLY";
    return UpgradePolicy2;
})(UpgradePolicy || {});
const Commands = {
    MoveCall (input) {
        const [pkg, mod = "", fn = ""] = "target" in input ? input.target.split("::") : [
            input.package,
            input.module,
            input.function
        ];
        return {
            $kind: "MoveCall",
            MoveCall: {
                package: pkg,
                module: mod,
                function: fn,
                typeArguments: input.typeArguments ?? [],
                arguments: input.arguments ?? []
            }
        };
    },
    TransferObjects (objects, address) {
        return {
            $kind: "TransferObjects",
            TransferObjects: {
                objects: objects.map((o)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Argument"], o)),
                address: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Argument"], address)
            }
        };
    },
    SplitCoins (coin, amounts) {
        return {
            $kind: "SplitCoins",
            SplitCoins: {
                coin: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Argument"], coin),
                amounts: amounts.map((o)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Argument"], o))
            }
        };
    },
    MergeCoins (destination, sources) {
        return {
            $kind: "MergeCoins",
            MergeCoins: {
                destination: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Argument"], destination),
                sources: sources.map((o)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Argument"], o))
            }
        };
    },
    Publish ({ modules, dependencies }) {
        return {
            $kind: "Publish",
            Publish: {
                modules: modules.map((module)=>typeof module === "string" ? module : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(new Uint8Array(module))),
                dependencies: dependencies.map((dep)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiObjectId"])(dep))
            }
        };
    },
    Upgrade ({ modules, dependencies, package: packageId, ticket }) {
        return {
            $kind: "Upgrade",
            Upgrade: {
                modules: modules.map((module)=>typeof module === "string" ? module : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(new Uint8Array(module))),
                dependencies: dependencies.map((dep)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiObjectId"])(dep)),
                package: packageId,
                ticket: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Argument"], ticket)
            }
        };
    },
    MakeMoveVec ({ type, elements }) {
        return {
            $kind: "MakeMoveVec",
            MakeMoveVec: {
                type: type ?? null,
                elements: elements.map((o)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Argument"], o))
            }
        };
    },
    Intent ({ name, inputs = {}, data = {} }) {
        return {
            $kind: "$Intent",
            $Intent: {
                name,
                inputs: Object.fromEntries(Object.entries(inputs).map(([key, value])=>[
                        key,
                        Array.isArray(value) ? value.map((o)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Argument"], o)) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Argument"], value)
                    ])),
                data
            }
        };
    }
};
;
 //# sourceMappingURL=Commands.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/bcs/type-tag-serializer.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "TypeTagSerializer": (()=>TypeTagSerializer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
;
;
const VECTOR_REGEX = /^vector<(.+)>$/;
const STRUCT_REGEX = /^([^:]+)::([^:]+)::([^<]+)(<(.+)>)?/;
class TypeTagSerializer {
    static parseFromStr(str, normalizeAddress = false) {
        if (str === "address") {
            return {
                address: null
            };
        } else if (str === "bool") {
            return {
                bool: null
            };
        } else if (str === "u8") {
            return {
                u8: null
            };
        } else if (str === "u16") {
            return {
                u16: null
            };
        } else if (str === "u32") {
            return {
                u32: null
            };
        } else if (str === "u64") {
            return {
                u64: null
            };
        } else if (str === "u128") {
            return {
                u128: null
            };
        } else if (str === "u256") {
            return {
                u256: null
            };
        } else if (str === "signer") {
            return {
                signer: null
            };
        }
        const vectorMatch = str.match(VECTOR_REGEX);
        if (vectorMatch) {
            return {
                vector: TypeTagSerializer.parseFromStr(vectorMatch[1], normalizeAddress)
            };
        }
        const structMatch = str.match(STRUCT_REGEX);
        if (structMatch) {
            const address = normalizeAddress ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(structMatch[1]) : structMatch[1];
            return {
                struct: {
                    address,
                    module: structMatch[2],
                    name: structMatch[3],
                    typeParams: structMatch[5] === void 0 ? [] : TypeTagSerializer.parseStructTypeArgs(structMatch[5], normalizeAddress)
                }
            };
        }
        throw new Error(`Encountered unexpected token when parsing type args for ${str}`);
    }
    static parseStructTypeArgs(str, normalizeAddress = false) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["splitGenericParameters"])(str).map((tok)=>TypeTagSerializer.parseFromStr(tok, normalizeAddress));
    }
    static tagToString(tag) {
        if ("bool" in tag) {
            return "bool";
        }
        if ("u8" in tag) {
            return "u8";
        }
        if ("u16" in tag) {
            return "u16";
        }
        if ("u32" in tag) {
            return "u32";
        }
        if ("u64" in tag) {
            return "u64";
        }
        if ("u128" in tag) {
            return "u128";
        }
        if ("u256" in tag) {
            return "u256";
        }
        if ("address" in tag) {
            return "address";
        }
        if ("signer" in tag) {
            return "signer";
        }
        if ("vector" in tag) {
            return `vector<${TypeTagSerializer.tagToString(tag.vector)}>`;
        }
        if ("struct" in tag) {
            const struct = tag.struct;
            const typeParams = struct.typeParams.map(TypeTagSerializer.tagToString).join(", ");
            return `${struct.address}::${struct.module}::${struct.name}${typeParams ? `<${typeParams}>` : ""}`;
        }
        throw new Error("Invalid TypeTag");
    }
}
;
 //# sourceMappingURL=type-tag-serializer.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/transactions/data/v1.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "NormalizedCallArg": (()=>NormalizedCallArg),
    "ObjectRef": (()=>ObjectRef),
    "SerializedTransactionDataV1": (()=>SerializedTransactionDataV1),
    "StructTag": (()=>StructTag),
    "TransactionArgument": (()=>TransactionArgument),
    "TypeTag": (()=>TypeTag),
    "serializeV1TransactionData": (()=>serializeV1TransactionData),
    "transactionDataFromV1": (()=>transactionDataFromV1)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b64.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/valibot/dist/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$type$2d$tag$2d$serializer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/type-tag-serializer.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/data/internal.js [app-client] (ecmascript)");
;
;
;
;
const ObjectRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    digest: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    objectId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    version: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["union"])([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])()),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bigint"])()
    ])
});
const ObjectArg = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["safeEnum"])({
    ImmOrOwned: ObjectRef,
    Shared: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        objectId: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectID"],
        initialSharedVersion: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["JsonU64"],
        mutable: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["boolean"])()
    }),
    Receiving: ObjectRef
});
const NormalizedCallArg = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["safeEnum"])({
    Object: ObjectArg,
    Pure: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])()))
});
const TransactionInput = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["union"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        kind: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("Input"),
        index: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])()),
        value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unknown"])(),
        type: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["optional"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("object"))
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        kind: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("Input"),
        index: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])()),
        value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unknown"])(),
        type: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("pure")
    })
]);
const TransactionExpiration = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["union"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        Epoch: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])())
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        None: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(true))
    })
]);
const StringEncodedBigint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["union"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bigint"])()
]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["check"])((val)=>{
    if (![
        "string",
        "number",
        "bigint"
    ].includes(typeof val)) return false;
    try {
        BigInt(val);
        return true;
    } catch  {
        return false;
    }
}));
const TypeTag = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["union"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        bool: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(true))
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        u8: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(true))
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        u64: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(true))
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        u128: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(true))
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        address: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(true))
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        signer: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(true))
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        vector: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["lazy"])(()=>TypeTag)
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        struct: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["lazy"])(()=>StructTag)
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        u16: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(true))
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        u32: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(true))
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        u256: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(true))
    })
]);
const StructTag = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    address: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    module: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    name: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    typeParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(TypeTag)
});
const GasConfig = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    budget: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["optional"])(StringEncodedBigint),
    price: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["optional"])(StringEncodedBigint),
    payment: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["optional"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(ObjectRef)),
    owner: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["optional"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])())
});
const TransactionArgumentTypes = [
    TransactionInput,
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        kind: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("GasCoin")
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        kind: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("Result"),
        index: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])())
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        kind: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("NestedResult"),
        index: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])()),
        resultIndex: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])())
    })
];
const TransactionArgument = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["union"])([
    ...TransactionArgumentTypes
]);
const MoveCallTransaction = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    kind: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("MoveCall"),
    target: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["check"])((target)=>target.split("::").length === 3)),
    typeArguments: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])()),
    arguments: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(TransactionArgument)
});
const TransferObjectsTransaction = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    kind: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("TransferObjects"),
    objects: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(TransactionArgument),
    address: TransactionArgument
});
const SplitCoinsTransaction = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    kind: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("SplitCoins"),
    coin: TransactionArgument,
    amounts: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(TransactionArgument)
});
const MergeCoinsTransaction = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    kind: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("MergeCoins"),
    destination: TransactionArgument,
    sources: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(TransactionArgument)
});
const MakeMoveVecTransaction = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    kind: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("MakeMoveVec"),
    type: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["union"])([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
            Some: TypeTag
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
            None: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(true))
        })
    ]),
    objects: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(TransactionArgument)
});
const PublishTransaction = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    kind: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("Publish"),
    modules: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])()))),
    dependencies: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])())
});
const UpgradeTransaction = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    kind: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])("Upgrade"),
    modules: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])()))),
    dependencies: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])()),
    packageId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    ticket: TransactionArgument
});
const TransactionTypes = [
    MoveCallTransaction,
    TransferObjectsTransaction,
    SplitCoinsTransaction,
    MergeCoinsTransaction,
    PublishTransaction,
    UpgradeTransaction,
    MakeMoveVecTransaction
];
const TransactionType = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["union"])([
    ...TransactionTypes
]);
const SerializedTransactionDataV1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    version: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(1),
    sender: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["optional"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])()),
    expiration: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullish"])(TransactionExpiration),
    gasConfig: GasConfig,
    inputs: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(TransactionInput),
    transactions: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(TransactionType)
});
function serializeV1TransactionData(transactionData) {
    const inputs = transactionData.inputs.map((input, index)=>{
        if (input.Object) {
            return {
                kind: "Input",
                index,
                value: {
                    Object: input.Object.ImmOrOwnedObject ? {
                        ImmOrOwned: input.Object.ImmOrOwnedObject
                    } : input.Object.Receiving ? {
                        Receiving: {
                            digest: input.Object.Receiving.digest,
                            version: input.Object.Receiving.version,
                            objectId: input.Object.Receiving.objectId
                        }
                    } : {
                        Shared: {
                            mutable: input.Object.SharedObject.mutable,
                            initialSharedVersion: input.Object.SharedObject.initialSharedVersion,
                            objectId: input.Object.SharedObject.objectId
                        }
                    }
                },
                type: "object"
            };
        }
        if (input.Pure) {
            return {
                kind: "Input",
                index,
                value: {
                    Pure: Array.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(input.Pure.bytes))
                },
                type: "pure"
            };
        }
        if (input.UnresolvedPure) {
            return {
                kind: "Input",
                type: "pure",
                index,
                value: input.UnresolvedPure.value
            };
        }
        if (input.UnresolvedObject) {
            return {
                kind: "Input",
                type: "object",
                index,
                value: input.UnresolvedObject.objectId
            };
        }
        throw new Error("Invalid input");
    });
    return {
        version: 1,
        sender: transactionData.sender ?? void 0,
        expiration: transactionData.expiration?.$kind === "Epoch" ? {
            Epoch: Number(transactionData.expiration.Epoch)
        } : transactionData.expiration ? {
            None: true
        } : null,
        gasConfig: {
            owner: transactionData.gasData.owner ?? void 0,
            budget: transactionData.gasData.budget ?? void 0,
            price: transactionData.gasData.price ?? void 0,
            payment: transactionData.gasData.payment ?? void 0
        },
        inputs,
        transactions: transactionData.commands.map((command)=>{
            if (command.MakeMoveVec) {
                return {
                    kind: "MakeMoveVec",
                    type: command.MakeMoveVec.type === null ? {
                        None: true
                    } : {
                        Some: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$type$2d$tag$2d$serializer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TypeTagSerializer"].parseFromStr(command.MakeMoveVec.type)
                    },
                    objects: command.MakeMoveVec.elements.map((arg)=>convertTransactionArgument(arg, inputs))
                };
            }
            if (command.MergeCoins) {
                return {
                    kind: "MergeCoins",
                    destination: convertTransactionArgument(command.MergeCoins.destination, inputs),
                    sources: command.MergeCoins.sources.map((arg)=>convertTransactionArgument(arg, inputs))
                };
            }
            if (command.MoveCall) {
                return {
                    kind: "MoveCall",
                    target: `${command.MoveCall.package}::${command.MoveCall.module}::${command.MoveCall.function}`,
                    typeArguments: command.MoveCall.typeArguments,
                    arguments: command.MoveCall.arguments.map((arg)=>convertTransactionArgument(arg, inputs))
                };
            }
            if (command.Publish) {
                return {
                    kind: "Publish",
                    modules: command.Publish.modules.map((mod)=>Array.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(mod))),
                    dependencies: command.Publish.dependencies
                };
            }
            if (command.SplitCoins) {
                return {
                    kind: "SplitCoins",
                    coin: convertTransactionArgument(command.SplitCoins.coin, inputs),
                    amounts: command.SplitCoins.amounts.map((arg)=>convertTransactionArgument(arg, inputs))
                };
            }
            if (command.TransferObjects) {
                return {
                    kind: "TransferObjects",
                    objects: command.TransferObjects.objects.map((arg)=>convertTransactionArgument(arg, inputs)),
                    address: convertTransactionArgument(command.TransferObjects.address, inputs)
                };
            }
            if (command.Upgrade) {
                return {
                    kind: "Upgrade",
                    modules: command.Upgrade.modules.map((mod)=>Array.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(mod))),
                    dependencies: command.Upgrade.dependencies,
                    packageId: command.Upgrade.package,
                    ticket: convertTransactionArgument(command.Upgrade.ticket, inputs)
                };
            }
            throw new Error(`Unknown transaction ${Object.keys(command)}`);
        })
    };
}
function convertTransactionArgument(arg, inputs) {
    if (arg.$kind === "GasCoin") {
        return {
            kind: "GasCoin"
        };
    }
    if (arg.$kind === "Result") {
        return {
            kind: "Result",
            index: arg.Result
        };
    }
    if (arg.$kind === "NestedResult") {
        return {
            kind: "NestedResult",
            index: arg.NestedResult[0],
            resultIndex: arg.NestedResult[1]
        };
    }
    if (arg.$kind === "Input") {
        return inputs[arg.Input];
    }
    throw new Error(`Invalid argument ${Object.keys(arg)}`);
}
function transactionDataFromV1(data) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TransactionData"], {
        version: 2,
        sender: data.sender ?? null,
        expiration: data.expiration ? "Epoch" in data.expiration ? {
            Epoch: data.expiration.Epoch
        } : {
            None: true
        } : null,
        gasData: {
            owner: data.gasConfig.owner ?? null,
            budget: data.gasConfig.budget?.toString() ?? null,
            price: data.gasConfig.price?.toString() ?? null,
            payment: data.gasConfig.payment?.map((ref)=>({
                    digest: ref.digest,
                    objectId: ref.objectId,
                    version: ref.version.toString()
                })) ?? null
        },
        inputs: data.inputs.map((input)=>{
            if (input.kind === "Input") {
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["is"])(NormalizedCallArg, input.value)) {
                    const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(NormalizedCallArg, input.value);
                    if (value.Object) {
                        if (value.Object.ImmOrOwned) {
                            return {
                                Object: {
                                    ImmOrOwnedObject: {
                                        objectId: value.Object.ImmOrOwned.objectId,
                                        version: String(value.Object.ImmOrOwned.version),
                                        digest: value.Object.ImmOrOwned.digest
                                    }
                                }
                            };
                        }
                        if (value.Object.Shared) {
                            return {
                                Object: {
                                    SharedObject: {
                                        mutable: value.Object.Shared.mutable ?? null,
                                        initialSharedVersion: value.Object.Shared.initialSharedVersion,
                                        objectId: value.Object.Shared.objectId
                                    }
                                }
                            };
                        }
                        if (value.Object.Receiving) {
                            return {
                                Object: {
                                    Receiving: {
                                        digest: value.Object.Receiving.digest,
                                        version: String(value.Object.Receiving.version),
                                        objectId: value.Object.Receiving.objectId
                                    }
                                }
                            };
                        }
                        throw new Error("Invalid object input");
                    }
                    return {
                        Pure: {
                            bytes: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(new Uint8Array(value.Pure))
                        }
                    };
                }
                if (input.type === "object") {
                    return {
                        UnresolvedObject: {
                            objectId: input.value
                        }
                    };
                }
                return {
                    UnresolvedPure: {
                        value: input.value
                    }
                };
            }
            throw new Error("Invalid input");
        }),
        commands: data.transactions.map((transaction)=>{
            switch(transaction.kind){
                case "MakeMoveVec":
                    return {
                        MakeMoveVec: {
                            type: "Some" in transaction.type ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$type$2d$tag$2d$serializer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TypeTagSerializer"].tagToString(transaction.type.Some) : null,
                            elements: transaction.objects.map((arg)=>parseV1TransactionArgument(arg))
                        }
                    };
                case "MergeCoins":
                    {
                        return {
                            MergeCoins: {
                                destination: parseV1TransactionArgument(transaction.destination),
                                sources: transaction.sources.map((arg)=>parseV1TransactionArgument(arg))
                            }
                        };
                    }
                case "MoveCall":
                    {
                        const [pkg, mod, fn] = transaction.target.split("::");
                        return {
                            MoveCall: {
                                package: pkg,
                                module: mod,
                                function: fn,
                                typeArguments: transaction.typeArguments,
                                arguments: transaction.arguments.map((arg)=>parseV1TransactionArgument(arg))
                            }
                        };
                    }
                case "Publish":
                    {
                        return {
                            Publish: {
                                modules: transaction.modules.map((mod)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(Uint8Array.from(mod))),
                                dependencies: transaction.dependencies
                            }
                        };
                    }
                case "SplitCoins":
                    {
                        return {
                            SplitCoins: {
                                coin: parseV1TransactionArgument(transaction.coin),
                                amounts: transaction.amounts.map((arg)=>parseV1TransactionArgument(arg))
                            }
                        };
                    }
                case "TransferObjects":
                    {
                        return {
                            TransferObjects: {
                                objects: transaction.objects.map((arg)=>parseV1TransactionArgument(arg)),
                                address: parseV1TransactionArgument(transaction.address)
                            }
                        };
                    }
                case "Upgrade":
                    {
                        return {
                            Upgrade: {
                                modules: transaction.modules.map((mod)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(Uint8Array.from(mod))),
                                dependencies: transaction.dependencies,
                                package: transaction.packageId,
                                ticket: parseV1TransactionArgument(transaction.ticket)
                            }
                        };
                    }
            }
            throw new Error(`Unknown transaction ${Object.keys(transaction)}`);
        })
    });
}
function parseV1TransactionArgument(arg) {
    switch(arg.kind){
        case "GasCoin":
            {
                return {
                    GasCoin: true
                };
            }
        case "Result":
            return {
                Result: arg.index
            };
        case "NestedResult":
            {
                return {
                    NestedResult: [
                        arg.index,
                        arg.resultIndex
                    ]
                };
            }
        case "Input":
            {
                return {
                    Input: arg.index
                };
            }
    }
}
;
 //# sourceMappingURL=v1.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/transactions/data/v2.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "SerializedTransactionDataV2": (()=>SerializedTransactionDataV2)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/valibot/dist/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/data/internal.js [app-client] (ecmascript)");
;
;
function enumUnion(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["union"])(Object.entries(options).map(([key, value])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
            [key]: value
        })));
}
const Argument = enumUnion({
    GasCoin: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(true),
    Input: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])()),
    Result: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])()),
    NestedResult: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["tuple"])([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])()),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integer"])())
    ])
});
const GasData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    budget: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["JsonU64"]),
    price: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["JsonU64"]),
    owner: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SuiAddress"]),
    payment: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectRef"]))
});
const ProgrammableMoveCall = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    package: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectID"],
    module: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    function: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    // snake case in rust
    typeArguments: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])()),
    arguments: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(Argument)
});
const $Intent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    name: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(),
    inputs: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["record"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["union"])([
        Argument,
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(Argument)
    ])),
    data: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["record"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unknown"])())
});
const Command = enumUnion({
    MoveCall: ProgrammableMoveCall,
    TransferObjects: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        objects: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(Argument),
        address: Argument
    }),
    SplitCoins: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        coin: Argument,
        amounts: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(Argument)
    }),
    MergeCoins: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        destination: Argument,
        sources: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(Argument)
    }),
    Publish: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        modules: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BCSBytes"]),
        dependencies: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectID"])
    }),
    MakeMoveVec: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        type: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])()),
        elements: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(Argument)
    }),
    Upgrade: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        modules: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BCSBytes"]),
        dependencies: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectID"]),
        package: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectID"],
        ticket: Argument
    }),
    $Intent
});
const ObjectArg = enumUnion({
    ImmOrOwnedObject: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectRef"],
    SharedObject: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        objectId: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectID"],
        // snake case in rust
        initialSharedVersion: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["JsonU64"],
        mutable: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["boolean"])()
    }),
    Receiving: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectRef"]
});
const CallArg = enumUnion({
    Object: ObjectArg,
    Pure: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        bytes: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BCSBytes"]
    }),
    UnresolvedPure: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unknown"])()
    }),
    UnresolvedObject: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
        objectId: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectID"],
        version: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["optional"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["JsonU64"])),
        digest: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["optional"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])())),
        initialSharedVersion: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["optional"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullable"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["JsonU64"]))
    })
});
const TransactionExpiration = enumUnion({
    None: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(true),
    Epoch: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["JsonU64"]
});
const SerializedTransactionDataV2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["object"])({
    version: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["literal"])(2),
    sender: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullish"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SuiAddress"]),
    expiration: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nullish"])(TransactionExpiration),
    gasData: GasData,
    inputs: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(CallArg),
    commands: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["array"])(Command)
});
;
 //# sourceMappingURL=v2.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/transactions/Inputs.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Inputs": (()=>Inputs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b64.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
;
;
function Pure(data) {
    return {
        $kind: "Pure",
        Pure: {
            bytes: data instanceof Uint8Array ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(data) : data.toBase64()
        }
    };
}
const Inputs = {
    Pure,
    ObjectRef ({ objectId, digest, version }) {
        return {
            $kind: "Object",
            Object: {
                $kind: "ImmOrOwnedObject",
                ImmOrOwnedObject: {
                    digest,
                    version,
                    objectId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(objectId)
                }
            }
        };
    },
    SharedObjectRef ({ objectId, mutable, initialSharedVersion }) {
        return {
            $kind: "Object",
            Object: {
                $kind: "SharedObject",
                SharedObject: {
                    mutable,
                    initialSharedVersion,
                    objectId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(objectId)
                }
            }
        };
    },
    ReceivingRef ({ objectId, digest, version }) {
        return {
            $kind: "Object",
            Object: {
                $kind: "Receiving",
                Receiving: {
                    digest,
                    version,
                    objectId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(objectId)
                }
            }
        };
    }
};
;
 //# sourceMappingURL=Inputs.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/bcs/bcs.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Address": (()=>Address),
    "AppId": (()=>AppId),
    "Argument": (()=>Argument),
    "CallArg": (()=>CallArg),
    "Command": (()=>Command),
    "CompressedSignature": (()=>CompressedSignature),
    "GasData": (()=>GasData),
    "Intent": (()=>Intent),
    "IntentMessage": (()=>IntentMessage),
    "IntentScope": (()=>IntentScope),
    "IntentVersion": (()=>IntentVersion),
    "MultiSig": (()=>MultiSig),
    "MultiSigPkMap": (()=>MultiSigPkMap),
    "MultiSigPublicKey": (()=>MultiSigPublicKey),
    "ObjectArg": (()=>ObjectArg),
    "ObjectDigest": (()=>ObjectDigest),
    "Owner": (()=>Owner),
    "PasskeyAuthenticator": (()=>PasskeyAuthenticator),
    "ProgrammableMoveCall": (()=>ProgrammableMoveCall),
    "ProgrammableTransaction": (()=>ProgrammableTransaction),
    "PublicKey": (()=>PublicKey),
    "SenderSignedData": (()=>SenderSignedData),
    "SenderSignedTransaction": (()=>SenderSignedTransaction),
    "SharedObjectRef": (()=>SharedObjectRef),
    "StructTag": (()=>StructTag),
    "SuiObjectRef": (()=>SuiObjectRef),
    "TransactionData": (()=>TransactionData),
    "TransactionDataV1": (()=>TransactionDataV1),
    "TransactionExpiration": (()=>TransactionExpiration),
    "TransactionKind": (()=>TransactionKind),
    "TypeTag": (()=>TypeTag),
    "base64String": (()=>base64String)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/bcs.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b58$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b58.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b64.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/hex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$type$2d$tag$2d$serializer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/type-tag-serializer.js [app-client] (ecmascript)");
;
;
;
function unsafe_u64(options) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64({
        name: "unsafe_u64",
        ...options
    }).transform({
        input: (val)=>val,
        output: (val)=>Number(val)
    });
}
function optionEnum(type) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("Option", {
        None: null,
        Some: type
    });
}
const Address = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].bytes(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SUI_ADDRESS_LENGTH"]).transform({
    validate: (val)=>{
        const address = typeof val === "string" ? val : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(val);
        if (!address || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidSuiAddress"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(address))) {
            throw new Error(`Invalid Sui address ${address}`);
        }
    },
    input: (val)=>typeof val === "string" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(val)) : val,
    output: (val)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(val))
});
const ObjectDigest = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8()).transform({
    name: "ObjectDigest",
    input: (value)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b58$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase58"])(value),
    output: (value)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b58$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase58"])(new Uint8Array(value)),
    validate: (value)=>{
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b58$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase58"])(value).length !== 32) {
            throw new Error("ObjectDigest must be 32 bytes");
        }
    }
});
const SuiObjectRef = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("SuiObjectRef", {
    objectId: Address,
    version: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
    digest: ObjectDigest
});
const SharedObjectRef = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("SharedObjectRef", {
    objectId: Address,
    initialSharedVersion: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
    mutable: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].bool()
});
const ObjectArg = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("ObjectArg", {
    ImmOrOwnedObject: SuiObjectRef,
    SharedObject: SharedObjectRef,
    Receiving: SuiObjectRef
});
const Owner = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("Owner", {
    AddressOwner: Address,
    ObjectOwner: Address,
    Shared: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("Shared", {
        initialSharedVersion: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64()
    }),
    Immutable: null,
    ConsensusV2: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("ConsensusV2", {
        authenticator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("Authenticator", {
            SingleOwner: Address
        }),
        startVersion: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64()
    })
});
const CallArg = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("CallArg", {
    Pure: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("Pure", {
        bytes: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8()).transform({
            input: (val)=>typeof val === "string" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(val) : val,
            output: (val)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(new Uint8Array(val))
        })
    }),
    Object: ObjectArg
});
const InnerTypeTag = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("TypeTag", {
    bool: null,
    u8: null,
    u64: null,
    u128: null,
    address: null,
    signer: null,
    vector: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].lazy(()=>InnerTypeTag),
    struct: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].lazy(()=>StructTag),
    u16: null,
    u32: null,
    u256: null
});
const TypeTag = InnerTypeTag.transform({
    input: (typeTag)=>typeof typeTag === "string" ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$type$2d$tag$2d$serializer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TypeTagSerializer"].parseFromStr(typeTag, true) : typeTag,
    output: (typeTag)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$type$2d$tag$2d$serializer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TypeTagSerializer"].tagToString(typeTag)
});
const Argument = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("Argument", {
    GasCoin: null,
    Input: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16(),
    Result: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16(),
    NestedResult: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].tuple([
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16(),
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16()
    ])
});
const ProgrammableMoveCall = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("ProgrammableMoveCall", {
    package: Address,
    module: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string(),
    function: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string(),
    typeArguments: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(TypeTag),
    arguments: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(Argument)
});
const Command = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("Command", {
    /**
   * A Move Call - any public Move function can be called via
   * this transaction. The results can be used that instant to pass
   * into the next transaction.
   */ MoveCall: ProgrammableMoveCall,
    /**
   * Transfer vector of objects to a receiver.
   */ TransferObjects: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("TransferObjects", {
        objects: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(Argument),
        address: Argument
    }),
    // /**
    //  * Split `amount` from a `coin`.
    //  */
    SplitCoins: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("SplitCoins", {
        coin: Argument,
        amounts: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(Argument)
    }),
    // /**
    //  * Merge Vector of Coins (`sources`) into a `destination`.
    //  */
    MergeCoins: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("MergeCoins", {
        destination: Argument,
        sources: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(Argument)
    }),
    // /**
    //  * Publish a Move module.
    //  */
    Publish: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("Publish", {
        modules: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8()).transform({
            input: (val)=>typeof val === "string" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(val) : val,
            output: (val)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(new Uint8Array(val))
        })),
        dependencies: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(Address)
    }),
    // /**
    //  * Build a vector of objects using the input arguments.
    //  * It is impossible to export construct a `vector<T: key>` otherwise,
    //  * so this call serves a utility function.
    //  */
    MakeMoveVec: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("MakeMoveVec", {
        type: optionEnum(TypeTag).transform({
            input: (val)=>val === null ? {
                    None: true
                } : {
                    Some: val
                },
            output: (val)=>val.Some ?? null
        }),
        elements: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(Argument)
    }),
    Upgrade: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("Upgrade", {
        modules: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8()).transform({
            input: (val)=>typeof val === "string" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(val) : val,
            output: (val)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(new Uint8Array(val))
        })),
        dependencies: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(Address),
        package: Address,
        ticket: Argument
    })
});
const ProgrammableTransaction = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("ProgrammableTransaction", {
    inputs: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(CallArg),
    commands: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(Command)
});
const TransactionKind = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("TransactionKind", {
    ProgrammableTransaction,
    ChangeEpoch: null,
    Genesis: null,
    ConsensusCommitPrologue: null
});
const TransactionExpiration = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("TransactionExpiration", {
    None: null,
    Epoch: unsafe_u64()
});
const StructTag = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("StructTag", {
    address: Address,
    module: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string(),
    name: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string(),
    typeParams: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(InnerTypeTag)
});
const GasData = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("GasData", {
    payment: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(SuiObjectRef),
    owner: Address,
    price: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
    budget: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64()
});
const TransactionDataV1 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("TransactionDataV1", {
    kind: TransactionKind,
    sender: Address,
    gasData: GasData,
    expiration: TransactionExpiration
});
const TransactionData = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("TransactionData", {
    V1: TransactionDataV1
});
const IntentScope = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("IntentScope", {
    TransactionData: null,
    TransactionEffects: null,
    CheckpointSummary: null,
    PersonalMessage: null
});
const IntentVersion = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("IntentVersion", {
    V0: null
});
const AppId = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("AppId", {
    Sui: null
});
const Intent = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("Intent", {
    scope: IntentScope,
    version: IntentVersion,
    appId: AppId
});
function IntentMessage(T) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct(`IntentMessage<${T.name}>`, {
        intent: Intent,
        value: T
    });
}
const CompressedSignature = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("CompressedSignature", {
    ED25519: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].fixedArray(64, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8()),
    Secp256k1: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].fixedArray(64, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8()),
    Secp256r1: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].fixedArray(64, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8()),
    ZkLogin: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8())
});
const PublicKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("PublicKey", {
    ED25519: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].fixedArray(32, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8()),
    Secp256k1: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].fixedArray(33, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8()),
    Secp256r1: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].fixedArray(33, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8()),
    ZkLogin: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8())
});
const MultiSigPkMap = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("MultiSigPkMap", {
    pubKey: PublicKey,
    weight: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8()
});
const MultiSigPublicKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("MultiSigPublicKey", {
    pk_map: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(MultiSigPkMap),
    threshold: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16()
});
const MultiSig = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("MultiSig", {
    sigs: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(CompressedSignature),
    bitmap: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16(),
    multisig_pk: MultiSigPublicKey
});
const base64String = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8()).transform({
    input: (val)=>typeof val === "string" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(val) : val,
    output: (val)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(new Uint8Array(val))
});
const SenderSignedTransaction = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("SenderSignedTransaction", {
    intentMessage: IntentMessage(TransactionData),
    txSignatures: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(base64String)
});
const SenderSignedData = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(SenderSignedTransaction, {
    name: "SenderSignedData"
});
const PasskeyAuthenticator = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("PasskeyAuthenticator", {
    authenticatorData: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8()),
    clientDataJson: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string(),
    userSignature: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8())
});
;
 //# sourceMappingURL=bcs.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/bcs/effects.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "TransactionEffects": (()=>TransactionEffects)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/bcs.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/bcs.js [app-client] (ecmascript)");
;
;
const PackageUpgradeError = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("PackageUpgradeError", {
    UnableToFetchPackage: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("UnableToFetchPackage", {
        packageId: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Address"]
    }),
    NotAPackage: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("NotAPackage", {
        objectId: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Address"]
    }),
    IncompatibleUpgrade: null,
    DigestDoesNotMatch: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("DigestDoesNotMatch", {
        digest: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8())
    }),
    UnknownUpgradePolicy: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("UnknownUpgradePolicy", {
        policy: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8()
    }),
    PackageIDDoesNotMatch: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("PackageIDDoesNotMatch", {
        packageId: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Address"],
        ticketId: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Address"]
    })
});
const ModuleId = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("ModuleId", {
    address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Address"],
    name: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string()
});
const MoveLocation = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("MoveLocation", {
    module: ModuleId,
    function: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16(),
    instruction: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16(),
    functionName: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].option(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string())
});
const CommandArgumentError = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("CommandArgumentError", {
    TypeMismatch: null,
    InvalidBCSBytes: null,
    InvalidUsageOfPureArg: null,
    InvalidArgumentToPrivateEntryFunction: null,
    IndexOutOfBounds: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("IndexOutOfBounds", {
        idx: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16()
    }),
    SecondaryIndexOutOfBounds: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("SecondaryIndexOutOfBounds", {
        resultIdx: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16(),
        secondaryIdx: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16()
    }),
    InvalidResultArity: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("InvalidResultArity", {
        resultIdx: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16()
    }),
    InvalidGasCoinUsage: null,
    InvalidValueUsage: null,
    InvalidObjectByValue: null,
    InvalidObjectByMutRef: null,
    SharedObjectOperationNotAllowed: null
});
const TypeArgumentError = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("TypeArgumentError", {
    TypeNotFound: null,
    ConstraintNotSatisfied: null
});
const ExecutionFailureStatus = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("ExecutionFailureStatus", {
    InsufficientGas: null,
    InvalidGasObject: null,
    InvariantViolation: null,
    FeatureNotYetSupported: null,
    MoveObjectTooBig: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("MoveObjectTooBig", {
        objectSize: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
        maxObjectSize: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64()
    }),
    MovePackageTooBig: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("MovePackageTooBig", {
        objectSize: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
        maxObjectSize: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64()
    }),
    CircularObjectOwnership: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("CircularObjectOwnership", {
        object: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Address"]
    }),
    InsufficientCoinBalance: null,
    CoinBalanceOverflow: null,
    PublishErrorNonZeroAddress: null,
    SuiMoveVerificationError: null,
    MovePrimitiveRuntimeError: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].option(MoveLocation),
    MoveAbort: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].tuple([
        MoveLocation,
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64()
    ]),
    VMVerificationOrDeserializationError: null,
    VMInvariantViolation: null,
    FunctionNotFound: null,
    ArityMismatch: null,
    TypeArityMismatch: null,
    NonEntryFunctionInvoked: null,
    CommandArgumentError: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("CommandArgumentError", {
        argIdx: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16(),
        kind: CommandArgumentError
    }),
    TypeArgumentError: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("TypeArgumentError", {
        argumentIdx: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16(),
        kind: TypeArgumentError
    }),
    UnusedValueWithoutDrop: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("UnusedValueWithoutDrop", {
        resultIdx: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16(),
        secondaryIdx: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16()
    }),
    InvalidPublicFunctionReturnType: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("InvalidPublicFunctionReturnType", {
        idx: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16()
    }),
    InvalidTransferObject: null,
    EffectsTooLarge: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("EffectsTooLarge", {
        currentSize: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
        maxSize: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64()
    }),
    PublishUpgradeMissingDependency: null,
    PublishUpgradeDependencyDowngrade: null,
    PackageUpgradeError: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("PackageUpgradeError", {
        upgradeError: PackageUpgradeError
    }),
    WrittenObjectsTooLarge: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("WrittenObjectsTooLarge", {
        currentSize: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
        maxSize: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64()
    }),
    CertificateDenied: null,
    SuiMoveVerificationTimedout: null,
    SharedObjectOperationNotAllowed: null,
    InputObjectDeleted: null,
    ExecutionCancelledDueToSharedObjectCongestion: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("ExecutionCancelledDueToSharedObjectCongestion", {
        congestedObjects: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Address"])
    }),
    AddressDeniedForCoin: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("AddressDeniedForCoin", {
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Address"],
        coinType: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string()
    }),
    CoinTypeGlobalPause: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("CoinTypeGlobalPause", {
        coinType: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string()
    }),
    ExecutionCancelledDueToRandomnessUnavailable: null
});
const ExecutionStatus = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("ExecutionStatus", {
    Success: null,
    Failed: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("ExecutionFailed", {
        error: ExecutionFailureStatus,
        command: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].option(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64())
    })
});
const GasCostSummary = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("GasCostSummary", {
    computationCost: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
    storageCost: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
    storageRebate: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
    nonRefundableStorageFee: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64()
});
const TransactionEffectsV1 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("TransactionEffectsV1", {
    status: ExecutionStatus,
    executedEpoch: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
    gasUsed: GasCostSummary,
    modifiedAtVersions: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].tuple([
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Address"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64()
    ])),
    sharedObjects: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SuiObjectRef"]),
    transactionDigest: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectDigest"],
    created: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].tuple([
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SuiObjectRef"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Owner"]
    ])),
    mutated: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].tuple([
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SuiObjectRef"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Owner"]
    ])),
    unwrapped: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].tuple([
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SuiObjectRef"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Owner"]
    ])),
    deleted: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SuiObjectRef"]),
    unwrappedThenDeleted: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SuiObjectRef"]),
    wrapped: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SuiObjectRef"]),
    gasObject: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].tuple([
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SuiObjectRef"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Owner"]
    ]),
    eventsDigest: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].option(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectDigest"]),
    dependencies: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectDigest"])
});
const VersionDigest = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].tuple([
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectDigest"]
]);
const ObjectIn = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("ObjectIn", {
    NotExist: null,
    Exist: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].tuple([
        VersionDigest,
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Owner"]
    ])
});
const ObjectOut = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("ObjectOut", {
    NotExist: null,
    ObjectWrite: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].tuple([
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectDigest"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Owner"]
    ]),
    PackageWrite: VersionDigest
});
const IDOperation = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("IDOperation", {
    None: null,
    Created: null,
    Deleted: null
});
const EffectsObjectChange = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("EffectsObjectChange", {
    inputState: ObjectIn,
    outputState: ObjectOut,
    idOperation: IDOperation
});
const UnchangedSharedKind = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("UnchangedSharedKind", {
    ReadOnlyRoot: VersionDigest,
    MutateDeleted: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
    ReadDeleted: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
    Cancelled: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
    PerEpochConfig: null
});
const TransactionEffectsV2 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("TransactionEffectsV2", {
    status: ExecutionStatus,
    executedEpoch: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
    gasUsed: GasCostSummary,
    transactionDigest: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectDigest"],
    gasObjectIndex: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].option(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u32()),
    eventsDigest: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].option(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectDigest"]),
    dependencies: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectDigest"]),
    lamportVersion: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
    changedObjects: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].tuple([
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Address"],
        EffectsObjectChange
    ])),
    unchangedSharedObjects: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].tuple([
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Address"],
        UnchangedSharedKind
    ])),
    auxDataDigest: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].option(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectDigest"])
});
const TransactionEffects = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].enum("TransactionEffects", {
    V1: TransactionEffectsV1,
    V2: TransactionEffectsV2
});
;
 //# sourceMappingURL=effects.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/bcs/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "bcs": (()=>suiBcs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/bcs.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/bcs.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$effects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/effects.js [app-client] (ecmascript)");
;
;
;
;
;
const suiBcs = {
    ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"],
    U8: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8(),
    U16: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16(),
    U32: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u32(),
    U64: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
    U128: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u128(),
    U256: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u256(),
    ULEB128: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].uleb128(),
    Bool: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].bool(),
    String: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string(),
    Address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Address"],
    AppId: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AppId"],
    Argument: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Argument"],
    CallArg: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CallArg"],
    Command: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Command"],
    CompressedSignature: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CompressedSignature"],
    GasData: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GasData"],
    Intent: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Intent"],
    IntentMessage: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["IntentMessage"],
    IntentScope: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["IntentScope"],
    IntentVersion: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["IntentVersion"],
    MultiSig: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MultiSig"],
    MultiSigPkMap: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MultiSigPkMap"],
    MultiSigPublicKey: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MultiSigPublicKey"],
    ObjectArg: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectArg"],
    ObjectDigest: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectDigest"],
    Owner: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Owner"],
    PasskeyAuthenticator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PasskeyAuthenticator"],
    ProgrammableMoveCall: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ProgrammableMoveCall"],
    ProgrammableTransaction: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ProgrammableTransaction"],
    PublicKey: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PublicKey"],
    SenderSignedData: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SenderSignedData"],
    SenderSignedTransaction: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SenderSignedTransaction"],
    SharedObjectRef: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SharedObjectRef"],
    StructTag: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StructTag"],
    SuiObjectRef: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SuiObjectRef"],
    TransactionData: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TransactionData"],
    TransactionDataV1: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TransactionDataV1"],
    TransactionEffects: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$effects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TransactionEffects"],
    TransactionExpiration: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TransactionExpiration"],
    TransactionKind: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TransactionKind"],
    TypeTag: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TypeTag"]
};
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/utils/constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MIST_PER_SUI": (()=>MIST_PER_SUI),
    "MOVE_STDLIB_ADDRESS": (()=>MOVE_STDLIB_ADDRESS),
    "SUI_CLOCK_OBJECT_ID": (()=>SUI_CLOCK_OBJECT_ID),
    "SUI_DECIMALS": (()=>SUI_DECIMALS),
    "SUI_FRAMEWORK_ADDRESS": (()=>SUI_FRAMEWORK_ADDRESS),
    "SUI_SYSTEM_ADDRESS": (()=>SUI_SYSTEM_ADDRESS),
    "SUI_SYSTEM_MODULE_NAME": (()=>SUI_SYSTEM_MODULE_NAME),
    "SUI_SYSTEM_STATE_OBJECT_ID": (()=>SUI_SYSTEM_STATE_OBJECT_ID),
    "SUI_TYPE_ARG": (()=>SUI_TYPE_ARG)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
;
const SUI_DECIMALS = 9;
const MIST_PER_SUI = BigInt(1e9);
const MOVE_STDLIB_ADDRESS = "0x1";
const SUI_FRAMEWORK_ADDRESS = "0x2";
const SUI_SYSTEM_ADDRESS = "0x3";
const SUI_CLOCK_OBJECT_ID = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiObjectId"])("0x6");
const SUI_SYSTEM_MODULE_NAME = "sui_system";
const SUI_TYPE_ARG = `${SUI_FRAMEWORK_ADDRESS}::sui::SUI`;
const SUI_SYSTEM_STATE_OBJECT_ID = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiObjectId"])("0x5");
;
 //# sourceMappingURL=constants.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/transactions/serializer.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getPureBcsSchema": (()=>getPureBcsSchema),
    "isTxContext": (()=>isTxContext),
    "normalizedTypeToMoveTypeSignature": (()=>normalizedTypeToMoveTypeSignature),
    "pureBcsSchemaFromOpenMoveTypeSignatureBody": (()=>pureBcsSchemaFromOpenMoveTypeSignatureBody)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
;
;
;
const OBJECT_MODULE_NAME = "object";
const ID_STRUCT_NAME = "ID";
const STD_ASCII_MODULE_NAME = "ascii";
const STD_ASCII_STRUCT_NAME = "String";
const STD_UTF8_MODULE_NAME = "string";
const STD_UTF8_STRUCT_NAME = "String";
const STD_OPTION_MODULE_NAME = "option";
const STD_OPTION_STRUCT_NAME = "Option";
function isTxContext(param) {
    const struct = typeof param.body === "object" && "datatype" in param.body ? param.body.datatype : null;
    return !!struct && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(struct.package) === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])("0x2") && struct.module === "tx_context" && struct.type === "TxContext";
}
function getPureBcsSchema(typeSignature) {
    if (typeof typeSignature === "string") {
        switch(typeSignature){
            case "address":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].Address;
            case "bool":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].Bool;
            case "u8":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U8;
            case "u16":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U16;
            case "u32":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U32;
            case "u64":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U64;
            case "u128":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U128;
            case "u256":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U256;
            default:
                throw new Error(`Unknown type signature ${typeSignature}`);
        }
    }
    if ("vector" in typeSignature) {
        if (typeSignature.vector === "u8") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U8).transform({
                input: (val)=>typeof val === "string" ? new TextEncoder().encode(val) : val,
                output: (val)=>val
            });
        }
        const type = getPureBcsSchema(typeSignature.vector);
        return type ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].vector(type) : null;
    }
    if ("datatype" in typeSignature) {
        const pkg = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(typeSignature.datatype.package);
        if (pkg === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MOVE_STDLIB_ADDRESS"])) {
            if (typeSignature.datatype.module === STD_ASCII_MODULE_NAME && typeSignature.datatype.type === STD_ASCII_STRUCT_NAME) {
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].String;
            }
            if (typeSignature.datatype.module === STD_UTF8_MODULE_NAME && typeSignature.datatype.type === STD_UTF8_STRUCT_NAME) {
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].String;
            }
            if (typeSignature.datatype.module === STD_OPTION_MODULE_NAME && typeSignature.datatype.type === STD_OPTION_STRUCT_NAME) {
                const type = getPureBcsSchema(typeSignature.datatype.typeParameters[0]);
                return type ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].vector(type) : null;
            }
        }
        if (pkg === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SUI_FRAMEWORK_ADDRESS"]) && typeSignature.datatype.module === OBJECT_MODULE_NAME && typeSignature.datatype.type === ID_STRUCT_NAME) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].Address;
        }
    }
    return null;
}
function normalizedTypeToMoveTypeSignature(type) {
    if (typeof type === "object" && "Reference" in type) {
        return {
            ref: "&",
            body: normalizedTypeToMoveTypeSignatureBody(type.Reference)
        };
    }
    if (typeof type === "object" && "MutableReference" in type) {
        return {
            ref: "&mut",
            body: normalizedTypeToMoveTypeSignatureBody(type.MutableReference)
        };
    }
    return {
        ref: null,
        body: normalizedTypeToMoveTypeSignatureBody(type)
    };
}
function normalizedTypeToMoveTypeSignatureBody(type) {
    if (typeof type === "string") {
        switch(type){
            case "Address":
                return "address";
            case "Bool":
                return "bool";
            case "U8":
                return "u8";
            case "U16":
                return "u16";
            case "U32":
                return "u32";
            case "U64":
                return "u64";
            case "U128":
                return "u128";
            case "U256":
                return "u256";
            default:
                throw new Error(`Unexpected type ${type}`);
        }
    }
    if ("Vector" in type) {
        return {
            vector: normalizedTypeToMoveTypeSignatureBody(type.Vector)
        };
    }
    if ("Struct" in type) {
        return {
            datatype: {
                package: type.Struct.address,
                module: type.Struct.module,
                type: type.Struct.name,
                typeParameters: type.Struct.typeArguments.map(normalizedTypeToMoveTypeSignatureBody)
            }
        };
    }
    if ("TypeParameter" in type) {
        return {
            typeParameter: type.TypeParameter
        };
    }
    throw new Error(`Unexpected type ${JSON.stringify(type)}`);
}
function pureBcsSchemaFromOpenMoveTypeSignatureBody(typeSignature) {
    if (typeof typeSignature === "string") {
        switch(typeSignature){
            case "address":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].Address;
            case "bool":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].Bool;
            case "u8":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U8;
            case "u16":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U16;
            case "u32":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U32;
            case "u64":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U64;
            case "u128":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U128;
            case "u256":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U256;
            default:
                throw new Error(`Unknown type signature ${typeSignature}`);
        }
    }
    if ("vector" in typeSignature) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].vector(pureBcsSchemaFromOpenMoveTypeSignatureBody(typeSignature.vector));
    }
    throw new Error(`Expected pure typeSignature, but got ${JSON.stringify(typeSignature)}`);
}
;
 //# sourceMappingURL=serializer.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/transactions/json-rpc-resolver.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getClient": (()=>getClient),
    "resolveTransactionData": (()=>resolveTransactionData)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/valibot/dist/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/data/internal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Inputs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/Inputs.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$serializer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/serializer.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$utils$2f$dist$2f$esm$2f$chunk$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/utils/dist/esm/chunk.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
const MAX_OBJECTS_PER_FETCH = 50;
const GAS_SAFE_OVERHEAD = 1000n;
const MAX_GAS = 5e10;
async function resolveTransactionData(transactionData, options, next) {
    await normalizeInputs(transactionData, options);
    await resolveObjectReferences(transactionData, options);
    if (!options.onlyTransactionKind) {
        await setGasPrice(transactionData, options);
        await setGasBudget(transactionData, options);
        await setGasPayment(transactionData, options);
    }
    await validate(transactionData);
    return await next();
}
async function setGasPrice(transactionData, options) {
    if (!transactionData.gasConfig.price) {
        transactionData.gasConfig.price = String(await getClient(options).getReferenceGasPrice());
    }
}
async function setGasBudget(transactionData, options) {
    if (transactionData.gasConfig.budget) {
        return;
    }
    const dryRunResult = await getClient(options).dryRunTransactionBlock({
        transactionBlock: transactionData.build({
            overrides: {
                gasData: {
                    budget: String(MAX_GAS),
                    payment: []
                }
            }
        })
    });
    if (dryRunResult.effects.status.status !== "success") {
        throw new Error(`Dry run failed, could not automatically determine a budget: ${dryRunResult.effects.status.error}`, {
            cause: dryRunResult
        });
    }
    const safeOverhead = GAS_SAFE_OVERHEAD * BigInt(transactionData.gasConfig.price || 1n);
    const baseComputationCostWithOverhead = BigInt(dryRunResult.effects.gasUsed.computationCost) + safeOverhead;
    const gasBudget = baseComputationCostWithOverhead + BigInt(dryRunResult.effects.gasUsed.storageCost) - BigInt(dryRunResult.effects.gasUsed.storageRebate);
    transactionData.gasConfig.budget = String(gasBudget > baseComputationCostWithOverhead ? gasBudget : baseComputationCostWithOverhead);
}
async function setGasPayment(transactionData, options) {
    if (!transactionData.gasConfig.payment) {
        const coins = await getClient(options).getCoins({
            owner: transactionData.gasConfig.owner || transactionData.sender,
            coinType: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SUI_TYPE_ARG"]
        });
        const paymentCoins = coins.data.filter((coin)=>{
            const matchingInput = transactionData.inputs.find((input)=>{
                if (input.Object?.ImmOrOwnedObject) {
                    return coin.coinObjectId === input.Object.ImmOrOwnedObject.objectId;
                }
                return false;
            });
            return !matchingInput;
        }).map((coin)=>({
                objectId: coin.coinObjectId,
                digest: coin.digest,
                version: coin.version
            }));
        if (!paymentCoins.length) {
            throw new Error("No valid gas coins found for the transaction.");
        }
        transactionData.gasConfig.payment = paymentCoins.map((payment)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectRef"], payment));
    }
}
async function resolveObjectReferences(transactionData, options) {
    const objectsToResolve = transactionData.inputs.filter((input)=>{
        return input.UnresolvedObject && !(input.UnresolvedObject.version || input.UnresolvedObject?.initialSharedVersion);
    });
    const dedupedIds = [
        ...new Set(objectsToResolve.map((input)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiObjectId"])(input.UnresolvedObject.objectId)))
    ];
    const objectChunks = dedupedIds.length ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$utils$2f$dist$2f$esm$2f$chunk$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["chunk"])(dedupedIds, MAX_OBJECTS_PER_FETCH) : [];
    const resolved = (await Promise.all(objectChunks.map((chunk2)=>getClient(options).multiGetObjects({
            ids: chunk2,
            options: {
                showOwner: true
            }
        })))).flat();
    const responsesById = new Map(dedupedIds.map((id, index)=>{
        return [
            id,
            resolved[index]
        ];
    }));
    const invalidObjects = Array.from(responsesById).filter(([_, obj])=>obj.error).map(([_, obj])=>JSON.stringify(obj.error));
    if (invalidObjects.length) {
        throw new Error(`The following input objects are invalid: ${invalidObjects.join(", ")}`);
    }
    const objects = resolved.map((object)=>{
        if (object.error || !object.data) {
            throw new Error(`Failed to fetch object: ${object.error}`);
        }
        const owner = object.data.owner;
        const initialSharedVersion = owner && typeof owner === "object" && "Shared" in owner ? owner.Shared.initial_shared_version : null;
        return {
            objectId: object.data.objectId,
            digest: object.data.digest,
            version: object.data.version,
            initialSharedVersion
        };
    });
    const objectsById = new Map(dedupedIds.map((id, index)=>{
        return [
            id,
            objects[index]
        ];
    }));
    for (const [index, input] of transactionData.inputs.entries()){
        if (!input.UnresolvedObject) {
            continue;
        }
        let updated;
        const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(input.UnresolvedObject.objectId);
        const object = objectsById.get(id);
        if (input.UnresolvedObject.initialSharedVersion ?? object?.initialSharedVersion) {
            updated = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Inputs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Inputs"].SharedObjectRef({
                objectId: id,
                initialSharedVersion: input.UnresolvedObject.initialSharedVersion || object?.initialSharedVersion,
                mutable: isUsedAsMutable(transactionData, index)
            });
        } else if (isUsedAsReceiving(transactionData, index)) {
            updated = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Inputs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Inputs"].ReceivingRef({
                objectId: id,
                digest: input.UnresolvedObject.digest ?? object?.digest,
                version: input.UnresolvedObject.version ?? object?.version
            });
        }
        transactionData.inputs[transactionData.inputs.indexOf(input)] = updated ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Inputs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Inputs"].ObjectRef({
            objectId: id,
            digest: input.UnresolvedObject.digest ?? object?.digest,
            version: input.UnresolvedObject.version ?? object?.version
        });
    }
}
async function normalizeInputs(transactionData, options) {
    const { inputs, commands } = transactionData;
    const moveCallsToResolve = [];
    const moveFunctionsToResolve = /* @__PURE__ */ new Set();
    commands.forEach((command)=>{
        if (command.MoveCall) {
            if (command.MoveCall._argumentTypes) {
                return;
            }
            const inputs2 = command.MoveCall.arguments.map((arg)=>{
                if (arg.$kind === "Input") {
                    return transactionData.inputs[arg.Input];
                }
                return null;
            });
            const needsResolution = inputs2.some((input)=>input?.UnresolvedPure || input?.UnresolvedObject);
            if (needsResolution) {
                const functionName = `${command.MoveCall.package}::${command.MoveCall.module}::${command.MoveCall.function}`;
                moveFunctionsToResolve.add(functionName);
                moveCallsToResolve.push(command.MoveCall);
            }
        }
        switch(command.$kind){
            case "SplitCoins":
                command.SplitCoins.amounts.forEach((amount)=>{
                    normalizeRawArgument(amount, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U64, transactionData);
                });
                break;
            case "TransferObjects":
                normalizeRawArgument(command.TransferObjects.address, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].Address, transactionData);
                break;
        }
    });
    const moveFunctionParameters = /* @__PURE__ */ new Map();
    if (moveFunctionsToResolve.size > 0) {
        const client = getClient(options);
        await Promise.all([
            ...moveFunctionsToResolve
        ].map(async (functionName)=>{
            const [packageId, moduleId, functionId] = functionName.split("::");
            const def = await client.getNormalizedMoveFunction({
                package: packageId,
                module: moduleId,
                function: functionId
            });
            moveFunctionParameters.set(functionName, def.parameters.map((param)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$serializer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizedTypeToMoveTypeSignature"])(param)));
        }));
    }
    if (moveCallsToResolve.length) {
        await Promise.all(moveCallsToResolve.map(async (moveCall)=>{
            const parameters = moveFunctionParameters.get(`${moveCall.package}::${moveCall.module}::${moveCall.function}`);
            if (!parameters) {
                return;
            }
            const hasTxContext = parameters.length > 0 && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$serializer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTxContext"])(parameters.at(-1));
            const params = hasTxContext ? parameters.slice(0, parameters.length - 1) : parameters;
            moveCall._argumentTypes = params;
        }));
    }
    commands.forEach((command)=>{
        if (!command.MoveCall) {
            return;
        }
        const moveCall = command.MoveCall;
        const fnName = `${moveCall.package}::${moveCall.module}::${moveCall.function}`;
        const params = moveCall._argumentTypes;
        if (!params) {
            return;
        }
        if (params.length !== command.MoveCall.arguments.length) {
            throw new Error(`Incorrect number of arguments for ${fnName}`);
        }
        params.forEach((param, i)=>{
            const arg = moveCall.arguments[i];
            if (arg.$kind !== "Input") return;
            const input = inputs[arg.Input];
            if (!input.UnresolvedPure && !input.UnresolvedObject) {
                return;
            }
            const inputValue = input.UnresolvedPure?.value ?? input.UnresolvedObject?.objectId;
            const schema = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$serializer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPureBcsSchema"])(param.body);
            if (schema) {
                arg.type = "pure";
                inputs[inputs.indexOf(input)] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Inputs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Inputs"].Pure(schema.serialize(inputValue));
                return;
            }
            if (typeof inputValue !== "string") {
                throw new Error(`Expect the argument to be an object id string, got ${JSON.stringify(inputValue, null, 2)}`);
            }
            arg.type = "object";
            const unresolvedObject = input.UnresolvedPure ? {
                $kind: "UnresolvedObject",
                UnresolvedObject: {
                    objectId: inputValue
                }
            } : input;
            inputs[arg.Input] = unresolvedObject;
        });
    });
}
function validate(transactionData) {
    transactionData.inputs.forEach((input, index)=>{
        if (input.$kind !== "Object" && input.$kind !== "Pure") {
            throw new Error(`Input at index ${index} has not been resolved.  Expected a Pure or Object input, but found ${JSON.stringify(input)}`);
        }
    });
}
function normalizeRawArgument(arg, schema, transactionData) {
    if (arg.$kind !== "Input") {
        return;
    }
    const input = transactionData.inputs[arg.Input];
    if (input.$kind !== "UnresolvedPure") {
        return;
    }
    transactionData.inputs[arg.Input] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Inputs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Inputs"].Pure(schema.serialize(input.UnresolvedPure.value));
}
function isUsedAsMutable(transactionData, index) {
    let usedAsMutable = false;
    transactionData.getInputUses(index, (arg, tx)=>{
        if (tx.MoveCall && tx.MoveCall._argumentTypes) {
            const argIndex = tx.MoveCall.arguments.indexOf(arg);
            usedAsMutable = tx.MoveCall._argumentTypes[argIndex].ref !== "&" || usedAsMutable;
        }
        if (tx.$kind === "MakeMoveVec" || tx.$kind === "MergeCoins" || tx.$kind === "SplitCoins") {
            usedAsMutable = true;
        }
    });
    return usedAsMutable;
}
function isUsedAsReceiving(transactionData, index) {
    let usedAsReceiving = false;
    transactionData.getInputUses(index, (arg, tx)=>{
        if (tx.MoveCall && tx.MoveCall._argumentTypes) {
            const argIndex = tx.MoveCall.arguments.indexOf(arg);
            usedAsReceiving = isReceivingType(tx.MoveCall._argumentTypes[argIndex]) || usedAsReceiving;
        }
    });
    return usedAsReceiving;
}
function isReceivingType(type) {
    if (typeof type.body !== "object" || !("datatype" in type.body)) {
        return false;
    }
    return type.body.datatype.package === "0x2" && type.body.datatype.module === "transfer" && type.body.datatype.type === "Receiving";
}
function getClient(options) {
    if (!options.client) {
        throw new Error(`No sui client passed to Transaction#build, but transaction data was not sufficient to build offline.`);
    }
    return options.client;
}
;
 //# sourceMappingURL=json-rpc-resolver.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/transactions/object.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createObjectMethods": (()=>createObjectMethods)
});
function createObjectMethods(makeObject) {
    function object(value) {
        return makeObject(value);
    }
    object.system = ()=>object("0x5");
    object.clock = ()=>object("0x6");
    object.random = ()=>object("0x8");
    object.denyList = ()=>object("0x403");
    object.option = ({ type, value })=>(tx)=>tx.moveCall({
                typeArguments: [
                    type
                ],
                target: `0x1::option::${value === null ? "none" : "some"}`,
                arguments: value === null ? [] : [
                    tx.object(value)
                ]
            });
    return object;
}
;
 //# sourceMappingURL=object.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/bcs/pure.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "pureBcsSchemaFromTypeName": (()=>pureBcsSchemaFromTypeName)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/bcs.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/bcs.js [app-client] (ecmascript)");
;
;
function pureBcsSchemaFromTypeName(name) {
    switch(name){
        case "u8":
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8();
        case "u16":
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u16();
        case "u32":
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u32();
        case "u64":
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64();
        case "u128":
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u128();
        case "u256":
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u256();
        case "bool":
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].bool();
        case "string":
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string();
        case "id":
        case "address":
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Address"];
    }
    const generic = name.match(/^(vector|option)<(.+)>$/);
    if (generic) {
        const [kind, inner] = generic.slice(1);
        if (kind === "vector") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(pureBcsSchemaFromTypeName(inner));
        } else {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].option(pureBcsSchemaFromTypeName(inner));
        }
    }
    throw new Error(`Invalid Pure type name: ${name}`);
}
;
 //# sourceMappingURL=pure.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/transactions/pure.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createPure": (()=>createPure)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2d$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/bcs-type.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$pure$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/pure.js [app-client] (ecmascript)");
;
;
;
function createPure(makePure) {
    function pure(typeOrSerializedValue, value) {
        if (typeof typeOrSerializedValue === "string") {
            return makePure((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$pure$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pureBcsSchemaFromTypeName"])(typeOrSerializedValue).serialize(value));
        }
        if (typeOrSerializedValue instanceof Uint8Array || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2d$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isSerializedBcs"])(typeOrSerializedValue)) {
            return makePure(typeOrSerializedValue);
        }
        throw new Error("tx.pure must be called either a bcs type name, or a serialized bcs value");
    }
    pure.u8 = (value)=>makePure(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U8.serialize(value));
    pure.u16 = (value)=>makePure(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U16.serialize(value));
    pure.u32 = (value)=>makePure(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U32.serialize(value));
    pure.u64 = (value)=>makePure(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U64.serialize(value));
    pure.u128 = (value)=>makePure(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U128.serialize(value));
    pure.u256 = (value)=>makePure(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].U256.serialize(value));
    pure.bool = (value)=>makePure(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].Bool.serialize(value));
    pure.string = (value)=>makePure(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].String.serialize(value));
    pure.address = (value)=>makePure(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].Address.serialize(value));
    pure.id = pure.address;
    pure.vector = (type, value)=>{
        return makePure(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].vector((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$pure$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pureBcsSchemaFromTypeName"])(type)).serialize(value));
    };
    pure.option = (type, value)=>{
        return makePure(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].option((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$pure$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pureBcsSchemaFromTypeName"])(type)).serialize(value));
    };
    return pure;
}
;
 //# sourceMappingURL=pure.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/transactions/hash.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "hashTypedData": (()=>hashTypedData)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$blake2b$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@noble/hashes/esm/blake2b.js [app-client] (ecmascript)");
;
function hashTypedData(typeTag, data) {
    const typeTagBytes = Array.from(`${typeTag}::`).map((e)=>e.charCodeAt(0));
    const dataWithTag = new Uint8Array(typeTagBytes.length + data.length);
    dataWithTag.set(typeTagBytes);
    dataWithTag.set(data, typeTagBytes.length);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$blake2b$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["blake2b"])(dataWithTag, {
        dkLen: 32
    });
}
;
 //# sourceMappingURL=hash.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/transactions/TransactionData.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "TransactionDataBuilder": (()=>TransactionDataBuilder)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b58$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b58.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/valibot/dist/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/data/internal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$v1$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/data/v1.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$hash$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/hash.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
function prepareSuiAddress(address) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(address).replace("0x", "");
}
class TransactionDataBuilder {
    constructor(clone){
        this.version = 2;
        this.sender = clone?.sender ?? null;
        this.expiration = clone?.expiration ?? null;
        this.inputs = clone?.inputs ?? [];
        this.commands = clone?.commands ?? [];
        this.gasData = clone?.gasData ?? {
            budget: null,
            price: null,
            owner: null,
            payment: null
        };
    }
    static fromKindBytes(bytes) {
        const kind = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].TransactionKind.parse(bytes);
        const programmableTx = kind.ProgrammableTransaction;
        if (!programmableTx) {
            throw new Error("Unable to deserialize from bytes.");
        }
        return TransactionDataBuilder.restore({
            version: 2,
            sender: null,
            expiration: null,
            gasData: {
                budget: null,
                owner: null,
                payment: null,
                price: null
            },
            inputs: programmableTx.inputs,
            commands: programmableTx.commands
        });
    }
    static fromBytes(bytes) {
        const rawData = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].TransactionData.parse(bytes);
        const data = rawData?.V1;
        const programmableTx = data.kind.ProgrammableTransaction;
        if (!data || !programmableTx) {
            throw new Error("Unable to deserialize from bytes.");
        }
        return TransactionDataBuilder.restore({
            version: 2,
            sender: data.sender,
            expiration: data.expiration,
            gasData: data.gasData,
            inputs: programmableTx.inputs,
            commands: programmableTx.commands
        });
    }
    static restore(data) {
        if (data.version === 2) {
            return new TransactionDataBuilder((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TransactionData"], data));
        } else {
            return new TransactionDataBuilder((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TransactionData"], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$v1$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transactionDataFromV1"])(data)));
        }
    }
    /**
   * Generate transaction digest.
   *
   * @param bytes BCS serialized transaction data
   * @returns transaction digest.
   */ static getDigestFromBytes(bytes) {
        const hash = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$hash$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hashTypedData"])("TransactionData", bytes);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b58$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase58"])(hash);
    }
    // @deprecated use gasData instead
    get gasConfig() {
        return this.gasData;
    }
    // @deprecated use gasData instead
    set gasConfig(value) {
        this.gasData = value;
    }
    build({ maxSizeBytes = Infinity, overrides, onlyTransactionKind } = {}) {
        const inputs = this.inputs;
        const commands = this.commands;
        const kind = {
            ProgrammableTransaction: {
                inputs,
                commands
            }
        };
        if (onlyTransactionKind) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].TransactionKind.serialize(kind, {
                maxSize: maxSizeBytes
            }).toBytes();
        }
        const expiration = overrides?.expiration ?? this.expiration;
        const sender = overrides?.sender ?? this.sender;
        const gasData = {
            ...this.gasData,
            ...overrides?.gasConfig,
            ...overrides?.gasData
        };
        if (!sender) {
            throw new Error("Missing transaction sender");
        }
        if (!gasData.budget) {
            throw new Error("Missing gas budget");
        }
        if (!gasData.payment) {
            throw new Error("Missing gas payment");
        }
        if (!gasData.price) {
            throw new Error("Missing gas price");
        }
        const transactionData = {
            sender: prepareSuiAddress(sender),
            expiration: expiration ? expiration : {
                None: true
            },
            gasData: {
                payment: gasData.payment,
                owner: prepareSuiAddress(this.gasData.owner ?? sender),
                price: BigInt(gasData.price),
                budget: BigInt(gasData.budget)
            },
            kind: {
                ProgrammableTransaction: {
                    inputs,
                    commands
                }
            }
        };
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].TransactionData.serialize({
            V1: transactionData
        }, {
            maxSize: maxSizeBytes
        }).toBytes();
    }
    addInput(type, arg) {
        const index = this.inputs.length;
        this.inputs.push(arg);
        return {
            Input: index,
            type,
            $kind: "Input"
        };
    }
    getInputUses(index, fn) {
        this.mapArguments((arg, command)=>{
            if (arg.$kind === "Input" && arg.Input === index) {
                fn(arg, command);
            }
            return arg;
        });
    }
    mapArguments(fn) {
        for (const command of this.commands){
            switch(command.$kind){
                case "MoveCall":
                    command.MoveCall.arguments = command.MoveCall.arguments.map((arg)=>fn(arg, command));
                    break;
                case "TransferObjects":
                    command.TransferObjects.objects = command.TransferObjects.objects.map((arg)=>fn(arg, command));
                    command.TransferObjects.address = fn(command.TransferObjects.address, command);
                    break;
                case "SplitCoins":
                    command.SplitCoins.coin = fn(command.SplitCoins.coin, command);
                    command.SplitCoins.amounts = command.SplitCoins.amounts.map((arg)=>fn(arg, command));
                    break;
                case "MergeCoins":
                    command.MergeCoins.destination = fn(command.MergeCoins.destination, command);
                    command.MergeCoins.sources = command.MergeCoins.sources.map((arg)=>fn(arg, command));
                    break;
                case "MakeMoveVec":
                    command.MakeMoveVec.elements = command.MakeMoveVec.elements.map((arg)=>fn(arg, command));
                    break;
                case "Upgrade":
                    command.Upgrade.ticket = fn(command.Upgrade.ticket, command);
                    break;
                case "$Intent":
                    const inputs = command.$Intent.inputs;
                    command.$Intent.inputs = {};
                    for (const [key, value] of Object.entries(inputs)){
                        command.$Intent.inputs[key] = Array.isArray(value) ? value.map((arg)=>fn(arg, command)) : fn(value, command);
                    }
                    break;
                case "Publish":
                    break;
                default:
                    throw new Error(`Unexpected transaction kind: ${command.$kind}`);
            }
        }
    }
    replaceCommand(index, replacement) {
        if (!Array.isArray(replacement)) {
            this.commands[index] = replacement;
            return;
        }
        const sizeDiff = replacement.length - 1;
        this.commands.splice(index, 1, ...replacement);
        if (sizeDiff !== 0) {
            this.mapArguments((arg)=>{
                switch(arg.$kind){
                    case "Result":
                        if (arg.Result > index) {
                            arg.Result += sizeDiff;
                        }
                        break;
                    case "NestedResult":
                        if (arg.NestedResult[0] > index) {
                            arg.NestedResult[0] += sizeDiff;
                        }
                        break;
                }
                return arg;
            });
        }
    }
    getDigest() {
        const bytes = this.build({
            onlyTransactionKind: false
        });
        return TransactionDataBuilder.getDigestFromBytes(bytes);
    }
    snapshot() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TransactionData"], this);
    }
}
;
 //# sourceMappingURL=TransactionData.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/transactions/utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "extractMutableReference": (()=>extractMutableReference),
    "extractReference": (()=>extractReference),
    "extractStructTag": (()=>extractStructTag),
    "getIdFromCallArg": (()=>getIdFromCallArg),
    "isArgument": (()=>isArgument)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/valibot/dist/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/data/internal.js [app-client] (ecmascript)");
;
;
;
function extractMutableReference(normalizedType) {
    return typeof normalizedType === "object" && "MutableReference" in normalizedType ? normalizedType.MutableReference : void 0;
}
function extractReference(normalizedType) {
    return typeof normalizedType === "object" && "Reference" in normalizedType ? normalizedType.Reference : void 0;
}
function extractStructTag(normalizedType) {
    if (typeof normalizedType === "object" && "Struct" in normalizedType) {
        return normalizedType;
    }
    const ref = extractReference(normalizedType);
    const mutRef = extractMutableReference(normalizedType);
    if (typeof ref === "object" && "Struct" in ref) {
        return ref;
    }
    if (typeof mutRef === "object" && "Struct" in mutRef) {
        return mutRef;
    }
    return void 0;
}
function getIdFromCallArg(arg) {
    if (typeof arg === "string") {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(arg);
    }
    if (arg.Object) {
        if (arg.Object.ImmOrOwnedObject) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(arg.Object.ImmOrOwnedObject.objectId);
        }
        if (arg.Object.Receiving) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(arg.Object.Receiving.objectId);
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(arg.Object.SharedObject.objectId);
    }
    if (arg.UnresolvedObject) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(arg.UnresolvedObject.objectId);
    }
    return void 0;
}
function isArgument(value) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["is"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Argument"], value);
}
;
 //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/transactions/Transaction.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Transaction": (()=>Transaction),
    "isTransaction": (()=>isTransaction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b64.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2d$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/bcs-type.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/valibot/dist/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Commands$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/Commands.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/data/internal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$v1$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/data/v1.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$v2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/data/v2.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Inputs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/Inputs.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$json$2d$rpc$2d$resolver$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/json-rpc-resolver.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$object$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/object.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$pure$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/pure.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$TransactionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/TransactionData.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/utils.js [app-client] (ecmascript)");
var __typeError = (msg)=>{
    throw TypeError(msg);
};
var __accessCheck = (obj, member, msg)=>member.has(obj) || __typeError("Cannot " + msg);
var __privateGet = (obj, member, getter)=>(__accessCheck(obj, member, "read from private field"), getter ? getter.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value)=>member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
var __privateSet = (obj, member, value, setter)=>(__accessCheck(obj, member, "write to private field"), setter ? setter.call(obj, value) : member.set(obj, value), value);
var __privateMethod = (obj, member, method)=>(__accessCheck(obj, member, "access private method"), method);
var _serializationPlugins, _buildPlugins, _intentResolvers, _data, _Transaction_instances, normalizeTransactionArgument_fn, resolveArgument_fn, prepareBuild_fn, runPlugins_fn;
;
;
;
;
;
;
;
;
;
;
;
;
;
function createTransactionResult(index, length = Infinity) {
    const baseResult = {
        $kind: "Result",
        Result: index
    };
    const nestedResults = [];
    const nestedResultFor = (resultIndex)=>nestedResults[resultIndex] ?? (nestedResults[resultIndex] = {
            $kind: "NestedResult",
            NestedResult: [
                index,
                resultIndex
            ]
        });
    return new Proxy(baseResult, {
        set () {
            throw new Error("The transaction result is a proxy, and does not support setting properties directly");
        },
        // TODO: Instead of making this return a concrete argument, we should ideally
        // make it reference-based (so that this gets resolved at build-time), which
        // allows re-ordering transactions.
        get (target, property) {
            if (property in target) {
                return Reflect.get(target, property);
            }
            if (property === Symbol.iterator) {
                return function*() {
                    let i = 0;
                    while(i < length){
                        yield nestedResultFor(i);
                        i++;
                    }
                };
            }
            if (typeof property === "symbol") return;
            const resultIndex = parseInt(property, 10);
            if (Number.isNaN(resultIndex) || resultIndex < 0) return;
            return nestedResultFor(resultIndex);
        }
    });
}
const TRANSACTION_BRAND = Symbol.for("@mysten/transaction");
function isTransaction(obj) {
    return !!obj && typeof obj === "object" && obj[TRANSACTION_BRAND] === true;
}
const modulePluginRegistry = {
    buildPlugins: /* @__PURE__ */ new Map(),
    serializationPlugins: /* @__PURE__ */ new Map()
};
const TRANSACTION_REGISTRY_KEY = Symbol.for("@mysten/transaction/registry");
function getGlobalPluginRegistry() {
    try {
        const target = globalThis;
        if (!target[TRANSACTION_REGISTRY_KEY]) {
            target[TRANSACTION_REGISTRY_KEY] = modulePluginRegistry;
        }
        return target[TRANSACTION_REGISTRY_KEY];
    } catch (e) {
        return modulePluginRegistry;
    }
}
const _Transaction = class _Transaction {
    constructor(){
        __privateAdd(this, _Transaction_instances);
        __privateAdd(this, _serializationPlugins);
        __privateAdd(this, _buildPlugins);
        __privateAdd(this, _intentResolvers, /* @__PURE__ */ new Map());
        __privateAdd(this, _data);
        /**
     * Add a new object input to the transaction.
     */ this.object = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$object$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createObjectMethods"])((value)=>{
            if (typeof value === "function") {
                return this.object(value(this));
            }
            if (typeof value === "object" && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["is"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Argument"], value)) {
                return value;
            }
            const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getIdFromCallArg"])(value);
            const inserted = __privateGet(this, _data).inputs.find((i)=>id === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getIdFromCallArg"])(i));
            if (inserted?.Object?.SharedObject && typeof value === "object" && value.Object?.SharedObject) {
                inserted.Object.SharedObject.mutable = inserted.Object.SharedObject.mutable || value.Object.SharedObject.mutable;
            }
            return inserted ? {
                $kind: "Input",
                Input: __privateGet(this, _data).inputs.indexOf(inserted),
                type: "object"
            } : __privateGet(this, _data).addInput("object", typeof value === "string" ? {
                $kind: "UnresolvedObject",
                UnresolvedObject: {
                    objectId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(value)
                }
            } : value);
        });
        const globalPlugins = getGlobalPluginRegistry();
        __privateSet(this, _data, new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$TransactionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TransactionDataBuilder"]());
        __privateSet(this, _buildPlugins, [
            ...globalPlugins.buildPlugins.values()
        ]);
        __privateSet(this, _serializationPlugins, [
            ...globalPlugins.serializationPlugins.values()
        ]);
    }
    /**
   * Converts from a serialize transaction kind (built with `build({ onlyTransactionKind: true })`) to a `Transaction` class.
   * Supports either a byte array, or base64-encoded bytes.
   */ static fromKind(serialized) {
        const tx = new _Transaction();
        __privateSet(tx, _data, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$TransactionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TransactionDataBuilder"].fromKindBytes(typeof serialized === "string" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(serialized) : serialized));
        return tx;
    }
    /**
   * Converts from a serialized transaction format to a `Transaction` class.
   * There are two supported serialized formats:
   * - A string returned from `Transaction#serialize`. The serialized format must be compatible, or it will throw an error.
   * - A byte array (or base64-encoded bytes) containing BCS transaction data.
   */ static from(transaction) {
        const newTransaction = new _Transaction();
        if (isTransaction(transaction)) {
            __privateSet(newTransaction, _data, new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$TransactionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TransactionDataBuilder"](transaction.getData()));
        } else if (typeof transaction !== "string" || !transaction.startsWith("{")) {
            __privateSet(newTransaction, _data, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$TransactionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TransactionDataBuilder"].fromBytes(typeof transaction === "string" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(transaction) : transaction));
        } else {
            __privateSet(newTransaction, _data, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$TransactionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TransactionDataBuilder"].restore(JSON.parse(transaction)));
        }
        return newTransaction;
    }
    static registerGlobalSerializationPlugin(stepOrStep, step) {
        getGlobalPluginRegistry().serializationPlugins.set(stepOrStep, step ?? stepOrStep);
    }
    static unregisterGlobalSerializationPlugin(name) {
        getGlobalPluginRegistry().serializationPlugins.delete(name);
    }
    static registerGlobalBuildPlugin(stepOrStep, step) {
        getGlobalPluginRegistry().buildPlugins.set(stepOrStep, step ?? stepOrStep);
    }
    static unregisterGlobalBuildPlugin(name) {
        getGlobalPluginRegistry().buildPlugins.delete(name);
    }
    addSerializationPlugin(step) {
        __privateGet(this, _serializationPlugins).push(step);
    }
    addBuildPlugin(step) {
        __privateGet(this, _buildPlugins).push(step);
    }
    addIntentResolver(intent, resolver) {
        if (__privateGet(this, _intentResolvers).has(intent) && __privateGet(this, _intentResolvers).get(intent) !== resolver) {
            throw new Error(`Intent resolver for ${intent} already exists`);
        }
        __privateGet(this, _intentResolvers).set(intent, resolver);
    }
    setSender(sender) {
        __privateGet(this, _data).sender = sender;
    }
    /**
   * Sets the sender only if it has not already been set.
   * This is useful for sponsored transaction flows where the sender may not be the same as the signer address.
   */ setSenderIfNotSet(sender) {
        if (!__privateGet(this, _data).sender) {
            __privateGet(this, _data).sender = sender;
        }
    }
    setExpiration(expiration) {
        __privateGet(this, _data).expiration = expiration ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TransactionExpiration"], expiration) : null;
    }
    setGasPrice(price) {
        __privateGet(this, _data).gasConfig.price = String(price);
    }
    setGasBudget(budget) {
        __privateGet(this, _data).gasConfig.budget = String(budget);
    }
    setGasBudgetIfNotSet(budget) {
        if (__privateGet(this, _data).gasData.budget == null) {
            __privateGet(this, _data).gasConfig.budget = String(budget);
        }
    }
    setGasOwner(owner) {
        __privateGet(this, _data).gasConfig.owner = owner;
    }
    setGasPayment(payments) {
        __privateGet(this, _data).gasConfig.payment = payments.map((payment)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectRef"], payment));
    }
    /** @deprecated Use `getData()` instead. */ get blockData() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$v1$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["serializeV1TransactionData"])(__privateGet(this, _data).snapshot());
    }
    /** Get a snapshot of the transaction data, in JSON form: */ getData() {
        return __privateGet(this, _data).snapshot();
    }
    // Used to brand transaction classes so that they can be identified, even between multiple copies
    // of the builder.
    get [TRANSACTION_BRAND]() {
        return true;
    }
    // Temporary workaround for the wallet interface accidentally serializing transactions via postMessage
    get pure() {
        Object.defineProperty(this, "pure", {
            enumerable: false,
            value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$pure$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createPure"])((value)=>{
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2d$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isSerializedBcs"])(value)) {
                    return __privateGet(this, _data).addInput("pure", {
                        $kind: "Pure",
                        Pure: {
                            bytes: value.toBase64()
                        }
                    });
                }
                return __privateGet(this, _data).addInput("pure", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["is"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["NormalizedCallArg"], value) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["NormalizedCallArg"], value) : value instanceof Uint8Array ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Inputs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Inputs"].Pure(value) : {
                    $kind: "UnresolvedPure",
                    UnresolvedPure: {
                        value
                    }
                });
            })
        });
        return this.pure;
    }
    /** Returns an argument for the gas coin, to be used in a transaction. */ get gas() {
        return {
            $kind: "GasCoin",
            GasCoin: true
        };
    }
    /**
   * Add a new object input to the transaction using the fully-resolved object reference.
   * If you only have an object ID, use `builder.object(id)` instead.
   */ objectRef(...args) {
        return this.object(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Inputs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Inputs"].ObjectRef(...args));
    }
    /**
   * Add a new receiving input to the transaction using the fully-resolved object reference.
   * If you only have an object ID, use `builder.object(id)` instead.
   */ receivingRef(...args) {
        return this.object(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Inputs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Inputs"].ReceivingRef(...args));
    }
    /**
   * Add a new shared object input to the transaction using the fully-resolved shared object reference.
   * If you only have an object ID, use `builder.object(id)` instead.
   */ sharedObjectRef(...args) {
        return this.object(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Inputs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Inputs"].SharedObjectRef(...args));
    }
    /** Add a transaction to the transaction */ add(command) {
        if (typeof command === "function") {
            return command(this);
        }
        const index = __privateGet(this, _data).commands.push(command);
        return createTransactionResult(index - 1);
    }
    // Method shorthands:
    splitCoins(coin, amounts) {
        const command = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Commands$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Commands"].SplitCoins(typeof coin === "string" ? this.object(coin) : __privateMethod(this, _Transaction_instances, resolveArgument_fn).call(this, coin), amounts.map((amount)=>typeof amount === "number" || typeof amount === "bigint" || typeof amount === "string" ? this.pure.u64(amount) : __privateMethod(this, _Transaction_instances, normalizeTransactionArgument_fn).call(this, amount)));
        const index = __privateGet(this, _data).commands.push(command);
        return createTransactionResult(index - 1, amounts.length);
    }
    mergeCoins(destination, sources) {
        return this.add(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Commands$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Commands"].MergeCoins(this.object(destination), sources.map((src)=>this.object(src))));
    }
    publish({ modules, dependencies }) {
        return this.add(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Commands$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Commands"].Publish({
            modules,
            dependencies
        }));
    }
    upgrade({ modules, dependencies, package: packageId, ticket }) {
        return this.add(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Commands$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Commands"].Upgrade({
            modules,
            dependencies,
            package: packageId,
            ticket: this.object(ticket)
        }));
    }
    moveCall({ arguments: args, ...input }) {
        return this.add(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Commands$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Commands"].MoveCall({
            ...input,
            arguments: args?.map((arg)=>__privateMethod(this, _Transaction_instances, normalizeTransactionArgument_fn).call(this, arg))
        }));
    }
    transferObjects(objects, address) {
        return this.add(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Commands$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Commands"].TransferObjects(objects.map((obj)=>this.object(obj)), typeof address === "string" ? this.pure.address(address) : __privateMethod(this, _Transaction_instances, normalizeTransactionArgument_fn).call(this, address)));
    }
    makeMoveVec({ type, elements }) {
        return this.add(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Commands$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Commands"].MakeMoveVec({
            type,
            elements: elements.map((obj)=>this.object(obj))
        }));
    }
    /**
   * @deprecated Use toJSON instead.
   * For synchronous serialization, you can use `getData()`
   * */ serialize() {
        return JSON.stringify((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$v1$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["serializeV1TransactionData"])(__privateGet(this, _data).snapshot()));
    }
    async toJSON(options = {}) {
        await this.prepareForSerialization(options);
        return JSON.stringify((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$v2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SerializedTransactionDataV2"], __privateGet(this, _data).snapshot()), (_key, value)=>typeof value === "bigint" ? value.toString() : value, 2);
    }
    /** Build the transaction to BCS bytes, and sign it with the provided keypair. */ async sign(options) {
        const { signer, ...buildOptions } = options;
        const bytes = await this.build(buildOptions);
        return signer.signTransaction(bytes);
    }
    /** Build the transaction to BCS bytes. */ async build(options = {}) {
        await this.prepareForSerialization(options);
        await __privateMethod(this, _Transaction_instances, prepareBuild_fn).call(this, options);
        return __privateGet(this, _data).build({
            onlyTransactionKind: options.onlyTransactionKind
        });
    }
    /** Derive transaction digest */ async getDigest(options = {}) {
        await __privateMethod(this, _Transaction_instances, prepareBuild_fn).call(this, options);
        return __privateGet(this, _data).getDigest();
    }
    async prepareForSerialization(options) {
        const intents = /* @__PURE__ */ new Set();
        for (const command of __privateGet(this, _data).commands){
            if (command.$Intent) {
                intents.add(command.$Intent.name);
            }
        }
        const steps = [
            ...__privateGet(this, _serializationPlugins)
        ];
        for (const intent of intents){
            if (options.supportedIntents?.includes(intent)) {
                continue;
            }
            if (!__privateGet(this, _intentResolvers).has(intent)) {
                throw new Error(`Missing intent resolver for ${intent}`);
            }
            steps.push(__privateGet(this, _intentResolvers).get(intent));
        }
        await __privateMethod(this, _Transaction_instances, runPlugins_fn).call(this, steps, options);
    }
};
_serializationPlugins = new WeakMap();
_buildPlugins = new WeakMap();
_intentResolvers = new WeakMap();
_data = new WeakMap();
_Transaction_instances = new WeakSet();
normalizeTransactionArgument_fn = function(arg) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2d$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isSerializedBcs"])(arg)) {
        return this.pure(arg);
    }
    return __privateMethod(this, _Transaction_instances, resolveArgument_fn).call(this, arg);
};
resolveArgument_fn = function(arg) {
    if (typeof arg === "function") {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Argument"], arg(this));
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$data$2f$internal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Argument"], arg);
};
prepareBuild_fn = async function(options) {
    if (!options.onlyTransactionKind && !__privateGet(this, _data).sender) {
        throw new Error("Missing transaction sender");
    }
    await __privateMethod(this, _Transaction_instances, runPlugins_fn).call(this, [
        ...__privateGet(this, _buildPlugins),
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$json$2d$rpc$2d$resolver$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveTransactionData"]
    ], options);
};
runPlugins_fn = async function(plugins, options) {
    const createNext = (i)=>{
        if (i >= plugins.length) {
            return ()=>{};
        }
        const plugin = plugins[i];
        return async ()=>{
            const next = createNext(i + 1);
            let calledNext = false;
            let nextResolved = false;
            await plugin(__privateGet(this, _data), options, async ()=>{
                if (calledNext) {
                    throw new Error(`next() was call multiple times in TransactionPlugin ${i}`);
                }
                calledNext = true;
                await next();
                nextResolved = true;
            });
            if (!calledNext) {
                throw new Error(`next() was not called in TransactionPlugin ${i}`);
            }
            if (!nextResolved) {
                throw new Error(`next() was not awaited in TransactionPlugin ${i}`);
            }
        };
    };
    await createNext(0)();
};
let Transaction = _Transaction;
;
 //# sourceMappingURL=Transaction.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/utils/format.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "formatAddress": (()=>formatAddress),
    "formatDigest": (()=>formatDigest)
});
const ELLIPSIS = "\u2026";
function formatAddress(address) {
    if (address.length <= 6) {
        return address;
    }
    const offset = address.startsWith("0x") ? 2 : 0;
    return `0x${address.slice(offset, offset + 4)}${ELLIPSIS}${address.slice(-4)}`;
}
function formatDigest(digest) {
    return `${digest.slice(0, 10)}${ELLIPSIS}`;
}
;
 //# sourceMappingURL=format.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/client/network.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getFullnodeUrl": (()=>getFullnodeUrl)
});
function getFullnodeUrl(network) {
    switch(network){
        case "mainnet":
            return "https://fullnode.mainnet.sui.io:443";
        case "testnet":
            return "https://fullnode.testnet.sui.io:443";
        case "devnet":
            return "https://fullnode.devnet.sui.io:443";
        case "localnet":
            return "http://127.0.0.1:9000";
        default:
            throw new Error(`Unknown network: ${network}`);
    }
}
;
 //# sourceMappingURL=network.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/experimental/cache.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ClientCache": (()=>ClientCache)
});
var __typeError = (msg)=>{
    throw TypeError(msg);
};
var __accessCheck = (obj, member, msg)=>member.has(obj) || __typeError("Cannot " + msg);
var __privateGet = (obj, member, getter)=>(__accessCheck(obj, member, "read from private field"), getter ? getter.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value)=>member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
var __privateSet = (obj, member, value, setter)=>(__accessCheck(obj, member, "write to private field"), setter ? setter.call(obj, value) : member.set(obj, value), value);
var _prefix, _cache;
const _ClientCache = class _ClientCache {
    constructor({ prefix, cache } = {}){
        __privateAdd(this, _prefix);
        __privateAdd(this, _cache);
        __privateSet(this, _prefix, prefix ?? []);
        __privateSet(this, _cache, cache ?? /* @__PURE__ */ new Map());
    }
    read(key, load) {
        const cacheKey = [
            __privateGet(this, _prefix),
            ...key
        ].join(":");
        if (__privateGet(this, _cache).has(cacheKey)) {
            return __privateGet(this, _cache).get(cacheKey);
        }
        const result = load();
        __privateGet(this, _cache).set(cacheKey, result);
        if (typeof result === "object" && result !== null && "then" in result) {
            return Promise.resolve(result).then((v)=>{
                __privateGet(this, _cache).set(cacheKey, v);
                return v;
            }).catch((err)=>{
                __privateGet(this, _cache).delete(cacheKey);
                throw err;
            });
        }
        return result;
    }
    clear(prefix) {
        const prefixKey = [
            ...__privateGet(this, _prefix),
            ...prefix ?? []
        ].join(":");
        if (!prefixKey) {
            __privateGet(this, _cache).clear();
            return;
        }
        for (const key of __privateGet(this, _cache).keys()){
            if (key.startsWith(prefixKey)) {
                __privateGet(this, _cache).delete(key);
            }
        }
    }
    scope(prefix) {
        return new _ClientCache({
            prefix: [
                ...__privateGet(this, _prefix),
                ...Array.isArray(prefix) ? prefix : [
                    prefix
                ]
            ],
            cache: __privateGet(this, _cache)
        });
    }
};
_prefix = new WeakMap();
_cache = new WeakMap();
let ClientCache = _ClientCache;
;
 //# sourceMappingURL=cache.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/experimental/client.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Experimental_BaseClient": (()=>Experimental_BaseClient)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$experimental$2f$cache$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/experimental/cache.js [app-client] (ecmascript)");
;
class Experimental_BaseClient {
    constructor({ network }){
        this.cache = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$experimental$2f$cache$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ClientCache"]();
        this.network = network;
    }
    $extend(...registrations) {
        return Object.create(this, Object.fromEntries(registrations.map((registration)=>{
            if ("experimental_asClientExtension" in registration) {
                const { name, register } = registration.experimental_asClientExtension();
                return [
                    name,
                    {
                        value: register(this)
                    }
                ];
            }
            return [
                registration.name,
                {
                    value: registration.register(this)
                }
            ];
        })));
    }
}
;
 //# sourceMappingURL=client.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/transactions/plugins/utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "batch": (()=>batch),
    "findNamesInTransaction": (()=>findNamesInTransaction),
    "getFirstLevelNamedTypes": (()=>getFirstLevelNamedTypes),
    "populateNamedTypesFromCache": (()=>populateNamedTypesFromCache),
    "replaceNames": (()=>replaceNames)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$move$2d$registry$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/move-registry.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
;
;
const NAME_SEPARATOR = "/";
function findNamesInTransaction(builder) {
    const packages = /* @__PURE__ */ new Set();
    const types = /* @__PURE__ */ new Set();
    for (const command of builder.commands){
        if (command.MakeMoveVec?.type) {
            getNamesFromTypeList([
                command.MakeMoveVec.type
            ]).forEach((type)=>{
                types.add(type);
            });
            continue;
        }
        if (!("MoveCall" in command)) continue;
        const tx = command.MoveCall;
        if (!tx) continue;
        const pkg = tx.package.split("::")[0];
        if (hasMvrName(pkg)) {
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$move$2d$registry$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidNamedPackage"])(pkg)) throw new Error(`Invalid package name: ${pkg}`);
            packages.add(pkg);
        }
        getNamesFromTypeList(tx.typeArguments ?? []).forEach((type)=>{
            types.add(type);
        });
    }
    return {
        packages: [
            ...packages
        ],
        types: [
            ...types
        ]
    };
}
function getFirstLevelNamedTypes(types) {
    const results = /* @__PURE__ */ new Set();
    for (const type of types){
        findMvrNames(type).forEach((name)=>results.add(name));
    }
    return results;
}
function findMvrNames(type) {
    const types = /* @__PURE__ */ new Set();
    if (typeof type === "string" && !hasMvrName(type)) return types;
    const tag = isStructTag(type) ? type : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseStructTag"])(type);
    if (hasMvrName(tag.address)) types.add(`${tag.address}::${tag.module}::${tag.name}`);
    for (const param of tag.typeParams){
        findMvrNames(param).forEach((name)=>types.add(name));
    }
    return types;
}
function populateNamedTypesFromCache(types, typeCache) {
    const composedTypes = {};
    types.forEach((type)=>{
        const normalized = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeStructTag"])(findAndReplaceCachedTypes(type, typeCache));
        composedTypes[type] = normalized;
    });
    return composedTypes;
}
function findAndReplaceCachedTypes(tag, typeCache) {
    const type = isStructTag(tag) ? tag : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseStructTag"])(tag);
    const typeTag = `${type.address}::${type.module}::${type.name}`;
    const cacheHit = typeCache[typeTag];
    return {
        ...type,
        address: cacheHit ? cacheHit.split("::")[0] : type.address,
        typeParams: type.typeParams.map((param)=>findAndReplaceCachedTypes(param, typeCache))
    };
}
function replaceNames(builder, cache) {
    for (const command of builder.commands){
        if (command.MakeMoveVec?.type) {
            if (!hasMvrName(command.MakeMoveVec.type)) continue;
            if (!cache.types[command.MakeMoveVec.type]) throw new Error(`No resolution found for type: ${command.MakeMoveVec.type}`);
            command.MakeMoveVec.type = cache.types[command.MakeMoveVec.type];
        }
        const tx = command.MoveCall;
        if (!tx) continue;
        const nameParts = tx.package.split("::");
        const name = nameParts[0];
        if (hasMvrName(name) && !cache.packages[name]) throw new Error(`No address found for package: ${name}`);
        if (hasMvrName(name)) {
            nameParts[0] = cache.packages[name];
            tx.package = nameParts.join("::");
        }
        const types = tx.typeArguments;
        if (!types) continue;
        for(let i = 0; i < types.length; i++){
            if (!hasMvrName(types[i])) continue;
            if (!cache.types[types[i]]) throw new Error(`No resolution found for type: ${types[i]}`);
            types[i] = cache.types[types[i]];
        }
        tx.typeArguments = types;
    }
}
function batch(arr, size) {
    const batches = [];
    for(let i = 0; i < arr.length; i += size){
        batches.push(arr.slice(i, i + size));
    }
    return batches;
}
function getNamesFromTypeList(types) {
    const names = /* @__PURE__ */ new Set();
    for (const type of types){
        if (hasMvrName(type)) {
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$move$2d$registry$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidNamedType"])(type)) throw new Error(`Invalid type with names: ${type}`);
            names.add(type);
        }
    }
    return names;
}
function hasMvrName(nameOrType) {
    return nameOrType.includes(NAME_SEPARATOR) || nameOrType.includes("@") || nameOrType.includes(".sui");
}
function isStructTag(type) {
    return typeof type === "object" && "address" in type && "module" in type && "name" in type && "typeParams" in type;
}
;
 //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/utils/dynamic-fields.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "deriveDynamicFieldID": (()=>deriveDynamicFieldID)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/hex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$blake2b$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@noble/hashes/esm/blake2b.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/index.js [app-client] (ecmascript) <locals>");
;
;
;
function deriveDynamicFieldID(parentId, typeTag, key) {
    const address = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].Address.serialize(parentId).toBytes();
    const tag = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].TypeTag.serialize(typeTag).toBytes();
    const keyLength = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].u64().serialize(key.length).toBytes();
    const hash = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$blake2b$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["blake2b"].create({
        dkLen: 32
    });
    hash.update(new Uint8Array([
        240
    ]));
    hash.update(address);
    hash.update(keyLength);
    hash.update(key);
    hash.update(tag);
    return `0x${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(hash.digest().slice(0, 32))}`;
}
;
 //# sourceMappingURL=dynamic-fields.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/experimental/core.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Experimental_CoreClient": (()=>Experimental_CoreClient)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$type$2d$tag$2d$serializer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/type-tag-serializer.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$dynamic$2d$fields$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/dynamic-fields.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$experimental$2f$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/experimental/client.js [app-client] (ecmascript)");
;
;
;
;
class Experimental_CoreClient extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$experimental$2f$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Experimental_BaseClient"] {
    constructor(){
        super(...arguments);
        this.core = this;
    }
    async getDynamicField(options) {
        const fieldId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$dynamic$2d$fields$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deriveDynamicFieldID"])(options.parentId, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$type$2d$tag$2d$serializer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TypeTagSerializer"].parseFromStr(options.name.type), options.name.bcs);
        const { objects: [fieldObject] } = await this.getObjects({
            objectIds: [
                fieldId
            ]
        });
        if (fieldObject instanceof Error) {
            throw fieldObject;
        }
        const fieldType = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseStructTag"])(fieldObject.type);
        return {
            dynamicField: {
                id: fieldObject.id,
                digest: fieldObject.digest,
                version: fieldObject.version,
                type: fieldObject.type,
                name: {
                    type: typeof fieldType.typeParams[0] === "string" ? fieldType.typeParams[0] : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeStructTag"])(fieldType.typeParams[0]),
                    bcs: options.name.bcs
                },
                value: {
                    type: typeof fieldType.typeParams[1] === "string" ? fieldType.typeParams[1] : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeStructTag"])(fieldType.typeParams[1]),
                    bcs: fieldObject.content.slice(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SUI_ADDRESS_LENGTH"] + options.name.bcs.length)
                }
            }
        };
    }
    async waitForTransaction({ signal, timeout = 60 * 1e3, ...input }) {
        const abortSignal = signal ? AbortSignal.any([
            AbortSignal.timeout(timeout),
            signal
        ]) : AbortSignal.timeout(timeout);
        const abortPromise = new Promise((_, reject)=>{
            abortSignal.addEventListener("abort", ()=>reject(abortSignal.reason));
        });
        abortPromise.catch(()=>{});
        while(true){
            abortSignal.throwIfAborted();
            try {
                return await this.getTransaction({
                    ...input,
                    signal: abortSignal
                });
            } catch (e) {
                await Promise.race([
                    new Promise((resolve)=>setTimeout(resolve, 2e3)),
                    abortPromise
                ]);
            }
        }
    }
}
;
 //# sourceMappingURL=core.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/experimental/errors.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ObjectError": (()=>ObjectError),
    "SuiClientError": (()=>SuiClientError)
});
class SuiClientError extends Error {
}
class ObjectError extends SuiClientError {
    constructor(code, message){
        super(message);
        this.code = code;
    }
    static fromResponse(response, objectId) {
        switch(response.code){
            case "notExists":
                return new ObjectError(response.code, `Object ${response.object_id} does not exist`);
            case "dynamicFieldNotFound":
                return new ObjectError(response.code, `Dynamic field not found for object ${response.parent_object_id}`);
            case "deleted":
                return new ObjectError(response.code, `Object ${response.object_id} has been deleted`);
            case "displayError":
                return new ObjectError(response.code, `Display error: ${response.error}`);
            case "unknown":
            default:
                return new ObjectError(response.code, `Unknown error while loading object${objectId ? ` ${objectId}` : ""}`);
        }
    }
}
;
 //# sourceMappingURL=errors.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/experimental/transports/jsonRPC.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "JSONRpcTransport": (()=>JSONRpcTransport)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b64.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$plugins$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/plugins/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Transaction$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/Transaction.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$experimental$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/experimental/core.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$experimental$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/experimental/errors.js [app-client] (ecmascript)");
var __typeError = (msg)=>{
    throw TypeError(msg);
};
var __accessCheck = (obj, member, msg)=>member.has(obj) || __typeError("Cannot " + msg);
var __privateGet = (obj, member, getter)=>(__accessCheck(obj, member, "read from private field"), getter ? getter.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value)=>member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
var __privateSet = (obj, member, value, setter)=>(__accessCheck(obj, member, "write to private field"), setter ? setter.call(obj, value) : member.set(obj, value), value);
var _jsonRpcClient;
;
;
;
;
;
;
;
class JSONRpcTransport extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$experimental$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Experimental_CoreClient"] {
    constructor(jsonRpcClient){
        super({
            network: jsonRpcClient.network
        });
        __privateAdd(this, _jsonRpcClient);
        __privateSet(this, _jsonRpcClient, jsonRpcClient);
    }
    async getObjects(options) {
        const batches = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$plugins$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["batch"])(options.objectIds, 50);
        const results = [];
        for (const batch2 of batches){
            const objects = await __privateGet(this, _jsonRpcClient).multiGetObjects({
                ids: batch2,
                options: {
                    showOwner: true,
                    showType: true,
                    showBcs: true
                }
            });
            for (const [idx, object] of objects.entries()){
                if (object.error) {
                    results.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$experimental$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectError"].fromResponse(object.error, batch2[idx]));
                } else {
                    results.push(parseObject(object.data));
                }
            }
        }
        return {
            objects: results
        };
    }
    async getOwnedObjects(options) {
        const objects = await __privateGet(this, _jsonRpcClient).getOwnedObjects({
            owner: options.address,
            limit: options.limit,
            cursor: options.cursor,
            options: {
                showOwner: true,
                showType: true,
                showBcs: true
            }
        });
        return {
            objects: objects.data.map((result)=>{
                if (result.error) {
                    throw __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$experimental$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ObjectError"].fromResponse(result.error);
                }
                return parseObject(result.data);
            }),
            hasNextPage: objects.hasNextPage,
            cursor: objects.nextCursor ?? null
        };
    }
    async getCoins(options) {
        const coins = await __privateGet(this, _jsonRpcClient).getCoins({
            owner: options.address,
            coinType: options.coinType
        });
        return {
            objects: coins.data.map((coin)=>{
                return {
                    id: coin.coinObjectId,
                    version: coin.version,
                    digest: coin.digest,
                    balance: coin.balance,
                    type: `0x2::coin::Coin<${coin.coinType}>`,
                    content: Coin.serialize({
                        id: coin.coinObjectId,
                        balance: {
                            value: coin.balance
                        }
                    }).toBytes(),
                    owner: {
                        $kind: "ObjectOwner",
                        ObjectOwner: options.address
                    }
                };
            }),
            hasNextPage: coins.hasNextPage,
            cursor: coins.nextCursor ?? null
        };
    }
    async getBalance(options) {
        const balance = await __privateGet(this, _jsonRpcClient).getBalance({
            owner: options.address,
            coinType: options.coinType
        });
        return {
            balance: {
                coinType: balance.coinType,
                balance: balance.totalBalance
            }
        };
    }
    async getAllBalances(options) {
        const balances = await __privateGet(this, _jsonRpcClient).getAllBalances({
            owner: options.address
        });
        return {
            balances: balances.map((balance)=>({
                    coinType: balance.coinType,
                    balance: balance.totalBalance
                })),
            hasNextPage: false,
            cursor: null
        };
    }
    async getTransaction(options) {
        const transaction = await __privateGet(this, _jsonRpcClient).getTransactionBlock({
            digest: options.digest,
            options: {
                showRawInput: true,
                showObjectChanges: true,
                showRawEffects: true,
                showEvents: true
            }
        });
        return {
            transaction: parseTransaction(transaction)
        };
    }
    async executeTransaction(options) {
        const transaction = await __privateGet(this, _jsonRpcClient).executeTransactionBlock({
            transactionBlock: options.transaction,
            signature: options.signatures,
            options: {
                showRawEffects: true,
                showEvents: true,
                showObjectChanges: true,
                showRawInput: true
            }
        });
        return {
            transaction: parseTransaction(transaction)
        };
    }
    async dryRunTransaction(options) {
        const tx = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Transaction$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Transaction"].from(options.transaction);
        const result = await __privateGet(this, _jsonRpcClient).dryRunTransactionBlock({
            transactionBlock: options.transaction
        });
        return {
            transaction: {
                digest: await tx.getDigest(),
                effects: parseTransactionEffectsJson({
                    effects: result.effects,
                    objectChanges: result.objectChanges
                }),
                signatures: [],
                bcs: options.transaction
            }
        };
    }
    async getReferenceGasPrice() {
        const referenceGasPrice = await __privateGet(this, _jsonRpcClient).getReferenceGasPrice();
        return {
            referenceGasPrice: String(referenceGasPrice)
        };
    }
    async getDynamicFields(options) {
        const dynamicFields = await __privateGet(this, _jsonRpcClient).getDynamicFields({
            parentId: options.parentId,
            limit: options.limit,
            cursor: options.cursor
        });
        return {
            dynamicFields: dynamicFields.data.map((dynamicField)=>({
                    id: dynamicField.objectId,
                    version: dynamicField.version,
                    digest: dynamicField.digest,
                    type: dynamicField.objectType,
                    name: {
                        type: dynamicField.name.type,
                        bcs: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(dynamicField.bcsName)
                    }
                })),
            hasNextPage: dynamicFields.hasNextPage,
            cursor: dynamicFields.nextCursor
        };
    }
}
_jsonRpcClient = new WeakMap();
function parseObject(object) {
    return {
        id: object.objectId,
        version: object.version,
        digest: object.digest,
        type: object.type,
        content: object.bcs?.dataType === "moveObject" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(object.bcs.bcsBytes) : new Uint8Array(),
        owner: parseOwner(object.owner)
    };
}
function parseOwner(owner) {
    if (owner === "Immutable") {
        return {
            $kind: "Immutable",
            Immutable: true
        };
    }
    if ("ConsensusV2" in owner) {
        return {
            $kind: "ConsensusV2",
            ConsensusV2: {
                authenticator: {
                    $kind: "SingleOwner",
                    SingleOwner: owner.ConsensusV2.authenticator.SingleOwner
                },
                startVersion: owner.ConsensusV2.start_version
            }
        };
    }
    if ("AddressOwner" in owner) {
        return {
            $kind: "AddressOwner",
            AddressOwner: owner.AddressOwner
        };
    }
    if ("ObjectOwner" in owner) {
        return {
            $kind: "ObjectOwner",
            ObjectOwner: owner.ObjectOwner
        };
    }
    if ("Shared" in owner) {
        return {
            $kind: "Shared",
            Shared: {
                initialSharedVersion: owner.Shared.initial_shared_version
            }
        };
    }
    throw new Error(`Unknown owner type: ${JSON.stringify(owner)}`);
}
function parseTransaction(transaction) {
    const parsedTx = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].SenderSignedData.parse((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(transaction.rawTransaction))[0];
    return {
        digest: transaction.digest,
        effects: parseTransactionEffects({
            effects: new Uint8Array(transaction.rawEffects),
            objectChanges: transaction.objectChanges ?? null
        }),
        bcs: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].TransactionData.serialize(parsedTx.intentMessage.value).toBytes(),
        signatures: parsedTx.txSignatures
    };
}
function parseTransactionEffects({ effects, epoch, objectChanges }) {
    const parsed = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].TransactionEffects.parse(effects);
    const objectTypes = {};
    objectChanges?.forEach((change)=>{
        if (change.type !== "published") {
            objectTypes[change.objectId] = change.objectType;
        }
    });
    switch(parsed.$kind){
        case "V1":
            return parseTransactionEffectsV1({
                bytes: effects,
                effects: parsed.V1,
                epoch,
                objectTypes
            });
        case "V2":
            return parseTransactionEffectsV2({
                bytes: effects,
                effects: parsed.V2,
                epoch,
                objectTypes
            });
        default:
            throw new Error(`Unknown transaction effects version: ${parsed.$kind}`);
    }
}
function parseTransactionEffectsV1(_) {
    throw new Error("V1 effects are not supported yet");
}
function parseTransactionEffectsV2({ bytes, effects, epoch, objectTypes }) {
    const changedObjects = effects.changedObjects.map(([id, change])=>{
        return {
            id,
            inputState: change.inputState.$kind === "Exist" ? "Exists" : "DoesNotExist",
            inputVersion: change.inputState.Exist?.[0][0] ?? null,
            inputDigest: change.inputState.Exist?.[0][1] ?? null,
            inputOwner: change.inputState.Exist?.[1] ?? null,
            outputState: change.outputState.$kind === "NotExist" ? "DoesNotExist" : change.outputState.$kind,
            outputVersion: change.outputState.$kind === "PackageWrite" ? change.outputState.PackageWrite?.[0] : change.outputState.ObjectWrite ? effects.lamportVersion : null,
            outputDigest: change.outputState.$kind === "PackageWrite" ? change.outputState.PackageWrite?.[1] : change.outputState.ObjectWrite?.[0] ?? null,
            outputOwner: change.outputState.ObjectWrite ? change.outputState.ObjectWrite[1] : null,
            idOperation: change.idOperation.$kind,
            objectType: objectTypes[id] ?? null
        };
    });
    return {
        bcs: bytes,
        digest: effects.transactionDigest,
        version: 2,
        status: effects.status.$kind === "Success" ? {
            success: true,
            error: null
        } : {
            success: false,
            // TODO: add command
            error: effects.status.Failed.error.$kind
        },
        epoch: epoch ?? null,
        gasUsed: effects.gasUsed,
        transactionDigest: effects.transactionDigest,
        gasObject: effects.gasObjectIndex === null ? null : changedObjects[effects.gasObjectIndex] ?? null,
        eventsDigest: effects.eventsDigest,
        dependencies: effects.dependencies,
        lamportVersion: effects.lamportVersion,
        changedObjects,
        unchangedSharedObjects: effects.unchangedSharedObjects.map(([objectId, object])=>{
            return {
                kind: object.$kind,
                objectId,
                version: object.$kind === "ReadOnlyRoot" ? object.ReadOnlyRoot[0] : object[object.$kind],
                digest: object.$kind === "ReadOnlyRoot" ? object.ReadOnlyRoot[1] : null,
                objectType: objectTypes[objectId] ?? null
            };
        }),
        auxiliaryDataDigest: effects.auxDataDigest
    };
}
function parseTransactionEffectsJson({ bytes, effects, epoch, objectChanges }) {
    const changedObjects = [];
    const unchangedSharedObjects = [];
    objectChanges?.forEach((change)=>{
        switch(change.type){
            case "published":
                changedObjects.push({
                    id: change.packageId,
                    inputState: "DoesNotExist",
                    inputVersion: null,
                    inputDigest: null,
                    inputOwner: null,
                    outputState: "PackageWrite",
                    outputVersion: change.version,
                    outputDigest: change.digest,
                    outputOwner: null,
                    idOperation: "Created",
                    objectType: null
                });
                break;
            case "transferred":
                changedObjects.push({
                    id: change.objectId,
                    inputState: "Exists",
                    inputVersion: change.version,
                    inputDigest: change.digest,
                    inputOwner: {
                        $kind: "AddressOwner",
                        AddressOwner: change.sender
                    },
                    outputState: "ObjectWrite",
                    outputVersion: change.version,
                    outputDigest: change.digest,
                    outputOwner: parseOwner(change.recipient),
                    idOperation: "None",
                    objectType: change.objectType
                });
                break;
            case "mutated":
                changedObjects.push({
                    id: change.objectId,
                    inputState: "Exists",
                    inputVersion: change.previousVersion,
                    inputDigest: null,
                    inputOwner: parseOwner(change.owner),
                    outputState: "ObjectWrite",
                    outputVersion: change.version,
                    outputDigest: change.digest,
                    outputOwner: parseOwner(change.owner),
                    idOperation: "None",
                    objectType: change.objectType
                });
                break;
            case "deleted":
                changedObjects.push({
                    id: change.objectId,
                    inputState: "Exists",
                    inputVersion: change.version,
                    inputDigest: effects.deleted?.find((d)=>d.objectId === change.objectId)?.digest ?? null,
                    inputOwner: null,
                    outputState: "DoesNotExist",
                    outputVersion: null,
                    outputDigest: null,
                    outputOwner: null,
                    idOperation: "Deleted",
                    objectType: change.objectType
                });
                break;
            case "wrapped":
                changedObjects.push({
                    id: change.objectId,
                    inputState: "Exists",
                    inputVersion: change.version,
                    inputDigest: null,
                    inputOwner: {
                        $kind: "AddressOwner",
                        AddressOwner: change.sender
                    },
                    outputState: "ObjectWrite",
                    outputVersion: change.version,
                    outputDigest: effects.wrapped?.find((w)=>w.objectId === change.objectId)?.digest ?? null,
                    outputOwner: {
                        $kind: "ObjectOwner",
                        ObjectOwner: change.sender
                    },
                    idOperation: "None",
                    objectType: change.objectType
                });
                break;
            case "created":
                changedObjects.push({
                    id: change.objectId,
                    inputState: "DoesNotExist",
                    inputVersion: null,
                    inputDigest: null,
                    inputOwner: null,
                    outputState: "ObjectWrite",
                    outputVersion: change.version,
                    outputDigest: change.digest,
                    outputOwner: parseOwner(change.owner),
                    idOperation: "Created",
                    objectType: change.objectType
                });
                break;
        }
    });
    return {
        bcs: bytes ?? null,
        digest: effects.transactionDigest,
        version: 2,
        status: effects.status.status === "success" ? {
            success: true,
            error: null
        } : {
            success: false,
            error: effects.status.error
        },
        epoch: epoch ?? null,
        gasUsed: effects.gasUsed,
        transactionDigest: effects.transactionDigest,
        gasObject: {
            id: effects.gasObject?.reference.objectId,
            inputState: "Exists",
            inputVersion: null,
            inputDigest: null,
            inputOwner: null,
            outputState: "ObjectWrite",
            outputVersion: effects.gasObject.reference.version,
            outputDigest: effects.gasObject.reference.digest,
            outputOwner: parseOwner(effects.gasObject.owner),
            idOperation: "None",
            objectType: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeStructTag"])("0x2::coin::Coin<0x2::sui::SUI>")
        },
        eventsDigest: effects.eventsDigest ?? null,
        dependencies: effects.dependencies ?? [],
        lamportVersion: effects.gasObject.reference.version,
        changedObjects,
        unchangedSharedObjects,
        auxiliaryDataDigest: null
    };
}
const Balance = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].struct("Balance", {
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].u64()
});
const Coin = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].struct("Coin", {
    id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].Address,
    balance: Balance
});
;
 //# sourceMappingURL=jsonRPC.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/version.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "PACKAGE_VERSION": (()=>PACKAGE_VERSION),
    "TARGETED_RPC_VERSION": (()=>TARGETED_RPC_VERSION)
});
const PACKAGE_VERSION = "1.28.1";
const TARGETED_RPC_VERSION = "1.48.0";
;
 //# sourceMappingURL=version.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/client/errors.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "JsonRpcError": (()=>JsonRpcError),
    "SuiHTTPStatusError": (()=>SuiHTTPStatusError),
    "SuiHTTPTransportError": (()=>SuiHTTPTransportError)
});
const CODE_TO_ERROR_TYPE = {
    "-32700": "ParseError",
    "-32701": "OversizedRequest",
    "-32702": "OversizedResponse",
    "-32600": "InvalidRequest",
    "-32601": "MethodNotFound",
    "-32602": "InvalidParams",
    "-32603": "InternalError",
    "-32604": "ServerBusy",
    "-32000": "CallExecutionFailed",
    "-32001": "UnknownError",
    "-32003": "SubscriptionClosed",
    "-32004": "SubscriptionClosedWithError",
    "-32005": "BatchesNotSupported",
    "-32006": "TooManySubscriptions",
    "-32050": "TransientError",
    "-32002": "TransactionExecutionClientError"
};
class SuiHTTPTransportError extends Error {
}
class JsonRpcError extends SuiHTTPTransportError {
    constructor(message, code){
        super(message);
        this.code = code;
        this.type = CODE_TO_ERROR_TYPE[code] ?? "ServerError";
    }
}
class SuiHTTPStatusError extends SuiHTTPTransportError {
    constructor(message, status, statusText){
        super(message);
        this.status = status;
        this.statusText = statusText;
    }
}
;
 //# sourceMappingURL=errors.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/client/rpc-websocket-client.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "DEFAULT_CLIENT_OPTIONS": (()=>DEFAULT_CLIENT_OPTIONS),
    "WebsocketClient": (()=>WebsocketClient)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$client$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/client/errors.js [app-client] (ecmascript)");
var __typeError = (msg)=>{
    throw TypeError(msg);
};
var __accessCheck = (obj, member, msg)=>member.has(obj) || __typeError("Cannot " + msg);
var __privateGet = (obj, member, getter)=>(__accessCheck(obj, member, "read from private field"), getter ? getter.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value1)=>member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value1);
var __privateSet = (obj, member, value1, setter)=>(__accessCheck(obj, member, "write to private field"), setter ? setter.call(obj, value1) : member.set(obj, value1), value1);
var __privateMethod = (obj, member, method)=>(__accessCheck(obj, member, "access private method"), method);
var __privateWrapper = (obj, member, setter, getter)=>({
        set _ (value){
            __privateSet(obj, member, value, setter);
        },
        get _ () {
            return __privateGet(obj, member, getter);
        }
    });
var _requestId, _disconnects, _webSocket, _connectionPromise, _subscriptions, _pendingRequests, _WebsocketClient_instances, setupWebSocket_fn, reconnect_fn;
;
function getWebsocketUrl(httpUrl) {
    const url = new URL(httpUrl);
    url.protocol = url.protocol.replace("http", "ws");
    return url.toString();
}
const DEFAULT_CLIENT_OPTIONS = {
    // We fudge the typing because we also check for undefined in the constructor:
    WebSocketConstructor: typeof WebSocket !== "undefined" ? WebSocket : void 0,
    callTimeout: 3e4,
    reconnectTimeout: 3e3,
    maxReconnects: 5
};
class WebsocketClient {
    constructor(endpoint, options = {}){
        __privateAdd(this, _WebsocketClient_instances);
        __privateAdd(this, _requestId, 0);
        __privateAdd(this, _disconnects, 0);
        __privateAdd(this, _webSocket, null);
        __privateAdd(this, _connectionPromise, null);
        __privateAdd(this, _subscriptions, /* @__PURE__ */ new Set());
        __privateAdd(this, _pendingRequests, /* @__PURE__ */ new Map());
        this.endpoint = endpoint;
        this.options = {
            ...DEFAULT_CLIENT_OPTIONS,
            ...options
        };
        if (!this.options.WebSocketConstructor) {
            throw new Error("Missing WebSocket constructor");
        }
        if (this.endpoint.startsWith("http")) {
            this.endpoint = getWebsocketUrl(this.endpoint);
        }
    }
    async makeRequest(method, params, signal) {
        const webSocket = await __privateMethod(this, _WebsocketClient_instances, setupWebSocket_fn).call(this);
        return new Promise((resolve, reject)=>{
            __privateSet(this, _requestId, __privateGet(this, _requestId) + 1);
            __privateGet(this, _pendingRequests).set(__privateGet(this, _requestId), {
                resolve,
                reject,
                timeout: setTimeout(()=>{
                    __privateGet(this, _pendingRequests).delete(__privateGet(this, _requestId));
                    reject(new Error(`Request timeout: ${method}`));
                }, this.options.callTimeout)
            });
            signal?.addEventListener("abort", ()=>{
                __privateGet(this, _pendingRequests).delete(__privateGet(this, _requestId));
                reject(signal.reason);
            });
            webSocket.send(JSON.stringify({
                jsonrpc: "2.0",
                id: __privateGet(this, _requestId),
                method,
                params
            }));
        }).then(({ error, result })=>{
            if (error) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$client$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["JsonRpcError"](error.message, error.code);
            }
            return result;
        });
    }
    async subscribe(input) {
        const subscription = new RpcSubscription(input);
        __privateGet(this, _subscriptions).add(subscription);
        await subscription.subscribe(this);
        return ()=>subscription.unsubscribe(this);
    }
}
_requestId = new WeakMap();
_disconnects = new WeakMap();
_webSocket = new WeakMap();
_connectionPromise = new WeakMap();
_subscriptions = new WeakMap();
_pendingRequests = new WeakMap();
_WebsocketClient_instances = new WeakSet();
setupWebSocket_fn = function() {
    if (__privateGet(this, _connectionPromise)) {
        return __privateGet(this, _connectionPromise);
    }
    __privateSet(this, _connectionPromise, new Promise((resolve)=>{
        __privateGet(this, _webSocket)?.close();
        __privateSet(this, _webSocket, new this.options.WebSocketConstructor(this.endpoint));
        __privateGet(this, _webSocket).addEventListener("open", ()=>{
            __privateSet(this, _disconnects, 0);
            resolve(__privateGet(this, _webSocket));
        });
        __privateGet(this, _webSocket).addEventListener("close", ()=>{
            __privateWrapper(this, _disconnects)._++;
            if (__privateGet(this, _disconnects) <= this.options.maxReconnects) {
                setTimeout(()=>{
                    __privateMethod(this, _WebsocketClient_instances, reconnect_fn).call(this);
                }, this.options.reconnectTimeout);
            }
        });
        __privateGet(this, _webSocket).addEventListener("message", ({ data })=>{
            let json;
            try {
                json = JSON.parse(data);
            } catch (error) {
                console.error(new Error(`Failed to parse RPC message: ${data}`, {
                    cause: error
                }));
                return;
            }
            if ("id" in json && json.id != null && __privateGet(this, _pendingRequests).has(json.id)) {
                const { resolve: resolve2, timeout } = __privateGet(this, _pendingRequests).get(json.id);
                clearTimeout(timeout);
                resolve2(json);
            } else if ("params" in json) {
                const { params } = json;
                __privateGet(this, _subscriptions).forEach((subscription)=>{
                    if (subscription.subscriptionId === params.subscription) {
                        if (params.subscription === subscription.subscriptionId) {
                            subscription.onMessage(params.result);
                        }
                    }
                });
            }
        });
    }));
    return __privateGet(this, _connectionPromise);
};
reconnect_fn = async function() {
    __privateGet(this, _webSocket)?.close();
    __privateSet(this, _connectionPromise, null);
    return Promise.allSettled([
        ...__privateGet(this, _subscriptions)
    ].map((subscription)=>subscription.subscribe(this)));
};
class RpcSubscription {
    constructor(input){
        this.subscriptionId = null;
        this.subscribed = false;
        this.input = input;
    }
    onMessage(message) {
        if (this.subscribed) {
            this.input.onMessage(message);
        }
    }
    async unsubscribe(client) {
        const { subscriptionId } = this;
        this.subscribed = false;
        if (subscriptionId == null) return false;
        this.subscriptionId = null;
        return client.makeRequest(this.input.unsubscribe, [
            subscriptionId
        ]);
    }
    async subscribe(client) {
        this.subscriptionId = null;
        this.subscribed = true;
        const newSubscriptionId = await client.makeRequest(this.input.method, this.input.params, this.input.signal);
        if (this.subscribed) {
            this.subscriptionId = newSubscriptionId;
        }
    }
}
;
 //# sourceMappingURL=rpc-websocket-client.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/client/http-transport.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "SuiHTTPTransport": (()=>SuiHTTPTransport)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/version.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$client$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/client/errors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$client$2f$rpc$2d$websocket$2d$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/client/rpc-websocket-client.js [app-client] (ecmascript)");
var __typeError = (msg)=>{
    throw TypeError(msg);
};
var __accessCheck = (obj, member, msg)=>member.has(obj) || __typeError("Cannot " + msg);
var __privateGet = (obj, member, getter)=>(__accessCheck(obj, member, "read from private field"), getter ? getter.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value)=>member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
var __privateSet = (obj, member, value, setter)=>(__accessCheck(obj, member, "write to private field"), setter ? setter.call(obj, value) : member.set(obj, value), value);
var __privateMethod = (obj, member, method)=>(__accessCheck(obj, member, "access private method"), method);
var _requestId, _options, _websocketClient, _SuiHTTPTransport_instances, getWebsocketClient_fn;
;
;
;
class SuiHTTPTransport {
    constructor(options){
        __privateAdd(this, _SuiHTTPTransport_instances);
        __privateAdd(this, _requestId, 0);
        __privateAdd(this, _options);
        __privateAdd(this, _websocketClient);
        __privateSet(this, _options, options);
    }
    fetch(input, init) {
        const fetchFn = __privateGet(this, _options).fetch ?? fetch;
        if (!fetchFn) {
            throw new Error("The current environment does not support fetch, you can provide a fetch implementation in the options for SuiHTTPTransport.");
        }
        return fetchFn(input, init);
    }
    async request(input) {
        __privateSet(this, _requestId, __privateGet(this, _requestId) + 1);
        const res = await this.fetch(__privateGet(this, _options).rpc?.url ?? __privateGet(this, _options).url, {
            method: "POST",
            signal: input.signal,
            headers: {
                "Content-Type": "application/json",
                "Client-Sdk-Type": "typescript",
                "Client-Sdk-Version": __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PACKAGE_VERSION"],
                "Client-Target-Api-Version": __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TARGETED_RPC_VERSION"],
                "Client-Request-Method": input.method,
                ...__privateGet(this, _options).rpc?.headers
            },
            body: JSON.stringify({
                jsonrpc: "2.0",
                id: __privateGet(this, _requestId),
                method: input.method,
                params: input.params
            })
        });
        if (!res.ok) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$client$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SuiHTTPStatusError"](`Unexpected status code: ${res.status}`, res.status, res.statusText);
        }
        const data = await res.json();
        if ("error" in data && data.error != null) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$client$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["JsonRpcError"](data.error.message, data.error.code);
        }
        return data.result;
    }
    async subscribe(input) {
        const unsubscribe = await __privateMethod(this, _SuiHTTPTransport_instances, getWebsocketClient_fn).call(this).subscribe(input);
        if (input.signal) {
            input.signal.throwIfAborted();
            input.signal.addEventListener("abort", ()=>{
                unsubscribe();
            });
        }
        return async ()=>!!await unsubscribe();
    }
}
_requestId = new WeakMap();
_options = new WeakMap();
_websocketClient = new WeakMap();
_SuiHTTPTransport_instances = new WeakSet();
getWebsocketClient_fn = function() {
    if (!__privateGet(this, _websocketClient)) {
        const WebSocketConstructor = __privateGet(this, _options).WebSocketConstructor ?? WebSocket;
        if (!WebSocketConstructor) {
            throw new Error("The current environment does not support WebSocket, you can provide a WebSocketConstructor in the options for SuiHTTPTransport.");
        }
        __privateSet(this, _websocketClient, new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$client$2f$rpc$2d$websocket$2d$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WebsocketClient"](__privateGet(this, _options).websocket?.url ?? __privateGet(this, _options).url, {
            WebSocketConstructor,
            ...__privateGet(this, _options).websocket
        }));
    }
    return __privateGet(this, _websocketClient);
};
;
 //# sourceMappingURL=http-transport.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/client/client.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "SuiClient": (()=>SuiClient),
    "isSuiClient": (()=>isSuiClient)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b58$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b58.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b64.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/hex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$experimental$2f$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/experimental/client.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$experimental$2f$transports$2f$jsonRPC$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/experimental/transports/jsonRPC.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Transaction$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/transactions/Transaction.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$suins$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/suins.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$client$2f$http$2d$transport$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/client/http-transport.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
const SUI_CLIENT_BRAND = Symbol.for("@mysten/SuiClient");
function isSuiClient(client) {
    return typeof client === "object" && client !== null && client[SUI_CLIENT_BRAND] === true;
}
class SuiClient extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$experimental$2f$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Experimental_BaseClient"] {
    /**
   * Establish a connection to a Sui RPC endpoint
   *
   * @param options configuration options for the API Client
   */ constructor(options){
        super({
            network: options.network ?? "unknown"
        });
        this.core = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$experimental$2f$transports$2f$jsonRPC$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["JSONRpcTransport"](this);
        this.jsonRpc = this;
        this.transport = options.transport ?? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$client$2f$http$2d$transport$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SuiHTTPTransport"]({
            url: options.url
        });
    }
    get [SUI_CLIENT_BRAND]() {
        return true;
    }
    async getRpcApiVersion({ signal } = {}) {
        const resp = await this.transport.request({
            method: "rpc.discover",
            params: [],
            signal
        });
        return resp.info.version;
    }
    /**
   * Get all Coin<`coin_type`> objects owned by an address.
   */ async getCoins(input) {
        if (!input.owner || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidSuiAddress"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(input.owner))) {
            throw new Error("Invalid Sui address");
        }
        return await this.transport.request({
            method: "suix_getCoins",
            params: [
                input.owner,
                input.coinType,
                input.cursor,
                input.limit
            ],
            signal: input.signal
        });
    }
    /**
   * Get all Coin objects owned by an address.
   */ async getAllCoins(input) {
        if (!input.owner || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidSuiAddress"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(input.owner))) {
            throw new Error("Invalid Sui address");
        }
        return await this.transport.request({
            method: "suix_getAllCoins",
            params: [
                input.owner,
                input.cursor,
                input.limit
            ],
            signal: input.signal
        });
    }
    /**
   * Get the total coin balance for one coin type, owned by the address owner.
   */ async getBalance(input) {
        if (!input.owner || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidSuiAddress"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(input.owner))) {
            throw new Error("Invalid Sui address");
        }
        return await this.transport.request({
            method: "suix_getBalance",
            params: [
                input.owner,
                input.coinType
            ],
            signal: input.signal
        });
    }
    /**
   * Get the total coin balance for all coin types, owned by the address owner.
   */ async getAllBalances(input) {
        if (!input.owner || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidSuiAddress"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(input.owner))) {
            throw new Error("Invalid Sui address");
        }
        return await this.transport.request({
            method: "suix_getAllBalances",
            params: [
                input.owner
            ],
            signal: input.signal
        });
    }
    /**
   * Fetch CoinMetadata for a given coin type
   */ async getCoinMetadata(input) {
        return await this.transport.request({
            method: "suix_getCoinMetadata",
            params: [
                input.coinType
            ],
            signal: input.signal
        });
    }
    /**
   *  Fetch total supply for a coin
   */ async getTotalSupply(input) {
        return await this.transport.request({
            method: "suix_getTotalSupply",
            params: [
                input.coinType
            ],
            signal: input.signal
        });
    }
    /**
   * Invoke any RPC method
   * @param method the method to be invoked
   * @param args the arguments to be passed to the RPC request
   */ async call(method, params, { signal } = {}) {
        return await this.transport.request({
            method,
            params,
            signal
        });
    }
    /**
   * Get Move function argument types like read, write and full access
   */ async getMoveFunctionArgTypes(input) {
        return await this.transport.request({
            method: "sui_getMoveFunctionArgTypes",
            params: [
                input.package,
                input.module,
                input.function
            ],
            signal: input.signal
        });
    }
    /**
   * Get a map from module name to
   * structured representations of Move modules
   */ async getNormalizedMoveModulesByPackage(input) {
        return await this.transport.request({
            method: "sui_getNormalizedMoveModulesByPackage",
            params: [
                input.package
            ],
            signal: input.signal
        });
    }
    /**
   * Get a structured representation of Move module
   */ async getNormalizedMoveModule(input) {
        return await this.transport.request({
            method: "sui_getNormalizedMoveModule",
            params: [
                input.package,
                input.module
            ],
            signal: input.signal
        });
    }
    /**
   * Get a structured representation of Move function
   */ async getNormalizedMoveFunction(input) {
        return await this.transport.request({
            method: "sui_getNormalizedMoveFunction",
            params: [
                input.package,
                input.module,
                input.function
            ],
            signal: input.signal
        });
    }
    /**
   * Get a structured representation of Move struct
   */ async getNormalizedMoveStruct(input) {
        return await this.transport.request({
            method: "sui_getNormalizedMoveStruct",
            params: [
                input.package,
                input.module,
                input.struct
            ],
            signal: input.signal
        });
    }
    /**
   * Get all objects owned by an address
   */ async getOwnedObjects(input) {
        if (!input.owner || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidSuiAddress"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(input.owner))) {
            throw new Error("Invalid Sui address");
        }
        return await this.transport.request({
            method: "suix_getOwnedObjects",
            params: [
                input.owner,
                {
                    filter: input.filter,
                    options: input.options
                },
                input.cursor,
                input.limit
            ],
            signal: input.signal
        });
    }
    /**
   * Get details about an object
   */ async getObject(input) {
        if (!input.id || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidSuiObjectId"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiObjectId"])(input.id))) {
            throw new Error("Invalid Sui Object id");
        }
        return await this.transport.request({
            method: "sui_getObject",
            params: [
                input.id,
                input.options
            ],
            signal: input.signal
        });
    }
    async tryGetPastObject(input) {
        return await this.transport.request({
            method: "sui_tryGetPastObject",
            params: [
                input.id,
                input.version,
                input.options
            ],
            signal: input.signal
        });
    }
    /**
   * Batch get details about a list of objects. If any of the object ids are duplicates the call will fail
   */ async multiGetObjects(input) {
        input.ids.forEach((id)=>{
            if (!id || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidSuiObjectId"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiObjectId"])(id))) {
                throw new Error(`Invalid Sui Object id ${id}`);
            }
        });
        const hasDuplicates = input.ids.length !== new Set(input.ids).size;
        if (hasDuplicates) {
            throw new Error(`Duplicate object ids in batch call ${input.ids}`);
        }
        return await this.transport.request({
            method: "sui_multiGetObjects",
            params: [
                input.ids,
                input.options
            ],
            signal: input.signal
        });
    }
    /**
   * Get transaction blocks for a given query criteria
   */ async queryTransactionBlocks(input) {
        return await this.transport.request({
            method: "suix_queryTransactionBlocks",
            params: [
                {
                    filter: input.filter,
                    options: input.options
                },
                input.cursor,
                input.limit,
                (input.order || "descending") === "descending"
            ],
            signal: input.signal
        });
    }
    async getTransactionBlock(input) {
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidTransactionDigest"])(input.digest)) {
            throw new Error("Invalid Transaction digest");
        }
        return await this.transport.request({
            method: "sui_getTransactionBlock",
            params: [
                input.digest,
                input.options
            ],
            signal: input.signal
        });
    }
    async multiGetTransactionBlocks(input) {
        input.digests.forEach((d)=>{
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidTransactionDigest"])(d)) {
                throw new Error(`Invalid Transaction digest ${d}`);
            }
        });
        const hasDuplicates = input.digests.length !== new Set(input.digests).size;
        if (hasDuplicates) {
            throw new Error(`Duplicate digests in batch call ${input.digests}`);
        }
        return await this.transport.request({
            method: "sui_multiGetTransactionBlocks",
            params: [
                input.digests,
                input.options
            ],
            signal: input.signal
        });
    }
    async executeTransactionBlock({ transactionBlock, signature, options, requestType, signal }) {
        const result = await this.transport.request({
            method: "sui_executeTransactionBlock",
            params: [
                typeof transactionBlock === "string" ? transactionBlock : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(transactionBlock),
                Array.isArray(signature) ? signature : [
                    signature
                ],
                options
            ],
            signal
        });
        if (requestType === "WaitForLocalExecution") {
            try {
                await this.waitForTransaction({
                    digest: result.digest
                });
            } catch (_) {}
        }
        return result;
    }
    async signAndExecuteTransaction({ transaction, signer, ...input }) {
        let transactionBytes;
        if (transaction instanceof Uint8Array) {
            transactionBytes = transaction;
        } else {
            transaction.setSenderIfNotSet(signer.toSuiAddress());
            transactionBytes = await transaction.build({
                client: this
            });
        }
        const { signature, bytes } = await signer.signTransaction(transactionBytes);
        return this.executeTransactionBlock({
            transactionBlock: bytes,
            signature,
            ...input
        });
    }
    /**
   * Get total number of transactions
   */ async getTotalTransactionBlocks({ signal } = {}) {
        const resp = await this.transport.request({
            method: "sui_getTotalTransactionBlocks",
            params: [],
            signal
        });
        return BigInt(resp);
    }
    /**
   * Getting the reference gas price for the network
   */ async getReferenceGasPrice({ signal } = {}) {
        const resp = await this.transport.request({
            method: "suix_getReferenceGasPrice",
            params: [],
            signal
        });
        return BigInt(resp);
    }
    /**
   * Return the delegated stakes for an address
   */ async getStakes(input) {
        if (!input.owner || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidSuiAddress"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])(input.owner))) {
            throw new Error("Invalid Sui address");
        }
        return await this.transport.request({
            method: "suix_getStakes",
            params: [
                input.owner
            ],
            signal: input.signal
        });
    }
    /**
   * Return the delegated stakes queried by id.
   */ async getStakesByIds(input) {
        input.stakedSuiIds.forEach((id)=>{
            if (!id || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidSuiObjectId"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiObjectId"])(id))) {
                throw new Error(`Invalid Sui Stake id ${id}`);
            }
        });
        return await this.transport.request({
            method: "suix_getStakesByIds",
            params: [
                input.stakedSuiIds
            ],
            signal: input.signal
        });
    }
    /**
   * Return the latest system state content.
   */ async getLatestSuiSystemState({ signal } = {}) {
        return await this.transport.request({
            method: "suix_getLatestSuiSystemState",
            params: [],
            signal
        });
    }
    /**
   * Get events for a given query criteria
   */ async queryEvents(input) {
        return await this.transport.request({
            method: "suix_queryEvents",
            params: [
                input.query,
                input.cursor,
                input.limit,
                (input.order || "descending") === "descending"
            ],
            signal: input.signal
        });
    }
    /**
   * Subscribe to get notifications whenever an event matching the filter occurs
   *
   * @deprecated
   */ async subscribeEvent(input) {
        return this.transport.subscribe({
            method: "suix_subscribeEvent",
            unsubscribe: "suix_unsubscribeEvent",
            params: [
                input.filter
            ],
            onMessage: input.onMessage,
            signal: input.signal
        });
    }
    /**
   * @deprecated
   */ async subscribeTransaction(input) {
        return this.transport.subscribe({
            method: "suix_subscribeTransaction",
            unsubscribe: "suix_unsubscribeTransaction",
            params: [
                input.filter
            ],
            onMessage: input.onMessage,
            signal: input.signal
        });
    }
    /**
   * Runs the transaction block in dev-inspect mode. Which allows for nearly any
   * transaction (or Move call) with any arguments. Detailed results are
   * provided, including both the transaction effects and any return values.
   */ async devInspectTransactionBlock(input) {
        let devInspectTxBytes;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$transactions$2f$Transaction$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTransaction"])(input.transactionBlock)) {
            input.transactionBlock.setSenderIfNotSet(input.sender);
            devInspectTxBytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(await input.transactionBlock.build({
                client: this,
                onlyTransactionKind: true
            }));
        } else if (typeof input.transactionBlock === "string") {
            devInspectTxBytes = input.transactionBlock;
        } else if (input.transactionBlock instanceof Uint8Array) {
            devInspectTxBytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(input.transactionBlock);
        } else {
            throw new Error("Unknown transaction block format.");
        }
        input.signal?.throwIfAborted();
        return await this.transport.request({
            method: "sui_devInspectTransactionBlock",
            params: [
                input.sender,
                devInspectTxBytes,
                input.gasPrice?.toString(),
                input.epoch
            ],
            signal: input.signal
        });
    }
    /**
   * Dry run a transaction block and return the result.
   */ async dryRunTransactionBlock(input) {
        return await this.transport.request({
            method: "sui_dryRunTransactionBlock",
            params: [
                typeof input.transactionBlock === "string" ? input.transactionBlock : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(input.transactionBlock)
            ]
        });
    }
    /**
   * Return the list of dynamic field objects owned by an object
   */ async getDynamicFields(input) {
        if (!input.parentId || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidSuiObjectId"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiObjectId"])(input.parentId))) {
            throw new Error("Invalid Sui Object id");
        }
        return await this.transport.request({
            method: "suix_getDynamicFields",
            params: [
                input.parentId,
                input.cursor,
                input.limit
            ],
            signal: input.signal
        });
    }
    /**
   * Return the dynamic field object information for a specified object
   */ async getDynamicFieldObject(input) {
        return await this.transport.request({
            method: "suix_getDynamicFieldObject",
            params: [
                input.parentId,
                input.name
            ],
            signal: input.signal
        });
    }
    /**
   * Get the sequence number of the latest checkpoint that has been executed
   */ async getLatestCheckpointSequenceNumber({ signal } = {}) {
        const resp = await this.transport.request({
            method: "sui_getLatestCheckpointSequenceNumber",
            params: [],
            signal
        });
        return String(resp);
    }
    /**
   * Returns information about a given checkpoint
   */ async getCheckpoint(input) {
        return await this.transport.request({
            method: "sui_getCheckpoint",
            params: [
                input.id
            ],
            signal: input.signal
        });
    }
    /**
   * Returns historical checkpoints paginated
   */ async getCheckpoints(input) {
        return await this.transport.request({
            method: "sui_getCheckpoints",
            params: [
                input.cursor,
                input?.limit,
                input.descendingOrder
            ],
            signal: input.signal
        });
    }
    /**
   * Return the committee information for the asked epoch
   */ async getCommitteeInfo(input) {
        return await this.transport.request({
            method: "suix_getCommitteeInfo",
            params: [
                input?.epoch
            ],
            signal: input?.signal
        });
    }
    async getNetworkMetrics({ signal } = {}) {
        return await this.transport.request({
            method: "suix_getNetworkMetrics",
            params: [],
            signal
        });
    }
    async getAddressMetrics({ signal } = {}) {
        return await this.transport.request({
            method: "suix_getLatestAddressMetrics",
            params: [],
            signal
        });
    }
    async getEpochMetrics(input) {
        return await this.transport.request({
            method: "suix_getEpochMetrics",
            params: [
                input?.cursor,
                input?.limit,
                input?.descendingOrder
            ],
            signal: input?.signal
        });
    }
    async getAllEpochAddressMetrics(input) {
        return await this.transport.request({
            method: "suix_getAllEpochAddressMetrics",
            params: [
                input?.descendingOrder
            ],
            signal: input?.signal
        });
    }
    /**
   * Return the committee information for the asked epoch
   */ async getEpochs(input) {
        return await this.transport.request({
            method: "suix_getEpochs",
            params: [
                input?.cursor,
                input?.limit,
                input?.descendingOrder
            ],
            signal: input?.signal
        });
    }
    /**
   * Returns list of top move calls by usage
   */ async getMoveCallMetrics({ signal } = {}) {
        return await this.transport.request({
            method: "suix_getMoveCallMetrics",
            params: [],
            signal
        });
    }
    /**
   * Return the committee information for the asked epoch
   */ async getCurrentEpoch({ signal } = {}) {
        return await this.transport.request({
            method: "suix_getCurrentEpoch",
            params: [],
            signal
        });
    }
    /**
   * Return the Validators APYs
   */ async getValidatorsApy({ signal } = {}) {
        return await this.transport.request({
            method: "suix_getValidatorsApy",
            params: [],
            signal
        });
    }
    // TODO: Migrate this to `sui_getChainIdentifier` once it is widely available.
    async getChainIdentifier({ signal } = {}) {
        const checkpoint = await this.getCheckpoint({
            id: "0",
            signal
        });
        const bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b58$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase58"])(checkpoint.digest);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(bytes.slice(0, 4));
    }
    async resolveNameServiceAddress(input) {
        return await this.transport.request({
            method: "suix_resolveNameServiceAddress",
            params: [
                input.name
            ],
            signal: input.signal
        });
    }
    async resolveNameServiceNames({ format = "dot", ...input }) {
        const { nextCursor, hasNextPage, data } = await this.transport.request({
            method: "suix_resolveNameServiceNames",
            params: [
                input.address,
                input.cursor,
                input.limit
            ],
            signal: input.signal
        });
        return {
            hasNextPage,
            nextCursor,
            data: data.map((name)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$suins$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiNSName"])(name, format))
        };
    }
    async getProtocolConfig(input) {
        return await this.transport.request({
            method: "sui_getProtocolConfig",
            params: [
                input?.version
            ],
            signal: input?.signal
        });
    }
    /**
   * Wait for a transaction block result to be available over the API.
   * This can be used in conjunction with `executeTransactionBlock` to wait for the transaction to
   * be available via the API.
   * This currently polls the `getTransactionBlock` API to check for the transaction.
   */ async waitForTransaction({ signal, timeout = 60 * 1e3, pollInterval = 2 * 1e3, ...input }) {
        const timeoutSignal = AbortSignal.timeout(timeout);
        const timeoutPromise = new Promise((_, reject)=>{
            timeoutSignal.addEventListener("abort", ()=>reject(timeoutSignal.reason));
        });
        timeoutPromise.catch(()=>{});
        while(!timeoutSignal.aborted){
            signal?.throwIfAborted();
            try {
                return await this.getTransactionBlock(input);
            } catch (e) {
                await Promise.race([
                    new Promise((resolve)=>setTimeout(resolve, pollInterval)),
                    timeoutPromise
                ]);
            }
        }
        timeoutSignal.throwIfAborted();
        throw new Error("Unexpected error while waiting for transaction block.");
    }
    experimental_asClientExtension() {
        return {
            name: "jsonRPC",
            register: ()=>{
                return this;
            }
        };
    }
}
;
 //# sourceMappingURL=client.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/cryptography/intent.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "messageWithIntent": (()=>messageWithIntent)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/index.js [app-client] (ecmascript) <locals>");
;
function messageWithIntent(scope, message) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].IntentMessage(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].fixedArray(message.length, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].u8())).serialize({
        intent: {
            scope: {
                [scope]: true
            },
            version: {
                V0: true
            },
            appId: {
                Sui: true
            }
        },
        value: message
    }).toBytes();
}
;
 //# sourceMappingURL=intent.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/cryptography/signature-scheme.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "SIGNATURE_FLAG_TO_SCHEME": (()=>SIGNATURE_FLAG_TO_SCHEME),
    "SIGNATURE_SCHEME_TO_FLAG": (()=>SIGNATURE_SCHEME_TO_FLAG),
    "SIGNATURE_SCHEME_TO_SIZE": (()=>SIGNATURE_SCHEME_TO_SIZE)
});
const SIGNATURE_SCHEME_TO_FLAG = {
    ED25519: 0,
    Secp256k1: 1,
    Secp256r1: 2,
    MultiSig: 3,
    ZkLogin: 5,
    Passkey: 6
};
const SIGNATURE_SCHEME_TO_SIZE = {
    ED25519: 32,
    Secp256k1: 33,
    Secp256r1: 33
};
const SIGNATURE_FLAG_TO_SCHEME = {
    0: "ED25519",
    1: "Secp256k1",
    2: "Secp256r1",
    3: "MultiSig",
    5: "ZkLogin",
    6: "Passkey"
};
;
 //# sourceMappingURL=signature-scheme.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/cryptography/publickey.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "PublicKey": (()=>PublicKey),
    "bytesEqual": (()=>bytesEqual),
    "parseSerializedKeypairSignature": (()=>parseSerializedKeypairSignature)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b64.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$blake2b$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@noble/hashes/esm/blake2b.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@noble/hashes/esm/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$intent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/cryptography/intent.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/cryptography/signature-scheme.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
function bytesEqual(a, b) {
    if (a === b) return true;
    if (a.length !== b.length) {
        return false;
    }
    for(let i = 0; i < a.length; i++){
        if (a[i] !== b[i]) {
            return false;
        }
    }
    return true;
}
class PublicKey {
    /**
   * Checks if two public keys are equal
   */ equals(publicKey) {
        return bytesEqual(this.toRawBytes(), publicKey.toRawBytes());
    }
    /**
   * Return the base-64 representation of the public key
   */ toBase64() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(this.toRawBytes());
    }
    toString() {
        throw new Error("`toString` is not implemented on public keys. Use `toBase64()` or `toRawBytes()` instead.");
    }
    /**
   * Return the Sui representation of the public key encoded in
   * base-64. A Sui public key is formed by the concatenation
   * of the scheme flag with the raw bytes of the public key
   */ toSuiPublicKey() {
        const bytes = this.toSuiBytes();
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(bytes);
    }
    verifyWithIntent(bytes, signature, intent) {
        const intentMessage = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$intent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["messageWithIntent"])(intent, bytes);
        const digest = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$blake2b$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["blake2b"])(intentMessage, {
            dkLen: 32
        });
        return this.verify(digest, signature);
    }
    /**
   * Verifies that the signature is valid for for the provided PersonalMessage
   */ verifyPersonalMessage(message, signature) {
        return this.verifyWithIntent(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].u8()).serialize(message).toBytes(), signature, "PersonalMessage");
    }
    /**
   * Verifies that the signature is valid for for the provided Transaction
   */ verifyTransaction(transaction, signature) {
        return this.verifyWithIntent(transaction, signature, "TransactionData");
    }
    /**
   * Verifies that the public key is associated with the provided address
   */ verifyAddress(address) {
        return this.toSuiAddress() === address;
    }
    /**
   * Returns the bytes representation of the public key
   * prefixed with the signature scheme flag
   */ toSuiBytes() {
        const rawBytes = this.toRawBytes();
        const suiBytes = new Uint8Array(rawBytes.length + 1);
        suiBytes.set([
            this.flag()
        ]);
        suiBytes.set(rawBytes, 1);
        return suiBytes;
    }
    /**
   * Return the Sui address associated with this Ed25519 public key
   */ toSuiAddress() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$blake2b$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["blake2b"])(this.toSuiBytes(), {
            dkLen: 32
        })).slice(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SUI_ADDRESS_LENGTH"] * 2));
    }
}
function parseSerializedKeypairSignature(serializedSignature) {
    const bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(serializedSignature);
    const signatureScheme = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SIGNATURE_FLAG_TO_SCHEME"][bytes[0]];
    switch(signatureScheme){
        case "ED25519":
        case "Secp256k1":
        case "Secp256r1":
            const size = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SIGNATURE_SCHEME_TO_SIZE"][signatureScheme];
            const signature = bytes.slice(1, bytes.length - size);
            const publicKey = bytes.slice(1 + signature.length);
            return {
                serializedSignature,
                signatureScheme,
                signature,
                publicKey,
                bytes
            };
        default:
            throw new Error("Unsupported signature scheme");
    }
}
;
 //# sourceMappingURL=publickey.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/keypairs/passkey/publickey.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "PASSKEY_PUBLIC_KEY_SIZE": (()=>PASSKEY_PUBLIC_KEY_SIZE),
    "PASSKEY_SIGNATURE_SIZE": (()=>PASSKEY_SIGNATURE_SIZE),
    "PASSKEY_UNCOMPRESSED_PUBLIC_KEY_SIZE": (()=>PASSKEY_UNCOMPRESSED_PUBLIC_KEY_SIZE),
    "PasskeyPublicKey": (()=>PasskeyPublicKey),
    "SECP256R1_SPKI_HEADER": (()=>SECP256R1_SPKI_HEADER),
    "parseDerSPKI": (()=>parseDerSPKI),
    "parseSerializedPasskeySignature": (()=>parseSerializedPasskeySignature)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b64.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$p256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@noble/curves/esm/p256.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$sha256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@noble/hashes/esm/sha256.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/bcs.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/cryptography/publickey.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/cryptography/signature-scheme.js [app-client] (ecmascript)");
;
;
;
;
;
;
const PASSKEY_PUBLIC_KEY_SIZE = 33;
const PASSKEY_UNCOMPRESSED_PUBLIC_KEY_SIZE = 65;
const PASSKEY_SIGNATURE_SIZE = 64;
const SECP256R1_SPKI_HEADER = new Uint8Array([
    48,
    89,
    // SEQUENCE, length 89
    48,
    19,
    // SEQUENCE, length 19
    6,
    7,
    // OID, length 7
    42,
    134,
    72,
    206,
    61,
    2,
    1,
    // OID: 1.2.840.10045.2.1 (ecPublicKey)
    6,
    8,
    // OID, length 8
    42,
    134,
    72,
    206,
    61,
    3,
    1,
    7,
    // OID: 1.2.840.10045.3.1.7 (prime256v1/secp256r1)
    3,
    66,
    // BIT STRING, length 66
    0
]);
class PasskeyPublicKey extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PublicKey"] {
    /**
   * Create a new PasskeyPublicKey object
   * @param value passkey public key as buffer or base-64 encoded string
   */ constructor(value){
        super();
        if (typeof value === "string") {
            this.data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(value);
        } else if (value instanceof Uint8Array) {
            this.data = value;
        } else {
            this.data = Uint8Array.from(value);
        }
        if (this.data.length !== PASSKEY_PUBLIC_KEY_SIZE) {
            throw new Error(`Invalid public key input. Expected ${PASSKEY_PUBLIC_KEY_SIZE} bytes, got ${this.data.length}`);
        }
    }
    /**
   * Checks if two passkey public keys are equal
   */ equals(publicKey) {
        return super.equals(publicKey);
    }
    /**
   * Return the byte array representation of the Secp256r1 public key
   */ toRawBytes() {
        return this.data;
    }
    /**
   * Return the Sui address associated with this Secp256r1 public key
   */ flag() {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SIGNATURE_SCHEME_TO_FLAG"]["Passkey"];
    }
    /**
   * Verifies that the signature is valid for for the provided message
   */ async verify(message, signature) {
        const parsed = parseSerializedPasskeySignature(signature);
        const clientDataJSON = JSON.parse(parsed.clientDataJson);
        if (clientDataJSON.type !== "webauthn.get") {
            return false;
        }
        const parsedChallenge = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(clientDataJSON.challenge.replace(/-/g, "+").replace(/_/g, "/"));
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesEqual"])(message, parsedChallenge)) {
            return false;
        }
        const pk = parsed.userSignature.slice(1 + PASSKEY_SIGNATURE_SIZE);
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesEqual"])(this.toRawBytes(), pk)) {
            return false;
        }
        const payload = new Uint8Array([
            ...parsed.authenticatorData,
            ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$sha256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sha256"])(parsed.clientDataJson)
        ]);
        const sig = parsed.userSignature.slice(1, PASSKEY_SIGNATURE_SIZE + 1);
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$p256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["secp256r1"].verify(sig, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$sha256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sha256"])(payload), pk);
    }
}
PasskeyPublicKey.SIZE = PASSKEY_PUBLIC_KEY_SIZE;
function parseDerSPKI(derBytes) {
    if (derBytes.length !== SECP256R1_SPKI_HEADER.length + PASSKEY_UNCOMPRESSED_PUBLIC_KEY_SIZE) {
        throw new Error("Invalid DER length");
    }
    for(let i = 0; i < SECP256R1_SPKI_HEADER.length; i++){
        if (derBytes[i] !== SECP256R1_SPKI_HEADER[i]) {
            throw new Error("Invalid spki header");
        }
    }
    if (derBytes[SECP256R1_SPKI_HEADER.length] !== 4) {
        throw new Error("Invalid point marker");
    }
    return derBytes.slice(SECP256R1_SPKI_HEADER.length);
}
function parseSerializedPasskeySignature(signature) {
    const bytes = typeof signature === "string" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(signature) : signature;
    if (bytes[0] !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SIGNATURE_SCHEME_TO_FLAG"].Passkey) {
        throw new Error("Invalid signature scheme");
    }
    const dec = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PasskeyAuthenticator"].parse(bytes.slice(1));
    return {
        signatureScheme: "Passkey",
        serializedSignature: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(bytes),
        signature: bytes,
        authenticatorData: dec.authenticatorData,
        clientDataJson: dec.clientDataJson,
        userSignature: new Uint8Array(dec.userSignature),
        publicKey: new Uint8Array(dec.userSignature.slice(1 + PASSKEY_SIGNATURE_SIZE))
    };
}
;
 //# sourceMappingURL=publickey.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/graphql/client.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "SuiGraphQLClient": (()=>SuiGraphQLClient),
    "SuiGraphQLRequestError": (()=>SuiGraphQLRequestError)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$graphql$2f$language$2f$printer$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/graphql/language/printer.mjs [app-client] (ecmascript)");
var __typeError = (msg)=>{
    throw TypeError(msg);
};
var __accessCheck = (obj, member, msg)=>member.has(obj) || __typeError("Cannot " + msg);
var __privateGet = (obj, member, getter)=>(__accessCheck(obj, member, "read from private field"), getter ? getter.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value)=>member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
var __privateSet = (obj, member, value, setter)=>(__accessCheck(obj, member, "write to private field"), setter ? setter.call(obj, value) : member.set(obj, value), value);
var _url, _queries, _headers, _fetch;
;
class SuiGraphQLRequestError extends Error {
}
class SuiGraphQLClient {
    constructor({ url, fetch: fetchFn = fetch, headers = {}, queries = {} }){
        __privateAdd(this, _url);
        __privateAdd(this, _queries);
        __privateAdd(this, _headers);
        __privateAdd(this, _fetch);
        __privateSet(this, _url, url);
        __privateSet(this, _queries, queries);
        __privateSet(this, _headers, headers);
        __privateSet(this, _fetch, (...args)=>fetchFn(...args));
    }
    async query(options) {
        const res = await __privateGet(this, _fetch).call(this, __privateGet(this, _url), {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                ...__privateGet(this, _headers)
            },
            body: JSON.stringify({
                query: typeof options.query === "string" ? String(options.query) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$graphql$2f$language$2f$printer$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["print"])(options.query),
                variables: options.variables,
                extensions: options.extensions,
                operationName: options.operationName
            })
        });
        if (!res.ok) {
            throw new SuiGraphQLRequestError(`GraphQL request failed: ${res.statusText} (${res.status})`);
        }
        return await res.json();
    }
    async execute(query, options) {
        return this.query({
            ...options,
            query: __privateGet(this, _queries)[query]
        });
    }
}
_url = new WeakMap();
_queries = new WeakMap();
_headers = new WeakMap();
_fetch = new WeakMap();
;
 //# sourceMappingURL=client.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/graphql/schemas/latest/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "graphql": (()=>graphql)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$gql$2e$tada$2f$dist$2f$gql$2d$tada$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/gql.tada/dist/gql-tada.mjs [app-client] (ecmascript)");
;
;
;
const graphql = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$gql$2e$tada$2f$dist$2f$gql$2d$tada$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["initGraphQLTada"])();
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/zklogin/jwt-decode.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "InvalidTokenError": (()=>InvalidTokenError),
    "jwtDecode": (()=>jwtDecode)
});
class InvalidTokenError extends Error {
}
InvalidTokenError.prototype.name = "InvalidTokenError";
function b64DecodeUnicode(str) {
    return decodeURIComponent(atob(str).replace(/(.)/g, (_m, p)=>{
        let code = p.charCodeAt(0).toString(16).toUpperCase();
        if (code.length < 2) {
            code = "0" + code;
        }
        return "%" + code;
    }));
}
function base64UrlDecode(str) {
    let output = str.replace(/-/g, "+").replace(/_/g, "/");
    switch(output.length % 4){
        case 0:
            break;
        case 2:
            output += "==";
            break;
        case 3:
            output += "=";
            break;
        default:
            throw new Error("base64 string is not of the correct length");
    }
    try {
        return b64DecodeUnicode(output);
    } catch (err) {
        return atob(output);
    }
}
function jwtDecode(token, options) {
    if (typeof token !== "string") {
        throw new InvalidTokenError("Invalid token specified: must be a string");
    }
    options || (options = {});
    const pos = options.header === true ? 0 : 1;
    const part = token.split(".")[pos];
    if (typeof part !== "string") {
        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);
    }
    let decoded;
    try {
        decoded = base64UrlDecode(part);
    } catch (e) {
        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);
    }
    try {
        return JSON.parse(decoded);
    } catch (e) {
        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);
    }
}
;
 //# sourceMappingURL=jwt-decode.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/zklogin/poseidon.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "BN254_FIELD_SIZE": (()=>BN254_FIELD_SIZE),
    "poseidonHash": (()=>poseidonHash)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/poseidon-lite/index.js [app-client] (ecmascript)");
;
const poseidonNumToHashFN = [
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidon1"],
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidon2"],
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidon3"],
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidon4"],
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidon5"],
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidon6"],
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidon7"],
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidon8"],
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidon9"],
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidon10"],
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidon11"],
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidon12"],
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidon13"],
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidon14"],
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidon15"],
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$poseidon$2d$lite$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidon16"]
];
const BN254_FIELD_SIZE = 21888242871839275222246405745257275088548364400416034343698204186575808495617n;
function poseidonHash(inputs) {
    inputs.forEach((x)=>{
        const b = BigInt(x);
        if (b < 0 || b >= BN254_FIELD_SIZE) {
            throw new Error(`Element ${b} not in the BN254 field`);
        }
    });
    const hashFN = poseidonNumToHashFN[inputs.length - 1];
    if (hashFN) {
        return hashFN(inputs);
    } else if (inputs.length <= 32) {
        const hash1 = poseidonHash(inputs.slice(0, 16));
        const hash2 = poseidonHash(inputs.slice(16));
        return poseidonHash([
            hash1,
            hash2
        ]);
    } else {
        throw new Error(`Yet to implement: Unable to hash a vector of length ${inputs.length}`);
    }
}
;
 //# sourceMappingURL=poseidon.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/zklogin/utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "chunkArray": (()=>chunkArray),
    "genAddressSeed": (()=>genAddressSeed),
    "getExtendedEphemeralPublicKey": (()=>getExtendedEphemeralPublicKey),
    "hashASCIIStrToField": (()=>hashASCIIStrToField),
    "normalizeZkLoginIssuer": (()=>normalizeZkLoginIssuer),
    "toBigEndianBytes": (()=>toBigEndianBytes),
    "toPaddedBigEndianBytes": (()=>toPaddedBigEndianBytes)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@noble/hashes/esm/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$poseidon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/zklogin/poseidon.js [app-client] (ecmascript)");
;
;
const MAX_KEY_CLAIM_NAME_LENGTH = 32;
const MAX_KEY_CLAIM_VALUE_LENGTH = 115;
const MAX_AUD_VALUE_LENGTH = 145;
const PACK_WIDTH = 248;
function findFirstNonZeroIndex(bytes) {
    for(let i = 0; i < bytes.length; i++){
        if (bytes[i] !== 0) {
            return i;
        }
    }
    return -1;
}
function toPaddedBigEndianBytes(num, width) {
    const hex = num.toString(16);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hexToBytes"])(hex.padStart(width * 2, "0").slice(-width * 2));
}
function toBigEndianBytes(num, width) {
    const bytes = toPaddedBigEndianBytes(num, width);
    const firstNonZeroIndex = findFirstNonZeroIndex(bytes);
    if (firstNonZeroIndex === -1) {
        return new Uint8Array([
            0
        ]);
    }
    return bytes.slice(firstNonZeroIndex);
}
function getExtendedEphemeralPublicKey(publicKey) {
    return publicKey.toSuiPublicKey();
}
function chunkArray(array, chunk_size) {
    const chunks = Array(Math.ceil(array.length / chunk_size));
    const revArray = array.reverse();
    for(let i = 0; i < chunks.length; i++){
        chunks[i] = revArray.slice(i * chunk_size, (i + 1) * chunk_size).reverse();
    }
    return chunks.reverse();
}
function bytesBEToBigInt(bytes) {
    const hex = bytes.map((b)=>b.toString(16).padStart(2, "0")).join("");
    if (hex.length === 0) {
        return BigInt(0);
    }
    return BigInt("0x" + hex);
}
function hashASCIIStrToField(str, maxSize) {
    if (str.length > maxSize) {
        throw new Error(`String ${str} is longer than ${maxSize} chars`);
    }
    const strPadded = str.padEnd(maxSize, String.fromCharCode(0)).split("").map((c)=>c.charCodeAt(0));
    const chunkSize = PACK_WIDTH / 8;
    const packed = chunkArray(strPadded, chunkSize).map((chunk)=>bytesBEToBigInt(chunk));
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$poseidon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidonHash"])(packed);
}
function genAddressSeed(salt, name, value, aud, max_name_length = MAX_KEY_CLAIM_NAME_LENGTH, max_value_length = MAX_KEY_CLAIM_VALUE_LENGTH, max_aud_length = MAX_AUD_VALUE_LENGTH) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$poseidon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidonHash"])([
        hashASCIIStrToField(name, max_name_length),
        hashASCIIStrToField(value, max_value_length),
        hashASCIIStrToField(aud, max_aud_length),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$poseidon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["poseidonHash"])([
            BigInt(salt)
        ])
    ]);
}
function normalizeZkLoginIssuer(iss) {
    if (iss === "accounts.google.com") {
        return "https://accounts.google.com";
    }
    return iss;
}
;
 //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/zklogin/jwt-utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "decodeJwt": (()=>decodeJwt),
    "extractClaimValue": (()=>extractClaimValue)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$jwt$2d$decode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/zklogin/jwt-decode.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/zklogin/utils.js [app-client] (ecmascript)");
;
;
function base64UrlCharTo6Bits(base64UrlChar) {
    if (base64UrlChar.length !== 1) {
        throw new Error("Invalid base64Url character: " + base64UrlChar);
    }
    const base64UrlCharacterSet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_";
    const index = base64UrlCharacterSet.indexOf(base64UrlChar);
    if (index === -1) {
        throw new Error("Invalid base64Url character: " + base64UrlChar);
    }
    const binaryString = index.toString(2).padStart(6, "0");
    const bits = Array.from(binaryString).map(Number);
    return bits;
}
function base64UrlStringToBitVector(base64UrlString) {
    let bitVector = [];
    for(let i = 0; i < base64UrlString.length; i++){
        const base64UrlChar = base64UrlString.charAt(i);
        const bits = base64UrlCharTo6Bits(base64UrlChar);
        bitVector = bitVector.concat(bits);
    }
    return bitVector;
}
function decodeBase64URL(s, i) {
    if (s.length < 2) {
        throw new Error(`Input (s = ${s}) is not tightly packed because s.length < 2`);
    }
    let bits = base64UrlStringToBitVector(s);
    const firstCharOffset = i % 4;
    if (firstCharOffset === 0) {} else if (firstCharOffset === 1) {
        bits = bits.slice(2);
    } else if (firstCharOffset === 2) {
        bits = bits.slice(4);
    } else {
        throw new Error(`Input (s = ${s}) is not tightly packed because i%4 = 3 (i = ${i}))`);
    }
    const lastCharOffset = (i + s.length - 1) % 4;
    if (lastCharOffset === 3) {} else if (lastCharOffset === 2) {
        bits = bits.slice(0, bits.length - 2);
    } else if (lastCharOffset === 1) {
        bits = bits.slice(0, bits.length - 4);
    } else {
        throw new Error(`Input (s = ${s}) is not tightly packed because (i + s.length - 1)%4 = 0 (i = ${i}))`);
    }
    if (bits.length % 8 !== 0) {
        throw new Error(`We should never reach here...`);
    }
    const bytes = new Uint8Array(Math.floor(bits.length / 8));
    let currentByteIndex = 0;
    for(let i2 = 0; i2 < bits.length; i2 += 8){
        const bitChunk = bits.slice(i2, i2 + 8);
        const byte = parseInt(bitChunk.join(""), 2);
        bytes[currentByteIndex++] = byte;
    }
    return new TextDecoder().decode(bytes);
}
function verifyExtendedClaim(claim) {
    if (!(claim.slice(-1) === "}" || claim.slice(-1) === ",")) {
        throw new Error("Invalid claim");
    }
    const json = JSON.parse("{" + claim.slice(0, -1) + "}");
    if (Object.keys(json).length !== 1) {
        throw new Error("Invalid claim");
    }
    const key = Object.keys(json)[0];
    return [
        key,
        json[key]
    ];
}
function extractClaimValue(claim, claimName) {
    const extendedClaim = decodeBase64URL(claim.value, claim.indexMod4);
    const [name, value] = verifyExtendedClaim(extendedClaim);
    if (name !== claimName) {
        throw new Error(`Invalid field name: found ${name} expected ${claimName}`);
    }
    return value;
}
function decodeJwt(jwt) {
    const { iss, aud, sub, ...decodedJWT } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$jwt$2d$decode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jwtDecode"])(jwt);
    if (!sub || !iss || !aud) {
        throw new Error("Missing jwt data");
    }
    if (Array.isArray(aud)) {
        throw new Error("Not supported aud. Aud is an array, string was expected.");
    }
    return {
        ...decodedJWT,
        iss: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeZkLoginIssuer"])(iss),
        rawIss: iss,
        aud,
        sub
    };
}
;
 //# sourceMappingURL=jwt-utils.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/zklogin/bcs.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "zkLoginSignature": (()=>zkLoginSignature)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/bcs.js [app-client] (ecmascript)");
;
const zkLoginSignature = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("ZkLoginSignature", {
    inputs: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("ZkLoginSignatureInputs", {
        proofPoints: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("ZkLoginSignatureInputsProofPoints", {
            a: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string()),
            b: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string())),
            c: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string())
        }),
        issBase64Details: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].struct("ZkLoginSignatureInputsClaim", {
            value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string(),
            indexMod4: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8()
        }),
        headerBase64: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string(),
        addressSeed: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].string()
    }),
    maxEpoch: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u64(),
    userSignature: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8())
});
;
 //# sourceMappingURL=bcs.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/zklogin/signature.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getZkLoginSignature": (()=>getZkLoginSignature),
    "parseZkLoginSignature": (()=>parseZkLoginSignature)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b64.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/cryptography/signature-scheme.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/zklogin/bcs.js [app-client] (ecmascript)");
;
;
;
function getZkLoginSignatureBytes({ inputs, maxEpoch, userSignature }) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["zkLoginSignature"].serialize({
        inputs,
        maxEpoch,
        userSignature: typeof userSignature === "string" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(userSignature) : userSignature
    }, {
        maxSize: 2048
    }).toBytes();
}
function getZkLoginSignature({ inputs, maxEpoch, userSignature }) {
    const bytes = getZkLoginSignatureBytes({
        inputs,
        maxEpoch,
        userSignature
    });
    const signatureBytes = new Uint8Array(bytes.length + 1);
    signatureBytes.set([
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SIGNATURE_SCHEME_TO_FLAG"].ZkLogin
    ]);
    signatureBytes.set(bytes, 1);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(signatureBytes);
}
function parseZkLoginSignature(signature) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["zkLoginSignature"].parse(typeof signature === "string" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(signature) : signature);
}
;
 //# sourceMappingURL=signature.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/zklogin/publickey.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ZkLoginPublicIdentifier": (()=>ZkLoginPublicIdentifier),
    "parseSerializedZkLoginSignature": (()=>parseSerializedZkLoginSignature),
    "toZkLoginPublicIdentifier": (()=>toZkLoginPublicIdentifier)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b64.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/hex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$blake2b$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@noble/hashes/esm/blake2b.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@noble/hashes/esm/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/cryptography/publickey.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/cryptography/signature-scheme.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$graphql$2f$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/graphql/client.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$graphql$2f$schemas$2f$latest$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/graphql/schemas/latest/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/utils/sui-types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$jwt$2d$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/zklogin/jwt-utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$signature$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/zklogin/signature.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/zklogin/utils.js [app-client] (ecmascript)");
var __typeError = (msg)=>{
    throw TypeError(msg);
};
var __accessCheck = (obj, member, msg)=>member.has(obj) || __typeError("Cannot " + msg);
var __privateGet = (obj, member, getter)=>(__accessCheck(obj, member, "read from private field"), getter ? getter.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value)=>member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
var __privateSet = (obj, member, value, setter)=>(__accessCheck(obj, member, "write to private field"), setter ? setter.call(obj, value) : member.set(obj, value), value);
var __privateMethod = (obj, member, method)=>(__accessCheck(obj, member, "access private method"), method);
var _data, _client, _legacyAddress, _ZkLoginPublicIdentifier_instances, toLegacyAddress_fn;
;
;
;
;
;
;
;
;
;
;
;
const _ZkLoginPublicIdentifier = class _ZkLoginPublicIdentifier extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PublicKey"] {
    /**
   * Create a new ZkLoginPublicIdentifier object
   * @param value zkLogin public identifier as buffer or base-64 encoded string
   */ constructor(value, { client } = {}){
        super();
        __privateAdd(this, _ZkLoginPublicIdentifier_instances);
        __privateAdd(this, _data);
        __privateAdd(this, _client);
        __privateAdd(this, _legacyAddress);
        __privateSet(this, _client, client);
        if (typeof value === "string") {
            __privateSet(this, _data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(value));
        } else if (value instanceof Uint8Array) {
            __privateSet(this, _data, value);
        } else {
            __privateSet(this, _data, Uint8Array.from(value));
        }
        __privateSet(this, _legacyAddress, __privateGet(this, _data).length !== __privateGet(this, _data)[0] + 1 + 32);
        if (__privateGet(this, _legacyAddress)) {
            __privateSet(this, _data, normalizeZkLoginPublicKeyBytes(__privateGet(this, _data)));
        }
    }
    static fromProof(address, proof) {
        const { issBase64Details, addressSeed } = proof;
        const iss = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$jwt$2d$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["extractClaimValue"])(issBase64Details, "iss");
        const legacyPublicKey = toZkLoginPublicIdentifier(BigInt(addressSeed), iss, {
            legacyAddress: true
        });
        if (legacyPublicKey.toSuiAddress() === address) {
            return legacyPublicKey;
        }
        const publicKey = toZkLoginPublicIdentifier(BigInt(addressSeed), iss, {
            legacyAddress: false
        });
        if (publicKey.toSuiAddress() !== address) {
            throw new Error("Proof does not match address");
        }
        return publicKey;
    }
    /**
   * Checks if two zkLogin public identifiers are equal
   */ equals(publicKey) {
        return super.equals(publicKey);
    }
    toSuiAddress() {
        if (__privateGet(this, _legacyAddress)) {
            return __privateMethod(this, _ZkLoginPublicIdentifier_instances, toLegacyAddress_fn).call(this);
        }
        return super.toSuiAddress();
    }
    /**
   * Return the byte array representation of the zkLogin public identifier
   */ toRawBytes() {
        return __privateGet(this, _data);
    }
    /**
   * Return the Sui address associated with this ZkLogin public identifier
   */ flag() {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SIGNATURE_SCHEME_TO_FLAG"]["ZkLogin"];
    }
    /**
   * Verifies that the signature is valid for for the provided message
   */ async verify(_message, _signature) {
        throw Error("does not support");
    }
    /**
   * Verifies that the signature is valid for for the provided PersonalMessage
   */ verifyPersonalMessage(message, signature) {
        const parsedSignature = parseSerializedZkLoginSignature(signature);
        const address = new _ZkLoginPublicIdentifier(parsedSignature.publicKey).toSuiAddress();
        return graphqlVerifyZkLoginSignature({
            address,
            bytes: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(message),
            signature: parsedSignature.serializedSignature,
            intentScope: "PERSONAL_MESSAGE",
            client: __privateGet(this, _client)
        });
    }
    /**
   * Verifies that the signature is valid for for the provided Transaction
   */ verifyTransaction(transaction, signature) {
        const parsedSignature = parseSerializedZkLoginSignature(signature);
        const address = new _ZkLoginPublicIdentifier(parsedSignature.publicKey).toSuiAddress();
        return graphqlVerifyZkLoginSignature({
            address,
            bytes: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(transaction),
            signature: parsedSignature.serializedSignature,
            intentScope: "TRANSACTION_DATA",
            client: __privateGet(this, _client)
        });
    }
    /**
   * Verifies that the public key is associated with the provided address
   */ verifyAddress(address) {
        return address === super.toSuiAddress() || address === __privateMethod(this, _ZkLoginPublicIdentifier_instances, toLegacyAddress_fn).call(this);
    }
};
_data = new WeakMap();
_client = new WeakMap();
_legacyAddress = new WeakMap();
_ZkLoginPublicIdentifier_instances = new WeakSet();
toLegacyAddress_fn = function() {
    const legacyBytes = normalizeZkLoginPublicKeyBytes(__privateGet(this, _data), true);
    const addressBytes = new Uint8Array(legacyBytes.length + 1);
    addressBytes[0] = this.flag();
    addressBytes.set(legacyBytes, 1);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSuiAddress"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$blake2b$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["blake2b"])(addressBytes, {
        dkLen: 32
    })).slice(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$utils$2f$sui$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SUI_ADDRESS_LENGTH"] * 2));
};
let ZkLoginPublicIdentifier = _ZkLoginPublicIdentifier;
function toZkLoginPublicIdentifier(addressSeed, iss, options) {
    const addressSeedBytesBigEndian = options?.legacyAddress ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBigEndianBytes"])(addressSeed, 32) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toPaddedBigEndianBytes"])(addressSeed, 32);
    const issBytes = new TextEncoder().encode((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeZkLoginIssuer"])(iss));
    const tmp = new Uint8Array(1 + issBytes.length + addressSeedBytesBigEndian.length);
    tmp.set([
        issBytes.length
    ], 0);
    tmp.set(issBytes, 1);
    tmp.set(addressSeedBytesBigEndian, 1 + issBytes.length);
    return new ZkLoginPublicIdentifier(tmp, options);
}
const VerifyZkLoginSignatureQuery = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$graphql$2f$schemas$2f$latest$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["graphql"])(`
	query Zklogin(
		$bytes: Base64!
		$signature: Base64!
		$intentScope: ZkLoginIntentScope!
		$author: SuiAddress!
	) {
		verifyZkloginSignature(
			bytes: $bytes
			signature: $signature
			intentScope: $intentScope
			author: $author
		) {
			success
			errors
		}
	}
`);
function normalizeZkLoginPublicKeyBytes(bytes, legacyAddress = false) {
    const issByteLength = bytes[0] + 1;
    const addressSeed = BigInt(`0x${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(bytes.slice(issByteLength))}`);
    const seedBytes = legacyAddress ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBigEndianBytes"])(addressSeed, 32) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toPaddedBigEndianBytes"])(addressSeed, 32);
    const data = new Uint8Array(issByteLength + seedBytes.length);
    data.set(bytes.slice(0, issByteLength), 0);
    data.set(seedBytes, issByteLength);
    return data;
}
async function graphqlVerifyZkLoginSignature({ address, bytes, signature, intentScope, client = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$graphql$2f$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SuiGraphQLClient"]({
    url: "https://sui-mainnet.mystenlabs.com/graphql"
}) }) {
    const resp = await client.query({
        query: VerifyZkLoginSignatureQuery,
        variables: {
            bytes,
            signature,
            intentScope,
            author: address
        }
    });
    return resp.data?.verifyZkloginSignature.success === true && resp.data?.verifyZkloginSignature.errors.length === 0;
}
function parseSerializedZkLoginSignature(signature) {
    const bytes = typeof signature === "string" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(signature) : signature;
    if (bytes[0] !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SIGNATURE_SCHEME_TO_FLAG"].ZkLogin) {
        throw new Error("Invalid signature scheme");
    }
    const signatureBytes = bytes.slice(1);
    const { inputs, maxEpoch, userSignature } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$signature$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseZkLoginSignature"])(signatureBytes);
    const { issBase64Details, addressSeed } = inputs;
    const iss = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$jwt$2d$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["extractClaimValue"])(issBase64Details, "iss");
    const publicIdentifer = toZkLoginPublicIdentifier(BigInt(addressSeed), iss);
    return {
        serializedSignature: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(bytes),
        signatureScheme: "ZkLogin",
        zkLogin: {
            inputs,
            maxEpoch,
            userSignature,
            iss,
            addressSeed: BigInt(addressSeed)
        },
        signature: bytes,
        publicKey: publicIdentifer.toRawBytes()
    };
}
;
 //# sourceMappingURL=publickey.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/cryptography/signature.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "parseSerializedSignature": (()=>parseSerializedSignature),
    "toSerializedSignature": (()=>toSerializedSignature)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b64.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/bcs/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$keypairs$2f$passkey$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/keypairs/passkey/publickey.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/zklogin/publickey.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/cryptography/publickey.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/cryptography/signature-scheme.js [app-client] (ecmascript)");
;
;
;
;
;
;
function toSerializedSignature({ signature, signatureScheme, publicKey }) {
    if (!publicKey) {
        throw new Error("`publicKey` is required");
    }
    const pubKeyBytes = publicKey.toRawBytes();
    const serializedSignature = new Uint8Array(1 + signature.length + pubKeyBytes.length);
    serializedSignature.set([
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SIGNATURE_SCHEME_TO_FLAG"][signatureScheme]
    ]);
    serializedSignature.set(signature, 1);
    serializedSignature.set(pubKeyBytes, 1 + signature.length);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(serializedSignature);
}
function parseSerializedSignature(serializedSignature) {
    const bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(serializedSignature);
    const signatureScheme = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SIGNATURE_FLAG_TO_SCHEME"][bytes[0]];
    switch(signatureScheme){
        case "Passkey":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$keypairs$2f$passkey$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseSerializedPasskeySignature"])(serializedSignature);
        case "MultiSig":
            const multisig = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$bcs$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bcs"].MultiSig.parse(bytes.slice(1));
            return {
                serializedSignature,
                signatureScheme,
                multisig,
                bytes,
                signature: void 0
            };
        case "ZkLogin":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$zklogin$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseSerializedZkLoginSignature"])(serializedSignature);
        case "ED25519":
        case "Secp256k1":
        case "Secp256r1":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseSerializedKeypairSignature"])(serializedSignature);
        default:
            throw new Error("Unsupported signature scheme");
    }
}
;
 //# sourceMappingURL=signature.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/cryptography/keypair.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Keypair": (()=>Keypair),
    "LEGACY_PRIVATE_KEY_SIZE": (()=>LEGACY_PRIVATE_KEY_SIZE),
    "PRIVATE_KEY_SIZE": (()=>PRIVATE_KEY_SIZE),
    "SUI_PRIVATE_KEY_PREFIX": (()=>SUI_PRIVATE_KEY_PREFIX),
    "Signer": (()=>Signer),
    "decodeSuiPrivateKey": (()=>decodeSuiPrivateKey),
    "encodeSuiPrivateKey": (()=>encodeSuiPrivateKey)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/bcs.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b64.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$blake2b$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@noble/hashes/esm/blake2b.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$scure$2f$base$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@scure/base/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$intent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/cryptography/intent.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/cryptography/signature-scheme.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/cryptography/signature.js [app-client] (ecmascript)");
;
;
;
;
;
;
const PRIVATE_KEY_SIZE = 32;
const LEGACY_PRIVATE_KEY_SIZE = 64;
const SUI_PRIVATE_KEY_PREFIX = "suiprivkey";
class Signer {
    /**
   * Sign messages with a specific intent. By combining the message bytes with the intent before hashing and signing,
   * it ensures that a signed message is tied to a specific purpose and domain separator is provided
   */ async signWithIntent(bytes, intent) {
        const intentMessage = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$intent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["messageWithIntent"])(intent, bytes);
        const digest = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$blake2b$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["blake2b"])(intentMessage, {
            dkLen: 32
        });
        const signature = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toSerializedSignature"])({
            signature: await this.sign(digest),
            signatureScheme: this.getKeyScheme(),
            publicKey: this.getPublicKey()
        });
        return {
            signature,
            bytes: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(bytes)
        };
    }
    /**
   * Signs provided transaction by calling `signWithIntent()` with a `TransactionData` provided as intent scope
   */ async signTransaction(bytes) {
        return this.signWithIntent(bytes, "TransactionData");
    }
    /**
   * Signs provided personal message by calling `signWithIntent()` with a `PersonalMessage` provided as intent scope
   */ async signPersonalMessage(bytes) {
        const { signature } = await this.signWithIntent(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].vector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$bcs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bcs"].u8()).serialize(bytes).toBytes(), "PersonalMessage");
        return {
            bytes: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBase64"])(bytes),
            signature
        };
    }
    toSuiAddress() {
        return this.getPublicKey().toSuiAddress();
    }
}
class Keypair extends Signer {
}
function decodeSuiPrivateKey(value) {
    const { prefix, words } = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$scure$2f$base$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bech32"].decode(value);
    if (prefix !== SUI_PRIVATE_KEY_PREFIX) {
        throw new Error("invalid private key prefix");
    }
    const extendedSecretKey = new Uint8Array(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$scure$2f$base$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bech32"].fromWords(words));
    const secretKey = extendedSecretKey.slice(1);
    const signatureScheme = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SIGNATURE_FLAG_TO_SCHEME"][extendedSecretKey[0]];
    return {
        schema: signatureScheme,
        secretKey
    };
}
function encodeSuiPrivateKey(bytes, scheme) {
    if (bytes.length !== PRIVATE_KEY_SIZE) {
        throw new Error("Invalid bytes length");
    }
    const flag = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SIGNATURE_SCHEME_TO_FLAG"][scheme];
    const privKeyBytes = new Uint8Array(bytes.length + 1);
    privKeyBytes.set([
        flag
    ]);
    privKeyBytes.set(bytes, 1);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$scure$2f$base$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bech32"].encode(SUI_PRIVATE_KEY_PREFIX, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$scure$2f$base$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bech32"].toWords(privKeyBytes));
}
;
 //# sourceMappingURL=keypair.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/cryptography/mnemonics.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "isValidBIP32Path": (()=>isValidBIP32Path),
    "isValidHardenedPath": (()=>isValidHardenedPath),
    "mnemonicToSeed": (()=>mnemonicToSeed),
    "mnemonicToSeedHex": (()=>mnemonicToSeedHex)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/hex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$scure$2f$bip39$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@scure/bip39/esm/index.js [app-client] (ecmascript)");
;
;
function isValidHardenedPath(path) {
    if (!new RegExp("^m\\/44'\\/784'\\/[0-9]+'\\/[0-9]+'\\/[0-9]+'+$").test(path)) {
        return false;
    }
    return true;
}
function isValidBIP32Path(path) {
    if (!new RegExp("^m\\/(54|74)'\\/784'\\/[0-9]+'\\/[0-9]+\\/[0-9]+$").test(path)) {
        return false;
    }
    return true;
}
function mnemonicToSeed(mnemonics) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$scure$2f$bip39$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mnemonicToSeedSync"])(mnemonics, "");
}
function mnemonicToSeedHex(mnemonics) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(mnemonicToSeed(mnemonics));
}
;
 //# sourceMappingURL=mnemonics.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/keypairs/ed25519/ed25519-hd-key.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "derivePath": (()=>derivePath)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/hex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$hmac$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@noble/hashes/esm/hmac.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$sha512$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@noble/hashes/esm/sha512.js [app-client] (ecmascript)");
;
;
;
const ED25519_CURVE = "ed25519 seed";
const HARDENED_OFFSET = 2147483648;
const pathRegex = new RegExp("^m(\\/[0-9]+')+$");
const replaceDerive = (val)=>val.replace("'", "");
const getMasterKeyFromSeed = (seed)=>{
    const h = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$hmac$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hmac"].create(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$sha512$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sha512"], ED25519_CURVE);
    const I = h.update((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromHex"])(seed)).digest();
    const IL = I.slice(0, 32);
    const IR = I.slice(32);
    return {
        key: IL,
        chainCode: IR
    };
};
const CKDPriv = ({ key, chainCode }, index)=>{
    const indexBuffer = new ArrayBuffer(4);
    const cv = new DataView(indexBuffer);
    cv.setUint32(0, index);
    const data = new Uint8Array(1 + key.length + indexBuffer.byteLength);
    data.set(new Uint8Array(1).fill(0));
    data.set(key, 1);
    data.set(new Uint8Array(indexBuffer, 0, indexBuffer.byteLength), key.length + 1);
    const I = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$hmac$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hmac"].create(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$sha512$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sha512"], chainCode).update(data).digest();
    const IL = I.slice(0, 32);
    const IR = I.slice(32);
    return {
        key: IL,
        chainCode: IR
    };
};
const isValidPath = (path)=>{
    if (!pathRegex.test(path)) {
        return false;
    }
    return !path.split("/").slice(1).map(replaceDerive).some(isNaN);
};
const derivePath = (path, seed, offset = HARDENED_OFFSET)=>{
    if (!isValidPath(path)) {
        throw new Error("Invalid derivation path");
    }
    const { key, chainCode } = getMasterKeyFromSeed(seed);
    const segments = path.split("/").slice(1).map(replaceDerive).map((el)=>parseInt(el, 10));
    return segments.reduce((parentKeys, segment)=>CKDPriv(parentKeys, segment + offset), {
        key,
        chainCode
    });
};
;
 //# sourceMappingURL=ed25519-hd-key.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/keypairs/ed25519/publickey.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Ed25519PublicKey": (()=>Ed25519PublicKey)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/bcs/dist/esm/b64.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@noble/curves/esm/ed25519.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/cryptography/publickey.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/cryptography/signature-scheme.js [app-client] (ecmascript)");
;
;
;
;
const PUBLIC_KEY_SIZE = 32;
class Ed25519PublicKey extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PublicKey"] {
    /**
   * Create a new Ed25519PublicKey object
   * @param value ed25519 public key as buffer or base-64 encoded string
   */ constructor(value){
        super();
        if (typeof value === "string") {
            this.data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$bcs$2f$dist$2f$esm$2f$b64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fromBase64"])(value);
        } else if (value instanceof Uint8Array) {
            this.data = value;
        } else {
            this.data = Uint8Array.from(value);
        }
        if (this.data.length !== PUBLIC_KEY_SIZE) {
            throw new Error(`Invalid public key input. Expected ${PUBLIC_KEY_SIZE} bytes, got ${this.data.length}`);
        }
    }
    /**
   * Checks if two Ed25519 public keys are equal
   */ equals(publicKey) {
        return super.equals(publicKey);
    }
    /**
   * Return the byte array representation of the Ed25519 public key
   */ toRawBytes() {
        return this.data;
    }
    /**
   * Return the Sui address associated with this Ed25519 public key
   */ flag() {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$signature$2d$scheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SIGNATURE_SCHEME_TO_FLAG"]["ED25519"];
    }
    /**
   * Verifies that the signature is valid for for the provided message
   */ async verify(message, signature) {
        let bytes;
        if (typeof signature === "string") {
            const parsed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseSerializedKeypairSignature"])(signature);
            if (parsed.signatureScheme !== "ED25519") {
                throw new Error("Invalid signature scheme");
            }
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesEqual"])(this.toRawBytes(), parsed.publicKey)) {
                throw new Error("Signature does not match public key");
            }
            bytes = parsed.signature;
        } else {
            bytes = signature;
        }
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ed25519"].verify(bytes, message, this.toRawBytes());
    }
}
Ed25519PublicKey.SIZE = PUBLIC_KEY_SIZE;
;
 //# sourceMappingURL=publickey.js.map
}}),
"[project]/node_modules/@mysten/sui/dist/esm/keypairs/ed25519/keypair.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "DEFAULT_ED25519_DERIVATION_PATH": (()=>DEFAULT_ED25519_DERIVATION_PATH),
    "Ed25519Keypair": (()=>Ed25519Keypair)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@noble/curves/esm/ed25519.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$keypair$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/cryptography/keypair.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$mnemonics$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/cryptography/mnemonics.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$keypairs$2f$ed25519$2f$ed25519$2d$hd$2d$key$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/keypairs/ed25519/ed25519-hd-key.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$keypairs$2f$ed25519$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mysten/sui/dist/esm/keypairs/ed25519/publickey.js [app-client] (ecmascript)");
;
;
;
;
;
const DEFAULT_ED25519_DERIVATION_PATH = "m/44'/784'/0'/0'/0'";
class Ed25519Keypair extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$keypair$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Keypair"] {
    /**
   * Create a new Ed25519 keypair instance.
   * Generate random keypair if no {@link Ed25519Keypair} is provided.
   *
   * @param keypair Ed25519 keypair
   */ constructor(keypair){
        super();
        if (keypair) {
            this.keypair = {
                publicKey: keypair.publicKey,
                secretKey: keypair.secretKey.slice(0, 32)
            };
        } else {
            const privateKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ed25519"].utils.randomPrivateKey();
            this.keypair = {
                publicKey: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ed25519"].getPublicKey(privateKey),
                secretKey: privateKey
            };
        }
    }
    /**
   * Get the key scheme of the keypair ED25519
   */ getKeyScheme() {
        return "ED25519";
    }
    /**
   * Generate a new random Ed25519 keypair
   */ static generate() {
        const secretKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ed25519"].utils.randomPrivateKey();
        return new Ed25519Keypair({
            publicKey: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ed25519"].getPublicKey(secretKey),
            secretKey
        });
    }
    /**
   * Create a Ed25519 keypair from a raw secret key byte array, also known as seed.
   * This is NOT the private scalar which is result of hashing and bit clamping of
   * the raw secret key.
   *
   * @throws error if the provided secret key is invalid and validation is not skipped.
   *
   * @param secretKey secret key as a byte array or Bech32 secret key string
   * @param options: skip secret key validation
   */ static fromSecretKey(secretKey, options) {
        if (typeof secretKey === "string") {
            const decoded = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$keypair$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeSuiPrivateKey"])(secretKey);
            if (decoded.schema !== "ED25519") {
                throw new Error(`Expected a ED25519 keypair, got ${decoded.schema}`);
            }
            return this.fromSecretKey(decoded.secretKey, options);
        }
        const secretKeyLength = secretKey.length;
        if (secretKeyLength !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$keypair$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PRIVATE_KEY_SIZE"]) {
            throw new Error(`Wrong secretKey size. Expected ${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$keypair$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PRIVATE_KEY_SIZE"]} bytes, got ${secretKeyLength}.`);
        }
        const keypair = {
            publicKey: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ed25519"].getPublicKey(secretKey),
            secretKey
        };
        if (!options || !options.skipValidation) {
            const encoder = new TextEncoder();
            const signData = encoder.encode("sui validation");
            const signature = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ed25519"].sign(signData, secretKey);
            if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ed25519"].verify(signature, signData, keypair.publicKey)) {
                throw new Error("provided secretKey is invalid");
            }
        }
        return new Ed25519Keypair(keypair);
    }
    /**
   * The public key for this Ed25519 keypair
   */ getPublicKey() {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$keypairs$2f$ed25519$2f$publickey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Ed25519PublicKey"](this.keypair.publicKey);
    }
    /**
   * The Bech32 secret key string for this Ed25519 keypair
   */ getSecretKey() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$keypair$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeSuiPrivateKey"])(this.keypair.secretKey.slice(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$keypair$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PRIVATE_KEY_SIZE"]), this.getKeyScheme());
    }
    /**
   * Return the signature for the provided data using Ed25519.
   */ async sign(data) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ed25519"].sign(data, this.keypair.secretKey);
    }
    /**
   * Derive Ed25519 keypair from mnemonics and path. The mnemonics must be normalized
   * and validated against the english wordlist.
   *
   * If path is none, it will default to m/44'/784'/0'/0'/0', otherwise the path must
   * be compliant to SLIP-0010 in form m/44'/784'/{account_index}'/{change_index}'/{address_index}'.
   */ static deriveKeypair(mnemonics, path) {
        if (path == null) {
            path = DEFAULT_ED25519_DERIVATION_PATH;
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$mnemonics$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidHardenedPath"])(path)) {
            throw new Error("Invalid derivation path");
        }
        const { key } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$keypairs$2f$ed25519$2f$ed25519$2d$hd$2d$key$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["derivePath"])(path, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$mnemonics$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mnemonicToSeedHex"])(mnemonics));
        return Ed25519Keypair.fromSecretKey(key);
    }
    /**
   * Derive Ed25519 keypair from mnemonicSeed and path.
   *
   * If path is none, it will default to m/44'/784'/0'/0'/0', otherwise the path must
   * be compliant to SLIP-0010 in form m/44'/784'/{account_index}'/{change_index}'/{address_index}'.
   */ static deriveKeypairFromSeed(seedHex, path) {
        if (path == null) {
            path = DEFAULT_ED25519_DERIVATION_PATH;
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$cryptography$2f$mnemonics$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidHardenedPath"])(path)) {
            throw new Error("Invalid derivation path");
        }
        const { key } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mysten$2f$sui$2f$dist$2f$esm$2f$keypairs$2f$ed25519$2f$ed25519$2d$hd$2d$key$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["derivePath"])(path, seedHex);
        return Ed25519Keypair.fromSecretKey(key);
    }
}
;
 //# sourceMappingURL=keypair.js.map
}}),
}]);

//# sourceMappingURL=node_modules_%40mysten_sui_dist_esm_feb89e69._.js.map